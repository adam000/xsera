data = {
	title = [[Ares]];
	downloadUrl = [[http://www.arescentral.com]];
	author = [[Bigger Planet]];
	authorUrl = [[http://www.biggerplanet.com]];
	identifier = [[com.BiggerPlanet.Ares
]];
	identifier = [[]];
	isNetworkable = false;
	customObjects = false;
	customRaces = false;
	customScenarios = false;
	isUnoptimized = false;
	hex = 31;
	objects = {
		[0] = {
			name = [[Cruiser]];
			shortName = [[CRUISER]];
			notes = [[Development Notes]];
			staticName = [[Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 200;
			race = 100;
			price = 1000;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 5.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.156250;
			health = 1000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 501;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 1;
					positions = {
						[1] = {
							x = 0.000000;
							y = -10.000000;
						};
						[2] = {
							x = 0.000000;
							y = 10.000000;
						};
					};
				};
				pulse = {
					id = 60;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1001;
		};
		[1] = {
			name = [[P-K Beam Cannon]];
			shortName = [[PKBEAM 1]];
			notes = [[P-K Beam Cannon]];
			staticName = [[P-K Beam Cannon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 2;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 10;
				reload = 20;
				ammo = -1;
				range = 50625;
				inverseSpeed = 17;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[2] = {
			name = [[P-K Beam]];
			shortName = [[PK BEAM]];
			notes = [[P-K Beam]];
			staticName = [[P-K Beam]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = true;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 30;
			initialAge = 25;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 500;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			beam = {
				hex = 0;
				type = [[kinetic]];
				mode = nil;
				color = 5;
				accuracy = 131072;
				range = 256.000000;
			};
			portraitId = 0;
		};
		[3] = {
			name = [[Fusion Pulse]];
			shortName = [[FPULSE 1]];
			notes = [[Fusion Pulse]];
			staticName = [[Fusion Pulse]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 7.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 7.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = 40;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 503;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[offline]];
							minimum = -30.000000;
							range = 60.000000;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[thrust]];
							relative = true;
							minimum = 12;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[current turn rate]];
							minimum = -2.000000;
							range = 4.000000;
						};
						[3] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[4] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 502;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 0.000000;
				turnAcceleration = 0.000000;
			};
			portraitId = 0;
		};
		[4] = {
			name = [[Rap F Pulse React]];
			shortName = [[RF PULSE]];
			notes = [[Rap F Pulse React]];
			staticName = [[Rap F Pulse React]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 3;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 13;
				ammo = 150;
				range = 78400;
				inverseSpeed = 36;
				restockCost = 12;
			};
			portraitId = 0;
		};
		[5] = {
			name = [[Antimatter Pulse]];
			shortName = [[A PULSE]];
			notes = [[Antimatter Pulse]];
			staticName = [[Antimatter Pulse]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 7.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 7.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = 40;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 508;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[offline]];
							minimum = -30.000000;
							range = 60.000000;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[thrust]];
							relative = true;
							minimum = 12;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[current turn rate]];
							minimum = -2.000000;
							range = 4.000000;
						};
						[3] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[4] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 505;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 4;
				direction = 1;
				directionRange = 0;
				speed = 8;
				speedRange = 0;
				shape = 0;
				shapeRange = 4;
			};
			portraitId = 0;
		};
		[6] = {
			name = [[Antimatter Pulse Reactor Type II]];
			shortName = [[APULSE 2]];
			notes = [[Antimatter Pulse Reactor Type II]];
			staticName = [[Antimatter Pulse Reactor Type II]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 9;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 50;
				ammo = 50;
				range = 90000;
				inverseSpeed = 42;
				restockCost = 24;
			};
			portraitId = 0;
		};
		[7] = {
			name = [[Cruiser]];
			shortName = [[CRUISER]];
			notes = [[Cruiser]];
			staticName = [[Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 200;
			race = 200;
			price = 1000;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 5.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.156250;
			health = 1000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 502;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 15;
					positions = {
						[1] = {
							x = 0.000000;
							y = -5.000000;
						};
						[2] = {
							x = 0.000000;
							y = 5.000000;
						};
					};
				};
				pulse = {
					id = 18;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 57;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1008;
		};
		[8] = {
			name = [[Energy Explosion]];
			shortName = [[EXPLSN]];
			notes = [[Energy Explosion]];
			staticName = [[Energy Explosion]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 0.250000;
			layer = 3;
			spriteId = 504;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 503;
							soundIdRange = 0;
						};
						[1] = {
							type = [[make sparks]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							count = 67174400;
							velocity = 0;
							velocityRange = 0;
							color = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 18;
				lastShape = 20;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 18;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[9] = {
			name = [[Antimatter Pulse Type II]];
			shortName = [[APULSE 2]];
			notes = [[Antimatter Pulse Type II]];
			staticName = [[Antimatter Pulse Type II]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 500;
			initialAge = 30;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 3;
			spriteId = 508;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 34;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = true;
							minimum = 24.000000;
							range = 24.000000;
						};
						[2] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[offline]];
							minimum = -2.000000;
							range = 4.000000;
						};
						[3] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 505;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 26;
							min = 2;
							range = 3;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 3;
				direction = 1;
				directionRange = 0;
				speed = 10;
				speedRange = 0;
				shape = 0;
				shapeRange = 3;
			};
			portraitId = 0;
		};
		[10] = {
			name = [[Combustion Explosion]];
			shortName = [[EXPLSN]];
			notes = [[Combustion Explosion]];
			staticName = [[Combustion Explosion]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 504;
			iconShape = [[square]];
			iconSize = 2;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 5;
							persistence = 60;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 501;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 11;
							min = 1;
							range = 2;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 32;
						};
						[2] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 12;
							min = 1;
							range = 2;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 32;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 17;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[11] = {
			name = [[Debris]];
			shortName = [[DEBRIS]];
			notes = [[Debris]];
			staticName = [[Debris]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 4.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 1.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 10;
			energy = 0;
			damage = 8;
			initialAge = 160;
			initialAgeRange = 160;
			scale = 1.000000;
			layer = 2;
			spriteId = 507;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 8;
				direction = 1;
				directionRange = 0;
				speed = 100;
				speedRange = 0;
				shape = 0;
				shapeRange = 8;
			};
			portraitId = 0;
		};
		[12] = {
			name = [[Debris]];
			shortName = [[DERBIS]];
			notes = [[Debris]];
			staticName = [[Debris]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 4.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 1.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 10;
			energy = 0;
			damage = 6;
			initialAge = 160;
			initialAgeRange = 160;
			scale = 1.000000;
			layer = 2;
			spriteId = 507;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 9;
				lastShape = 17;
				direction = 1;
				directionRange = 0;
				speed = 100;
				speedRange = 0;
				shape = 9;
				shapeRange = 8;
			};
			portraitId = 0;
		};
		[13] = {
			name = [[Fighter]];
			shortName = [[FIGHTER]];
			notes = [[Fighter]];
			staticName = [[Fighter]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 100;
			race = 100;
			price = 600;
			buildTime = 600;
			buildRatio = 0.750000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 6.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 6.000000;
			initialVelocityRange = 0.000000;
			mass = 0.796875;
			thrust = 0.097656;
			health = 100;
			energy = 600;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 510;
			iconShape = [[triangle]];
			iconSize = 3;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 1;
					positions = {
						[1] = {
							x = 0.000000;
							y = -3.000000;
						};
						[2] = {
							x = 0.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 2.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 3.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1014;
		};
		[14] = {
			name = [[Fighter]];
			shortName = [[FIGHTER]];
			notes = [[Fighter]];
			staticName = [[Fighter]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 100;
			race = 200;
			price = 600;
			buildTime = 600;
			buildRatio = 0.750000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 6.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 6.000000;
			initialVelocityRange = 0.000000;
			mass = 0.796875;
			thrust = 0.097656;
			health = 100;
			energy = 600;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 512;
			iconShape = [[triangle]];
			iconSize = 3;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 15;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 2.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 3.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1015;
		};
		[15] = {
			name = [[P-K Beam Cannon]];
			shortName = [[PKBEAM 1]];
			notes = [[P-K Beam Cannon]];
			staticName = [[P-K Beam Cannon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = -5;
			initialDirectionRange = 10;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 16;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 10;
				reload = 20;
				ammo = -1;
				range = 50625;
				inverseSpeed = 17;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[16] = {
			name = [[P-K Beam]];
			shortName = [[PK BEAM]];
			notes = [[P-K Beam]];
			staticName = [[P-K Beam]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = true;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 30;
			initialAge = 15;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 504;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			beam = {
				hex = 0;
				type = [[kinetic]];
				mode = nil;
				color = 16;
				accuracy = 1966080;
				range = 256.000000;
			};
			portraitId = 0;
		};
		[17] = {
			name = [[Gunship]];
			shortName = [[GUNSHIP]];
			notes = [[Gunship]];
			staticName = [[Gunship]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 300;
			race = 200;
			price = 2200;
			buildTime = 2000;
			buildRatio = 0.347656;
			offence = 2.000000;
			escortRank = 5;
			maxVelocity = 4.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 4.000000;
			initialVelocityRange = 0.000000;
			mass = 1.199219;
			thrust = 0.039062;
			health = 3000;
			energy = 2000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 506;
			iconShape = [[triangle]];
			iconSize = 5;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 15;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 6;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 1.000000;
			dangerThreshold = -10.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.199219;
				turnAcceleration = 1.000000;
			};
			portraitId = 1018;
		};
		[18] = {
			name = [[Antimatter Pulse Reactor]];
			shortName = [[APULSE 1]];
			notes = [[Antimatter Pulse Reactor]];
			staticName = [[Antimatter Pulse Reactor]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 5;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 60;
				ammo = 50;
				range = 78400;
				inverseSpeed = 36;
				restockCost = 24;
			};
			portraitId = 0;
		};
		[19] = {
			name = [[Gunship]];
			shortName = [[GUNSHIP]];
			notes = [[Gunship]];
			staticName = [[Gunship]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 300;
			race = 100;
			price = 2200;
			buildTime = 2000;
			buildRatio = 0.347656;
			offence = 1.500000;
			escortRank = 5;
			maxVelocity = 4.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 4.000000;
			initialVelocityRange = 0.000000;
			mass = 1.199219;
			thrust = 0.039062;
			health = 3000;
			energy = 2000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 509;
			iconShape = [[triangle]];
			iconSize = 5;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 6.000000;
						};
						[2] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 20;
					positions = {
						[1] = {
							x = 0.000000;
							y = 15.000000;
						};
						[2] = {
							x = 0.000000;
							y = -15.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 1.000000;
			dangerThreshold = -10.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.199219;
				turnAcceleration = 1.000000;
			};
			portraitId = 1020;
		};
		[20] = {
			name = [[Lepton Beam Cannon]];
			shortName = [[LBEAM 1]];
			notes = [[Lepton Beam Cannon]];
			staticName = [[Lepton Beam Cannon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 21;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 10;
				reload = 8;
				ammo = -1;
				range = 160000;
				inverseSpeed = 12;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[21] = {
			name = [[Lepton Beam]];
			shortName = [[L BEAM]];
			notes = [[Lepton Beam]];
			staticName = [[Lepton Beam]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = true;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.648438;
			health = 1000;
			energy = 0;
			damage = 80;
			initialAge = 29;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 512;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			beam = {
				hex = 0;
				type = [[kinetic]];
				mode = nil;
				color = 9;
				accuracy = 2424832;
				range = 256.000000;
			};
			portraitId = 0;
		};
		[22] = {
			name = [[Castaway Crew Member]];
			shortName = [[CREW]];
			notes = [[Castaway Crew Member]];
			staticName = [[Castaway Crew Member]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 1.500000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1;
			energy = 0;
			damage = 1;
			initialAge = 1000;
			initialAgeRange = 500;
			scale = 0.500000;
			layer = 2;
			spriteId = 513;
			iconShape = [[framed square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 2.000000;
			};
			portraitId = 0;
		};
		[23] = {
			name = [[Planet]];
			shortName = [[PLANET]];
			notes = [[Planet]];
			staticName = [[Planet]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = true;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = true;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = true;
				levelKey2 = true;
				levelKey3 = true;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = 10;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = -1;
			energy = -1;
			damage = 1;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 1;
			spriteId = 1001;
			iconShape = [[framed square]];
			iconSize = 8;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 3.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[24] = {
			name = [[Transport]];
			shortName = [[TRANSPRT]];
			notes = [[Transport]];
			staticName = [[Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = true;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = true;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = true;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = true;
				orderKey2 = true;
				orderKey3 = true;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 800;
			race = 100;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.097656;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 250;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 515;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[land at]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							speed = 32;
						};
						[1] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							priority = 5;
							persistence = 20;
							isAbsolute = true;
							volume = 255;
							volumeRange = 0;
							soundId = 513;
							soundIdRange = 0;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = true;
							value = 0;
						};
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1025;
		};
		[25] = {
			name = [[Transport]];
			shortName = [[TRANSPRT]];
			notes = [[Transport]];
			staticName = [[Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = true;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = true;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = true;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = true;
				orderKey2 = true;
				orderKey3 = true;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 800;
			race = 200;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.148438;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 250;
			energy = 800;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 514;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[land at]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							speed = 32;
						};
						[1] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							priority = 5;
							persistence = 20;
							isAbsolute = true;
							volume = 255;
							volumeRange = 0;
							soundId = 513;
							soundIdRange = 0;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = true;
							value = 0;
						};
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1026;
		};
		[26] = {
			name = [[Antimatter Pulse]];
			shortName = [[A PULSE]];
			notes = [[Antimatter Pulse]];
			staticName = [[Antimatter Pulse]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 7.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 7.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = 40;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 508;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = -30;
			initialDirectionRange = 60;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[offline]];
							minimum = -30.000000;
							range = 60.000000;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[thrust]];
							relative = true;
							minimum = 12;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[current turn rate]];
							minimum = -2.000000;
							range = 4.000000;
						};
						[3] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[4] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 4;
				direction = 1;
				directionRange = 0;
				speed = 8;
				speedRange = 0;
				shape = 0;
				shapeRange = 4;
			};
			portraitId = 0;
		};
		[27] = {
			name = [[Sun]];
			shortName = [[SUN]];
			notes = [[Sun]];
			staticName = [[Sun]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 1;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 1;
			spriteId = 516;
			iconShape = [[framed square]];
			iconSize = 9;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[28] = {
			name = [[Energy]];
			shortName = [[ENERGY]];
			notes = [[Energy]];
			staticName = [[Energy]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 2.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 2.000000;
			mass = 1.000000;
			thrust = 0.500000;
			health = 100;
			energy = 0;
			damage = 0;
			initialAge = 540;
			initialAgeRange = 70;
			scale = 1.000000;
			layer = 3;
			spriteId = 517;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 18;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 1024;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[energy]];
							value = 150;
						};
						[1] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = 1024;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
						[2] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = 1024;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 514;
							soundIdRange = 0;
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 2;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 0;
				shapeRange = 2;
			};
			portraitId = 0;
		};
		[29] = {
			name = [[Large Explosion]];
			shortName = [[EXPLSN]];
			notes = [[Large Explosion]];
			staticName = [[Large Explosion]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 3;
			spriteId = 504;
			iconShape = [[square]];
			iconSize = 2;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 4;
							persistence = 60;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 515;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 11;
							min = 1;
							range = 2;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[2] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 22;
							min = 1;
							range = 2;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 17;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 1030;
		};
		[30] = {
			name = [[Superlight Boosters]];
			shortName = [[LGHTDRVE]];
			notes = [[Superlight Boosters]];
			staticName = [[Superlight Boosters]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 1000;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 6.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 6.000000;
			initialVelocityRange = 6.000000;
			mass = 1.000000;
			thrust = 2.000000;
			health = 100;
			energy = 0;
			damage = 0;
			initialAge = 540;
			initialAgeRange = 70;
			scale = 1.000000;
			layer = 3;
			spriteId = 518;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 5000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 1024;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[special weapon]];
							id = 6;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 23;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 0;
				shapeRange = 23;
			};
			portraitId = 0;
		};
		[31] = {
			name = [[ProtoPulse Cannon]];
			shortName = [[PULSCANN]];
			notes = [[ProtoPulse Cannon]];
			staticName = [[ProtoPulse Cannon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 43;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 25;
				ammo = 100;
				range = 270400;
				inverseSpeed = 17;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[32] = {
			name = [[Warp In Flare]];
			shortName = [[WARP IN]];
			notes = [[Warp In Flare]];
			staticName = [[Warp In Flare]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 3;
			spriteId = 519;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 517;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 2;
				direction = 1;
				directionRange = 0;
				speed = 20;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[33] = {
			name = [[Warp Out Flare]];
			shortName = [[WARP OUT]];
			notes = [[Warp Out Flare]];
			staticName = [[Warp Out Flare]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 3;
			spriteId = 519;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 518;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 2;
				direction = -1;
				directionRange = 0;
				speed = 20;
				speedRange = 0;
				shape = 2;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[34] = {
			name = [[Large Hit Explosion]];
			shortName = [[EXPLSN]];
			notes = [[Large Hit Explosion]];
			staticName = [[Large Hit Explosion]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 0.750000;
			layer = 3;
			spriteId = 554;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 501;
							soundIdRange = 0;
						};
						[1] = {
							type = [[make sparks]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							count = 67174400;
							velocity = 0;
							velocityRange = 0;
							color = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 11;
				direction = 1;
				directionRange = 0;
				speed = 60;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[35] = {
			name = [[Small Destruction Explosion]];
			shortName = [[EXPLSN]];
			notes = [[Small Destruction Explosion]];
			staticName = [[Small Destruction Explosion]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 0.500000;
			layer = 3;
			spriteId = 504;
			iconShape = [[square]];
			iconSize = 2;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 501;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 17;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[36] = {
			name = [[Sensor Relay Station]];
			shortName = [[RLAYSTTN]];
			notes = [[Sensor Relay Station]];
			staticName = [[Sensor Relay Station]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = true;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 552;
			iconShape = [[framed square]];
			iconSize = 6;
			shieldColor = 14;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[change score]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 0;
							amount = 1;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[37] = {
			name = [[Cruiser]];
			shortName = [[CRUISER]];
			notes = [[Cruiser]];
			staticName = [[Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 200;
			race = 300;
			price = 800;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 3.500000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.500000;
			initialVelocityRange = 0.000000;
			mass = 0.898438;
			thrust = 0.156250;
			health = 650;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 550;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 14;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 39;
					positions = {
						[1] = {
							x = 0.000000;
							y = -10.000000;
						};
						[2] = {
							x = 0.000000;
							y = 10.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.500000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1038;
		};
		[38] = {
			name = [[Fighter]];
			shortName = [[FIGHTER]];
			notes = [[Fighter]];
			staticName = [[Fighter]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 100;
			race = 300;
			price = 500;
			buildTime = 500;
			buildRatio = 0.500000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 5.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.097656;
			health = 50;
			energy = 600;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 551;
			iconShape = [[triangle]];
			iconSize = 3;
			shieldColor = 14;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 226;
					positions = {
						[1] = {
							x = 0.000000;
							y = -3.000000;
						};
						[2] = {
							x = 0.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 3.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[39] = {
			name = [[Concsv Pellet Gun]];
			shortName = [[CCPLTGUN]];
			notes = [[Machine gun]];
			staticName = [[Concsv Pellet Gun]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 40;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 0;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 550;
							soundIdRange = 0;
						};
						[2] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 124;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 10;
				reload = 5;
				ammo = -1;
				range = 50625;
				inverseSpeed = 17;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[40] = {
			name = [[Concussive Pellet]];
			shortName = [[CCPELLET]];
			notes = [[Invisible Bullet]];
			staticName = [[Concussive Pellet]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = true;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 30;
			initialAge = 15;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 15;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 552;
							soundIdRange = 1;
						};
						[1] = {
							type = [[make sparks]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							count = 67174400;
							velocity = 0;
							velocityRange = 0;
							color = 0;
						};
						[2] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			beam = {
				hex = 0;
				type = [[kinetic]];
				mode = nil;
				color = 1;
				accuracy = 4456448;
				range = 256.000000;
			};
			portraitId = 0;
		};
		[41] = {
			name = [[SL Transport]];
			shortName = [[TRANSPRT]];
			notes = [[SL Transport]];
			staticName = [[SL Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = true;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 801;
			race = 100;
			price = 800;
			buildTime = 1500;
			buildRatio = 0.097656;
			offence = 3.000000;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.199219;
			thrust = 0.156250;
			health = 250;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 515;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 3.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[land at]];
							reflexive = false;
							inclusiveFilter = 1048576;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							speed = 32;
						};
						[1] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = 1048576;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							priority = 5;
							persistence = 20;
							isAbsolute = true;
							volume = 255;
							volumeRange = 0;
							soundId = 513;
							soundIdRange = 0;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[42] = {
			name = [[Escort]];
			shortName = [[ESCORT]];
			notes = [[Escort]];
			staticName = [[Escort]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 400;
			race = 400;
			price = 1500;
			buildTime = 2000;
			buildRatio = 0.750000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 6.500000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 6.500000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.156250;
			health = 1500;
			energy = 1500;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 532;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 1;
					positions = {
						[1] = {
							x = 0.000000;
							y = -10.000000;
						};
						[2] = {
							x = 0.000000;
							y = 10.000000;
						};
					};
				};
				pulse = {
					id = 162;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 57;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = -5.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1043;
		};
		[43] = {
			name = [[Protopulse]];
			shortName = [[PROPULS]];
			notes = [[Protopulse]];
			staticName = [[Protopulse]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 13.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 13.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = 40;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 547;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = -15;
			initialDirectionRange = 30;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 519;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 5;
				direction = 1;
				directionRange = 0;
				speed = 14;
				speedRange = 0;
				shape = 0;
				shapeRange = 5;
			};
			portraitId = 0;
		};
		[44] = {
			name = [[Twin Pulse Cannon]];
			shortName = [[TWNPPULS]];
			notes = [[Twin Pulse Cannon]];
			staticName = [[Twin Pulse Cannon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 43;
							min = 2;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 25;
				ammo = 110;
				range = 270400;
				inverseSpeed = 2147483647;
				restockCost = 36;
			};
			portraitId = 0;
		};
		[45] = {
			name = [[Carrier]];
			shortName = [[CARRIER]];
			notes = [[Carrier]];
			staticName = [[Carrier]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 500;
			race = 200;
			price = 4500;
			buildTime = 10000;
			buildRatio = 0.097656;
			offence = 4.000000;
			escortRank = 7;
			maxVelocity = 3.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 22503164;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 2.000000;
			thrust = 0.007812;
			health = 5000;
			energy = 5000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 524;
			iconShape = [[diamond]];
			iconSize = 8;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 50;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 73;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 46;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1046;
		};
		[46] = {
			name = [[Launching Bay]];
			shortName = [[LANCHBAY]];
			notes = [[Launching Bay]];
			staticName = [[Launching Bay]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 520;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 14;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = true;
					hex = 7;
				};
				energyCost = 0;
				reload = 200;
				ammo = 10;
				range = 100000;
				inverseSpeed = 35;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[47] = {
			name = [[Carrier]];
			shortName = [[CARRIER]];
			notes = [[Carrier]];
			staticName = [[Carrier]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 500;
			race = 100;
			price = 4500;
			buildTime = 6000;
			buildRatio = 0.097656;
			offence = 4.000000;
			escortRank = 7;
			maxVelocity = 3.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 22503164;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 2.000000;
			thrust = 0.007812;
			health = 5000;
			energy = 5000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 525;
			iconShape = [[diamond]];
			iconSize = 8;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 73;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 44;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 48;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1048;
		};
		[48] = {
			name = [[Launching Bay]];
			shortName = [[LANCHBAY]];
			notes = [[Launching Bay]];
			staticName = [[Launching Bay]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 2;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 520;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 13;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = true;
					hex = 7;
				};
				energyCost = 0;
				reload = 200;
				ammo = 10;
				range = 100000;
				inverseSpeed = 35;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[49] = {
			name = [[Cluster Cell]];
			shortName = [[CLSTRCEL]];
			notes = [[Cluster Cell]];
			staticName = [[Cluster Cell]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 7.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 6.000000;
			initialVelocityRange = 2.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 25;
			initialAge = 40;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 526;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = -5;
			initialDirectionRange = 10;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 1;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[50] = {
			name = [[ClusterCell Array]];
			shortName = [[CLSTRCEL]];
			notes = [[ClusterCell Array]];
			staticName = [[ClusterCell Array]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 0;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 521;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 49;
							min = 1;
							range = 3;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 15;
				ammo = 110;
				range = 78400;
				inverseSpeed = 2147483647;
				restockCost = 50;
			};
			portraitId = 0;
		};
		[51] = {
			name = [[Debris]];
			shortName = [[DEBRIS]];
			notes = [[Debris]];
			staticName = [[Debris]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 1.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 10;
			energy = 0;
			damage = 6;
			initialAge = 160;
			initialAgeRange = 160;
			scale = 1.000000;
			layer = 2;
			spriteId = 507;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 18;
				lastShape = 23;
				direction = 1;
				directionRange = 0;
				speed = 30;
				speedRange = 0;
				shape = 18;
				shapeRange = 8;
			};
			portraitId = 0;
		};
		[52] = {
			name = [[Giant Explosion]];
			shortName = [[EXPLSN]];
			notes = [[Giant Explosion]];
			staticName = [[Giant Explosion]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.500000;
			layer = 3;
			spriteId = 504;
			iconShape = [[square]];
			iconSize = 2;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 4;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 515;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 11;
							min = 8;
							range = 8;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[2] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 12;
							min = 8;
							range = 8;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[3] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 51;
							min = 8;
							range = 8;
							velocityRelative = true;
							directionRelative = false;
							distanceRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 17;
				direction = 1;
				directionRange = 0;
				speed = 25;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[53] = {
			name = [[Missile Hit]];
			shortName = [[HIT]];
			notes = [[Missile Hit]];
			staticName = [[Missile Hit]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 0.250000;
			layer = 3;
			spriteId = 554;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 503;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 11;
				direction = 1;
				directionRange = 0;
				speed = 90;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[54] = {
			name = [[Defense Drone]];
			shortName = [[DEFDRONE]];
			notes = [[Defense Drone]];
			staticName = [[Defense Drone]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = true;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = true;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = true;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = true;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 600;
			race = 100;
			price = 1000;
			buildTime = 1000;
			buildRatio = 0.500000;
			offence = 1.500000;
			escortRank = 9;
			maxVelocity = 0.347656;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.097656;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.046875;
			health = 1500;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 527;
			iconShape = [[triangle]];
			iconSize = 3;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 55;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 4;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 5.000000;
				turnAcceleration = 0.000000;
			};
			portraitId = 1055;
		};
		[55] = {
			name = [[Rapid P-K Cannon]];
			shortName = [[PKBEAM 2]];
			notes = [[Rapid P-K Cannon]];
			staticName = [[Rapid P-K Cannon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 2;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 5;
				reload = 7;
				ammo = -1;
				range = 50625;
				inverseSpeed = 17;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[56] = {
			name = [[Defense Drone]];
			shortName = [[DEFDRONE]];
			notes = [[Defense Drone]];
			staticName = [[Defense Drone]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = true;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = true;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = true;
				hardTargetIsRemote = false;
				hardTargetIsLocal = true;
				hardTargetIsFoe = false;
				hardTargetIsFriend = true;
				hardTargetIsNotBase = false;
				hardTargetIsBase = true;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 600;
			race = 200;
			price = 1000;
			buildTime = 1000;
			buildRatio = 0.500000;
			offence = 1.500000;
			escortRank = 9;
			maxVelocity = 0.347656;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.347656;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.046875;
			health = 1500;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 529;
			iconShape = [[triangle]];
			iconSize = 3;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 55;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 18;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 5.000000;
				turnAcceleration = 0.000000;
			};
			portraitId = 1057;
		};
		[57] = {
			name = [[Stealth Field]];
			shortName = [[STEALTH]];
			notes = [[Stealth Field]];
			staticName = [[Stealth Field]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[cloak]];
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = true;
					attacking = false;
					defence = true;
					hex = 7;
				};
				energyCost = 1;
				reload = 9;
				ammo = -1;
				range = 0;
				inverseSpeed = 0;
				restockCost = 0;
			};
			portraitId = 0;
		};
		[58] = {
			name = [[Schooner]];
			shortName = [[SCHOONER]];
			notes = [[Schooner]];
			staticName = [[Schooner]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 221;
			race = 100;
			price = 1000;
			buildTime = 1000;
			buildRatio = 0.750000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 7.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.296875;
			health = 750;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 534;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 1;
					positions = {
						[1] = {
							x = 0.000000;
							y = -10.000000;
						};
						[2] = {
							x = 0.000000;
							y = 10.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 3.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[59] = {
			name = [[Schooner]];
			shortName = [[SCHOONER]];
			notes = [[Schooner]];
			staticName = [[Schooner]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 221;
			race = 200;
			price = 1000;
			buildTime = 1000;
			buildRatio = 0.750000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 7.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.296875;
			health = 750;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 533;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 15;
					positions = {
						[1] = {
							x = 0.000000;
							y = -5.000000;
						};
						[2] = {
							x = 0.000000;
							y = 5.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 3.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1060;
		};
		[60] = {
			name = [[F Pulse Reactor]];
			shortName = [[F PULSE]];
			notes = [[F Pulse Reactor]];
			staticName = [[F Pulse Reactor]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 3;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 35;
				ammo = 50;
				range = 78400;
				inverseSpeed = 2147483647;
				restockCost = 24;
			};
			portraitId = 0;
		};
		[61] = {
			name = [[Heavy Cruiser]];
			shortName = [[HVCRUISR]];
			notes = [[Heavy Cruiser]];
			staticName = [[Heavy Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 250;
			race = 100;
			price = 1500;
			buildTime = 1500;
			buildRatio = 0.796875;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 5.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 13505625;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.156250;
			health = 1000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 521;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 55;
					positions = {
						[1] = {
							x = 0.000000;
							y = -10.000000;
						};
						[2] = {
							x = 0.000000;
							y = 10.000000;
						};
					};
				};
				pulse = {
					id = 4;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 74;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1062;
		};
		[62] = {
			name = [[Heavy Cruiser]];
			shortName = [[HVCRUISR]];
			notes = [[Heavy Cruiser]];
			staticName = [[Heavy Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 250;
			race = 200;
			price = 1500;
			buildTime = 1500;
			buildRatio = 0.796875;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 5.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.156250;
			health = 1000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 523;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 15;
					positions = {
						[1] = {
							x = 0.000000;
							y = -5.000000;
						};
						[2] = {
							x = 0.000000;
							y = 5.000000;
						};
					};
				};
				pulse = {
					id = 63;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 57;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1063;
		};
		[63] = {
			name = [[Rap A Pulse React]];
			shortName = [[RPAPULSE]];
			notes = [[Rap A Pulse React]];
			staticName = [[Rap A Pulse React]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 5;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 16;
				ammo = 150;
				range = 78400;
				inverseSpeed = 2147483647;
				restockCost = 24;
			};
			portraitId = 0;
		};
		[64] = {
			name = [[Gunship]];
			shortName = [[GUNSHIP]];
			notes = [[Gunship]];
			staticName = [[Gunship]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 300;
			race = 300;
			price = 1500;
			buildTime = 2000;
			buildRatio = 0.250000;
			offence = 1.500000;
			escortRank = 5;
			maxVelocity = 5.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.398438;
			thrust = 0.097656;
			health = 650;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 553;
			iconShape = [[triangle]];
			iconSize = 5;
			shieldColor = 14;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 39;
					positions = {
						[1] = {
							x = 0.000000;
							y = -10.000000;
						};
						[2] = {
							x = 0.000000;
							y = 10.000000;
						};
					};
				};
				pulse = {
					id = 65;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.500000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1065;
		};
		[65] = {
			name = [[Atomic Pulse Gun]];
			shortName = [[ATOMPLSE]];
			notes = [[Atomic Pulse Gun]];
			staticName = [[Atomic Pulse Gun]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 7.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 307;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 66;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 240;
				ammo = 100;
				range = 4618201;
				inverseSpeed = 36;
				restockCost = 80;
			};
			portraitId = 0;
		};
		[66] = {
			name = [[Atomic Pulse]];
			shortName = [[ATOMPLSE]];
			notes = [[Atomic Pulse]];
			staticName = [[Atomic Pulse]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = true;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 7.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 2.000000;
			initialVelocityRange = 0.000000;
			mass = 4.000000;
			thrust = 0.097656;
			health = 5;
			energy = 0;
			damage = 200;
			initialAge = 307;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 548;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 255;
							min = 1;
							range = 2;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 16;
						};
					};
					interval = 3;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 34;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = true;
							minimum = 24.000000;
							range = 24.000000;
						};
						[2] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[offline]];
							minimum = -2.000000;
							range = 4.000000;
						};
						[3] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 561;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 5;
				direction = 1;
				directionRange = 0;
				speed = 80;
				speedRange = 0;
				shape = 0;
				shapeRange = 5;
			};
			portraitId = 0;
		};
		[67] = {
			name = [[Battleship]];
			shortName = [[BTTLSHIP]];
			notes = [[Battleship]];
			staticName = [[Battleship]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 550;
			race = 500;
			price = 6000;
			buildTime = 10000;
			buildRatio = 0.097656;
			offence = 4.500000;
			escortRank = 7;
			maxVelocity = 4.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 21709776;
			initialVelocity = 4.000000;
			initialVelocityRange = 0.000000;
			mass = 2.500000;
			thrust = 0.019531;
			health = 6500;
			energy = 6500;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 535;
			iconShape = [[diamond]];
			iconSize = 8;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 70;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 68;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 10;
				turnRate = 1.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1068;
		};
		[68] = {
			name = [[R-Plasma Launcher]];
			shortName = [[RPLASMA]];
			notes = [[R-Plasma Launcher]];
			staticName = [[R-Plasma Launcher]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 69;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 26;
				ammo = 150;
				range = 2073600;
				inverseSpeed = 28;
				restockCost = 18;
			};
			portraitId = 0;
		};
		[69] = {
			name = [[R-Plasma]];
			shortName = [[RPLASMA]];
			notes = [[R-Plasma]];
			staticName = [[R-Plasma]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = true;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 7.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.199219;
			health = 1000;
			energy = 0;
			damage = 200;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 538;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[offline]];
							minimum = -30.000000;
							range = 60.000000;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[thrust]];
							relative = true;
							minimum = 12;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[current turn rate]];
							minimum = -2.000000;
							range = 4.000000;
						};
						[3] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[4] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 530;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 8;
				direction = 1;
				directionRange = 0;
				speed = 34;
				speedRange = 0;
				shape = 0;
				shapeRange = 8;
			};
			portraitId = 0;
		};
		[70] = {
			name = [[Z Beam Cannon]];
			shortName = [[Z BEAM]];
			notes = [[Z Beam Cannon]];
			staticName = [[Z Beam Cannon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 71;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 17;
				ammo = -1;
				range = 270400;
				inverseSpeed = 19;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[71] = {
			name = [[Z Beam]];
			shortName = [[Z BEAM]];
			notes = [[Z Beam]];
			staticName = [[Z Beam]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = true;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 30;
			initialAge = 15;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 531;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			beam = {
				hex = 0;
				type = [[kinetic]];
				mode = nil;
				color = 13;
				accuracy = 131072;
				range = 256.000000;
			};
			portraitId = 0;
		};
		[72] = {
			name = [[C Missile]];
			shortName = [[CMISSILE]];
			notes = [[C Missile]];
			staticName = [[C Missile]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = true;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.199219;
			health = 25;
			energy = 0;
			damage = 200;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 528;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 79;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 30;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 533;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.000000;
				turnAcceleration = 0.000000;
			};
			portraitId = 0;
		};
		[73] = {
			name = [[C Missile Launch]];
			shortName = [[CMISSILE]];
			notes = [[C Missile Launch]];
			staticName = [[C Missile Launch]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 72;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 70;
				ammo = 150;
				range = 2073600;
				inverseSpeed = 28;
				restockCost = 64;
			};
			portraitId = 0;
		};
		[74] = {
			name = [[C Missiles(5)]];
			shortName = [[CMISSILE]];
			notes = [[C Missiles(5)]];
			staticName = [[C Missiles(5)]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 72;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 120;
				ammo = 5;
				range = 2073600;
				inverseSpeed = 28;
				restockCost = 64;
			};
			portraitId = 0;
		};
		[75] = {
			name = [[Tractor Moor]];
			shortName = [[MOOR]];
			notes = [[Tractor Moor]];
			staticName = [[Tractor Moor]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 540;
			iconShape = [[plus]];
			iconSize = 3;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[change score]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 0;
							amount = 1;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 11;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 0;
				shapeRange = 11;
			};
			portraitId = 1076;
		};
		[76] = {
			name = [[Alter Battleship]];
			shortName = [[ALTERTST]];
			notes = [[Alter Battleship]];
			staticName = [[Alter Battleship]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = -5;
			initialDirectionRange = 10;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 67;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 10;
				reload = 20;
				ammo = -1;
				range = 50625;
				inverseSpeed = 17;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[77] = {
			name = [[Battleship-Moored]];
			shortName = [[BTTLSHIP]];
			notes = [[Battleship-Moored]];
			staticName = [[Battleship-Moored]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 550;
			race = 500;
			price = 6000;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = 7;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 2.500000;
			thrust = 0.000000;
			health = 6500;
			energy = 6500;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 535;
			iconShape = [[diamond]];
			iconSize = 9;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 10;
				turnRate = 1.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[78] = {
			name = [[Border Drone]];
			shortName = [[BRDRDRNE]];
			notes = [[Border Drone]];
			staticName = [[Border Drone]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 601;
			race = 200;
			price = 1000;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 1.500000;
			escortRank = 9;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 15000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 542;
			iconShape = [[framed square]];
			iconSize = 3;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 55;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 18;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 73;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 5.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1079;
		};
		[79] = {
			name = [[Gas Explosion]];
			shortName = [[EXPLSN]];
			notes = [[Gas Explosion]];
			staticName = [[Gas Explosion]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 541;
			iconShape = [[square]];
			iconSize = 2;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 4;
							persistence = 30;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 532;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 27;
				direction = 1;
				directionRange = 0;
				speed = 70;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[80] = {
			name = [[Astrominer]];
			shortName = [[ASTROMNR]];
			notes = [[Astrominer]];
			staticName = [[Astrominer]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = true;
				engageKey2 = true;
				engageKey3 = false;
				engageKey4 = true;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 301;
			race = 100;
			price = 800;
			buildTime = 1200;
			buildRatio = 0.000000;
			offence = 1.500000;
			escortRank = 5;
			maxVelocity = 4.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 4.000000;
			initialVelocityRange = 0.000000;
			mass = 1.199219;
			thrust = 0.148438;
			health = 700;
			energy = 2000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 546;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 6.000000;
						};
						[2] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 82;
					positions = {
						[1] = {
							x = 0.000000;
							y = 15.000000;
						};
						[2] = {
							x = 0.000000;
							y = -15.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 1.000000;
			dangerThreshold = -10.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 0.796875;
				turnAcceleration = 1.000000;
			};
			portraitId = 1081;
		};
		[81] = {
			name = [[Lightwave Pulse]];
			shortName = [[L PULSE]];
			notes = [[Lightwave Pulse]];
			staticName = [[Lightwave Pulse]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 13.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 9.000000;
			initialVelocityRange = 0.000000;
			mass = 0.019531;
			thrust = 0.097656;
			health = 1000;
			energy = 0;
			damage = 50;
			initialAge = 20;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 548;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = -3;
			initialDirectionRange = 6;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = true;
							minimum = -0.046875;
							range = 0.000000;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[2] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 5;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 0;
				shapeRange = 5;
			};
			portraitId = 0;
		};
		[82] = {
			name = [[Lightwave Cannon]];
			shortName = [[L PULSE]];
			notes = [[Lightwave Cannon]];
			staticName = [[Lightwave Cannon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 9.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 20;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 81;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 5;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 534;
							soundIdRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 8;
				ammo = -1;
				range = 32400;
				inverseSpeed = 28;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[83] = {
			name = [[Asteroid]];
			shortName = [[ASTEROID]];
			notes = [[Asteroid]];
			staticName = [[Asteroid]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = true;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.500000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 1.000000;
			mass = 10.000000;
			thrust = 0.000000;
			health = 10000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 543;
			iconShape = [[framed square]];
			iconSize = 4;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 1.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 257;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 84;
							min = 3;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 21;
				direction = -1;
				directionRange = -1;
				speed = 30;
				speedRange = 0;
				shape = 0;
				shapeRange = 20;
			};
			portraitId = 0;
		};
		[84] = {
			name = [[Astroid Fragment]];
			shortName = [[ASTRFRGM]];
			notes = [[Astroid Fragment]];
			staticName = [[Astroid Fragment]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 1.500000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 1.500000;
			initialVelocityRange = 1.000000;
			mass = 3.000000;
			thrust = 0.000000;
			health = 2500;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 544;
			iconShape = [[framed square]];
			iconSize = 3;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 85;
							min = 3;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 21;
				direction = 1;
				directionRange = 0;
				speed = 30;
				speedRange = 0;
				shape = 0;
				shapeRange = 20;
			};
			portraitId = 0;
		};
		[85] = {
			name = [[Asteroid Debris]];
			shortName = [[ASTRDBRS]];
			notes = [[Asteroid Debris]];
			staticName = [[Asteroid Debris]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 4.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 4.000000;
			initialVelocityRange = 1.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 545;
			iconShape = [[framed square]];
			iconSize = 2;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[change score]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 1;
							amount = 1;
						};
						[1] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 5;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 514;
							soundIdRange = 0;
						};
						[2] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 21;
				direction = 1;
				directionRange = 0;
				speed = 30;
				speedRange = 0;
				shape = 0;
				shapeRange = 20;
			};
			portraitId = 0;
		};
		[86] = {
			name = [[Transport]];
			shortName = [[TRANSPRT]];
			notes = [[Transport]];
			staticName = [[Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = true;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = true;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = true;
				orderKey2 = true;
				orderKey3 = true;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 800;
			race = 300;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.199219;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 250;
			energy = 800;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 563;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[land at]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							speed = 32;
						};
						[1] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							priority = 5;
							persistence = 20;
							isAbsolute = true;
							volume = 255;
							volumeRange = 0;
							soundId = 513;
							soundIdRange = 0;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = true;
							value = 0;
						};
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1087;
		};
		[87] = {
			name = [[Carrier]];
			shortName = [[CARRIER]];
			notes = [[Carrier]];
			staticName = [[Carrier]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 500;
			race = 300;
			price = 4500;
			buildTime = 10000;
			buildRatio = 0.097656;
			offence = 4.000000;
			escortRank = 7;
			maxVelocity = 3.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 22503164;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 2.000000;
			thrust = 0.007812;
			health = 5000;
			energy = 5000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 560;
			iconShape = [[diamond]];
			iconSize = 8;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 92;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 73;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 39;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[88] = {
			name = [[Transport]];
			shortName = [[TRANSPRT]];
			notes = [[Transport]];
			staticName = [[Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = true;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = true;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = true;
				levelKey2 = true;
				levelKey3 = true;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = true;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 800;
			race = 400;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.097656;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 2000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 567;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 96;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[land at]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							speed = 32;
						};
						[1] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							priority = 5;
							persistence = 20;
							isAbsolute = true;
							volume = 255;
							volumeRange = 0;
							soundId = 513;
							soundIdRange = 0;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = true;
							value = 0;
						};
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1089;
		};
		[89] = {
			name = [[Battlecruiser]];
			shortName = [[BTTLCRSR]];
			notes = [[Battlecruiser]];
			staticName = [[Battlecruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 550;
			race = 400;
			price = 6000;
			buildTime = 10000;
			buildRatio = 0.097656;
			offence = 4.500000;
			escortRank = 7;
			maxVelocity = 4.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 4.000000;
			initialVelocityRange = 0.000000;
			mass = 2.500000;
			thrust = 0.019531;
			health = 6500;
			energy = 6500;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 565;
			iconShape = [[diamond]];
			iconSize = 7;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 70;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 44;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1090;
		};
		[90] = {
			name = [[Clustercell 2]];
			shortName = [[CLSTR2]];
			notes = [[Clustercell 2]];
			staticName = [[Clustercell 2]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 7.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 6.000000;
			initialVelocityRange = 2.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 25;
			initialAge = 200;
			initialAgeRange = 100;
			scale = 1.000000;
			layer = 3;
			spriteId = 526;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 1;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[91] = {
			name = [[Kamikaze]];
			shortName = [[KAMIKAZI]];
			notes = [[Kamikaze]];
			staticName = [[Kamikaze]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 99;
			race = 300;
			price = 500;
			buildTime = 500;
			buildRatio = 0.500000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 8.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.097656;
			health = 50;
			energy = 600;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 551;
			iconShape = [[square]];
			iconSize = 3;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = -3.000000;
						};
						[2] = {
							x = 0.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = 2;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							how = [[destroy]];
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 90;
							min = 20;
							range = 10;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 79;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[2] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 3.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[92] = {
			name = [[Launching Bay]];
			shortName = [[LAUNCHBY]];
			notes = [[Launching Bay]];
			staticName = [[Launching Bay]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 520;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 38;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = true;
					hex = 7;
				};
				energyCost = 0;
				reload = 200;
				ammo = 10;
				range = 100000;
				inverseSpeed = 35;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[93] = {
			name = [[Flak Drone]];
			shortName = [[FLCKDRON]];
			notes = [[Flak Drone]];
			staticName = [[Flak Drone]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = true;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = true;
				levelKey2 = false;
				levelKey3 = true;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 9999;
			race = -1;
			price = 1000;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 1.500000;
			escortRank = 9;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 15000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 542;
			iconShape = [[framed square]];
			iconSize = 3;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 108;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 18;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 73;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 5.000000;
				turnAcceleration = 0.000000;
			};
			portraitId = 1094;
		};
		[94] = {
			name = [[Engineer Pod]];
			shortName = [[ENGINEER]];
			notes = [[Engineer Pod]];
			staticName = [[Engineer Pod]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = true;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = true;
				levelKey2 = false;
				levelKey3 = true;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = true;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = true;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = true;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = true;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = true;
				hardTargetIsBase = false;
				orderKey1 = true;
				orderKey2 = false;
				orderKey3 = true;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 850;
			race = 300;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.199219;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 800;
			energy = 200;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 561;
			iconShape = [[plus]];
			iconSize = 4;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 96;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 5000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 1342177280;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[velocity]];
							relative = false;
							minimum = 0.000000;
							range = 0.000000;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 1342177280;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[max velocity]];
							value = 0.000000;
						};
						[2] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 1342177280;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 570;
							soundIdRange = 0;
						};
						[3] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = 1342177280;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 160;
							how = [[expire]];
						};
						[4] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 1342177280;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = true;
							value = 0;
						};
						[5] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[max velocity]];
							value = -0.003906;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 5;
							persistence = 60;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 501;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 11;
							min = 1;
							range = 2;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 32;
						};
						[2] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 12;
							min = 1;
							range = 2;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 32;
						};
						[3] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[4] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1095;
		};
		[95] = {
			name = [[Engineer Pod]];
			shortName = [[ENGINEER]];
			notes = [[Engineer Pod]];
			staticName = [[Engineer Pod]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = true;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = true;
				levelKey2 = false;
				levelKey3 = true;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = true;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = true;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = true;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = true;
				hardTargetIsBase = false;
				orderKey1 = true;
				orderKey2 = false;
				orderKey3 = true;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 850;
			race = 100;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.199219;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 800;
			energy = 200;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 562;
			iconShape = [[plus]];
			iconSize = 4;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 96;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 5000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 1342177280;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[velocity]];
							relative = false;
							minimum = 0.000000;
							range = 0.000000;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 1342177280;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[max velocity]];
							value = 0.000000;
						};
						[2] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 1342177280;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 570;
							soundIdRange = 0;
						};
						[3] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = 1342177280;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 160;
							how = [[expire]];
						};
						[4] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 1342177280;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = true;
							value = 0;
						};
						[5] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[max velocity]];
							value = -0.003906;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 5;
							persistence = 60;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 501;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 11;
							min = 1;
							range = 2;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 32;
						};
						[2] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 12;
							min = 1;
							range = 2;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 32;
						};
						[3] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[4] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1096;
		};
		[96] = {
			name = [[Repulser]];
			shortName = [[REPULSER]];
			notes = [[Rupulser]];
			staticName = [[Repulser]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 30;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 97;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = true;
					hex = 7;
				};
				energyCost = 40;
				reload = 25;
				ammo = -1;
				range = 202500;
				inverseSpeed = 17;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[97] = {
			name = [[Repulser Beam]];
			shortName = [[REPULSE]];
			notes = [[Repulser Beam]];
			staticName = [[Repulser Beam]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = true;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 30;
			initialAge = 30;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[offline]];
							minimum = -30.000000;
							range = 60.000000;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[thrust]];
							relative = true;
							minimum = 12;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[current turn rate]];
							minimum = -2.000000;
							range = 4.000000;
						};
						[3] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[4] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 531;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			beam = {
				hex = 0;
				type = [[kinetic]];
				mode = nil;
				color = 11;
				accuracy = 131072;
				range = 256.000000;
			};
			portraitId = 0;
		};
		[98] = {
			name = [[Assault Team]];
			shortName = [[ASLTTEAM]];
			notes = [[Assault Team]];
			staticName = [[Assault Team]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 4;
							persistence = 30;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 10312;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object set destination]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 99;
							min = 6;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 240;
				ammo = 2;
				range = 2073600;
				inverseSpeed = 28;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[99] = {
			name = [[EVA Trooper]];
			shortName = [[EVATROOP]];
			notes = [[EVA Trooper]];
			staticName = [[EVA Trooper]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = true;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = true;
				engageKey1 = false;
				engageKey2 = true;
				engageKey3 = false;
				engageKey4 = true;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = true;
				orderKey3 = false;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 10;
			race = 100;
			price = 600;
			buildTime = 600;
			buildRatio = 0.000000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 0.500000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 0.000000;
			mass = 0.007812;
			thrust = 0.019531;
			health = 10;
			energy = 50;
			damage = 0;
			initialAge = 4000;
			initialAgeRange = 0;
			scale = 0.500000;
			layer = 2;
			spriteId = 549;
			iconShape = [[triangle]];
			iconSize = 1;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 102;
					positions = {
						[1] = {
							x = 0.000000;
							y = -3.000000;
						};
						[2] = {
							x = 0.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 2.000000;
			arriveActionDistance = 5000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							how = [[expire]];
						};
						[1] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							priority = 4;
							persistence = 60;
							isAbsolute = true;
							volume = 255;
							volumeRange = 0;
							soundId = 31989;
							soundIdRange = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[occupation]];
							value = 1;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 12558;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 6.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[100] = {
			name = [[Station]];
			shortName = [[STATION]];
			notes = [[Station]];
			staticName = [[Station]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = true;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = true;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = true;
				levelKey3 = false;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = 10;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = -1;
			energy = -1;
			damage = 1;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 1;
			spriteId = 1001;
			iconShape = [[framed square]];
			iconSize = 7;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 3.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[101] = {
			name = [[Assault Transport]];
			shortName = [[ASLTTRAN]];
			notes = [[Assault Transport]];
			staticName = [[Assault Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = true;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = true;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = true;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = true;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = true;
				orderKey3 = false;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 860;
			race = 100;
			price = 2000;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.199219;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 1200;
			energy = 800;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 559;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 55;
					positions = {
						[1] = {
							x = 0.000000;
							y = -8.000000;
						};
						[2] = {
							x = 0.000000;
							y = 8.000000;
						};
					};
				};
				pulse = {
					id = 74;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 98;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 8.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 320000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[activate special]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[activate special]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1102;
		};
		[102] = {
			name = [[Hand PK Beam]];
			shortName = [[HANDBEAM]];
			notes = [[Hand PK Beam]];
			staticName = [[Hand PK Beam]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 10.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 15;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 2;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 10;
				reload = 20;
				ammo = -1;
				range = 22500;
				inverseSpeed = 25;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[103] = {
			name = [[PK Beam]];
			shortName = [[PK BEAM]];
			notes = [[PK Beam]];
			staticName = [[PK Beam]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = true;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 10.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 30;
			initialAge = 15;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 500;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			beam = {
				hex = 0;
				type = [[kinetic]];
				mode = nil;
				color = 5;
				accuracy = 131072;
				range = 256.000000;
			};
			portraitId = 0;
		};
		[104] = {
			name = [[Bunker Station]];
			shortName = [[STATION]];
			notes = [[Bunker Station]];
			staticName = [[Bunker Station]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = true;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = true;
				isDestination = true;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = true;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = true;
				levelKey3 = false;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = 10;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 5000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 5;
			scale = 2.000000;
			layer = 1;
			spriteId = 643;
			iconShape = [[framed square]];
			iconSize = 7;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = 96;
					positions = {
					};
				};
				pulse = {
					id = 31;
					positions = {
					};
				};
				special = {
					id = 73;
					positions = {
					};
				};
			};
			friendDefecit = 3.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 1105;
		};
		[105] = {
			name = [[Flak Shell]];
			shortName = [[FLAKSHL]];
			notes = [[Flak Shell]];
			staticName = [[Flak Shell]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 5.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 25;
			initialAge = 15;
			initialAgeRange = 30;
			scale = 0.500000;
			layer = 3;
			spriteId = 526;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = -15;
			initialDirectionRange = 30;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 107;
							min = 8;
							range = 4;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 106;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 107;
							min = 8;
							range = 4;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 106;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 1;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[106] = {
			name = [[Flak Explosion]];
			shortName = [[FLAKEXP]];
			notes = [[Flak Explosion]];
			staticName = [[Flak Explosion]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 3;
			spriteId = 557;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 536;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 5;
				direction = 1;
				directionRange = 0;
				speed = 120;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[107] = {
			name = [[Flak]];
			shortName = [[FLAK]];
			notes = [[Flak]];
			staticName = [[Flak]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 5.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 5.000000;
			initialVelocityRange = 1.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 10;
			energy = 0;
			damage = 50;
			initialAge = 10;
			initialAgeRange = 10;
			scale = 0.500000;
			layer = 3;
			spriteId = 507;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 8;
				direction = 1;
				directionRange = 0;
				speed = 100;
				speedRange = 0;
				shape = 0;
				shapeRange = 8;
			};
			portraitId = 0;
		};
		[108] = {
			name = [[Flak Artillery]];
			shortName = [[FLAKART]];
			notes = [[Flak Artillery]];
			staticName = [[Flak Artillery]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 60;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 105;
							min = 1;
							range = 2;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 15;
				ammo = -1;
				range = 810000;
				inverseSpeed = 17;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[109] = {
			name = [[Research Vessel]];
			shortName = [[RESEARCH]];
			notes = [[Research Vessel]];
			staticName = [[Research Vessel]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = true;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = true;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 802;
			race = 100;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.097656;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 1000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 585;
			iconShape = [[plus]];
			iconSize = 7;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 0.500000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1110;
		};
		[110] = {
			name = [[Cruiser]];
			shortName = [[CRUISER]];
			notes = [[Cruiser]];
			staticName = [[Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 200;
			race = 600;
			price = 1000;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 5.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.156250;
			health = 1500;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 530;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 134;
					positions = {
						[1] = {
							x = 0.000000;
							y = -5.000000;
						};
						[2] = {
							x = 0.000000;
							y = 5.000000;
						};
					};
				};
				pulse = {
					id = 18;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 57;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1111;
		};
		[111] = {
			name = [[Moon]];
			shortName = [[MOON]];
			notes = [[Moon]];
			staticName = [[Moon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = true;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = true;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = true;
				levelKey2 = true;
				levelKey3 = true;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = 10;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = -1;
			energy = -1;
			damage = 1;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 1001;
			iconShape = [[framed square]];
			iconSize = 6;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 3.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[112] = {
			name = [[Fighter]];
			shortName = [[FIGHTER]];
			notes = [[Fighter]];
			staticName = [[Fighter]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 100;
			race = 600;
			price = 600;
			buildTime = 600;
			buildRatio = 0.750000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 6.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 6.000000;
			initialVelocityRange = 0.000000;
			mass = 0.796875;
			thrust = 0.097656;
			health = 600;
			energy = 600;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 566;
			iconShape = [[triangle]];
			iconSize = 3;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 134;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 2.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 3.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1113;
		};
		[113] = {
			name = [[Carrier]];
			shortName = [[CARRIER]];
			notes = [[Carrier]];
			staticName = [[Carrier]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 500;
			race = 600;
			price = 6000;
			buildTime = 10000;
			buildRatio = 0.097656;
			offence = 4.500000;
			escortRank = 7;
			maxVelocity = 4.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 4.000000;
			initialVelocityRange = 0.000000;
			mass = 2.500000;
			thrust = 0.019531;
			health = 7500;
			energy = 6500;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 648;
			iconShape = [[diamond]];
			iconSize = 8;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 135;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 259;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 132;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1114;
		};
		[114] = {
			name = [[Power Station]];
			shortName = [[POWERSTN]];
			notes = [[Power Station]];
			staticName = [[Power Station]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = true;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 564;
			iconShape = [[framed square]];
			iconSize = 6;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 1115;
		};
		[115] = {
			name = [[Orbital Shipyard]];
			shortName = [[ORBTYARD]];
			notes = [[Orbital Shipyard]];
			staticName = [[Orbital Shipyard]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = true;
				levelKey3 = true;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 1;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 3;
			spriteId = 641;
			iconShape = [[framed square]];
			iconSize = 7;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[116] = {
			name = [[Battleship]];
			shortName = [[BTTLSHIP]];
			notes = [[Battleship]];
			staticName = [[Battleship]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 550;
			race = 900;
			price = 6000;
			buildTime = 10000;
			buildRatio = 0.097656;
			offence = 4.500000;
			escortRank = 7;
			maxVelocity = 6.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 2.500000;
			thrust = 0.078125;
			health = 6500;
			energy = 6500;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 636;
			iconShape = [[diamond]];
			iconSize = 9;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = 73;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 44;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[117] = {
			name = [[Jump Gate Effect]];
			shortName = [[JUMPGATE]];
			notes = [[Jump Gate Effect]];
			staticName = [[Jump Gate Effect]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 1;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 1;
			spriteId = 558;
			iconShape = [[none]];
			iconSize = 15;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 4;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 9800;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 28;
				direction = 1;
				directionRange = 0;
				speed = 15;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[118] = {
			name = [[Cargo Ship]];
			shortName = [[CARGO]];
			notes = [[Cargo Ship]];
			staticName = [[Cargo Ship]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = true;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 811;
			race = 100;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.097656;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 250;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 640;
			iconShape = [[plus]];
			iconSize = 6;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 20000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[change score]];
							reflexive = false;
							inclusiveFilter = 1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 0;
							amount = 1;
						};
						[1] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = 1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 117;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1119;
		};
		[119] = {
			name = [[Assault Transport]];
			shortName = [[ASLTTRAN]];
			notes = [[Assault Transport]];
			staticName = [[Assault Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = true;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = true;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = true;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = true;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = true;
				orderKey3 = false;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 860;
			race = 200;
			price = 2000;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.199219;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 1200;
			energy = 800;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 637;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 55;
					positions = {
						[1] = {
							x = 0.000000;
							y = -8.000000;
						};
						[2] = {
							x = 0.000000;
							y = 8.000000;
						};
					};
				};
				pulse = {
					id = 74;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 122;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 5.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 320000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[activate special]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[activate special]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1120;
		};
		[120] = {
			name = [[Engineer Pod]];
			shortName = [[ENGINEER]];
			notes = [[Engineer Pod]];
			staticName = [[Engineer Pod]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = true;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = true;
				levelKey2 = false;
				levelKey3 = true;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = true;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = true;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = true;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = true;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = true;
				hardTargetIsBase = false;
				orderKey1 = true;
				orderKey2 = false;
				orderKey3 = true;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 850;
			race = 200;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.199219;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 800;
			energy = 200;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 642;
			iconShape = [[plus]];
			iconSize = 4;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 96;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 5000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 1342177280;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[velocity]];
							relative = false;
							minimum = 0.000000;
							range = 0.000000;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 1342177280;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[max velocity]];
							value = 0.000000;
						};
						[2] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 1342177280;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 570;
							soundIdRange = 0;
						};
						[3] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = 1342177280;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 160;
							how = [[expire]];
						};
						[4] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 1342177280;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = true;
							value = 0;
						};
						[5] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[max velocity]];
							value = -0.003906;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 5;
							persistence = 60;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 501;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 11;
							min = 1;
							range = 2;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 32;
						};
						[2] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 12;
							min = 1;
							range = 2;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 32;
						};
						[3] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[4] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1121;
		};
		[121] = {
			name = [[EVA Trooper]];
			shortName = [[EVATROOP]];
			notes = [[EVA Trooper]];
			staticName = [[EVA Trooper]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = true;
				engageKey1 = false;
				engageKey2 = true;
				engageKey3 = false;
				engageKey4 = true;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = true;
				orderKey3 = false;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 10;
			race = 200;
			price = 600;
			buildTime = 600;
			buildRatio = 0.000000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 0.500000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 0.000000;
			mass = 0.007812;
			thrust = 0.019531;
			health = 10;
			energy = 50;
			damage = 0;
			initialAge = 4000;
			initialAgeRange = 0;
			scale = 0.500000;
			layer = 2;
			spriteId = 638;
			iconShape = [[triangle]];
			iconSize = 1;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 102;
					positions = {
						[1] = {
							x = 0.000000;
							y = -3.000000;
						};
						[2] = {
							x = 0.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 2.000000;
			arriveActionDistance = 5000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							how = [[expire]];
						};
						[1] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							priority = 4;
							persistence = 60;
							isAbsolute = true;
							volume = 255;
							volumeRange = 0;
							soundId = 31989;
							soundIdRange = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[occupation]];
							value = 1;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 12558;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 6.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[122] = {
			name = [[Assault Team]];
			shortName = [[ASSAULT]];
			notes = [[Assault Team]];
			staticName = [[Assault Team]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 567;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object set destination]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 121;
							min = 6;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 240;
				ammo = 2;
				range = 2073600;
				inverseSpeed = 28;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[123] = {
			name = [[Retroburst]];
			shortName = [[RTROBRST]];
			notes = [[Retroburst]];
			staticName = [[Retroburst]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 14;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 524;
							soundIdRange = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = false;
							minimum = -15.000000;
							range = 0.000000;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 7;
							alterType = [[velocity]];
							relative = false;
							minimum = 0.000000;
							range = 0.000000;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = true;
					hex = 7;
				};
				energyCost = 10;
				reload = 15;
				ammo = -1;
				range = 0;
				inverseSpeed = 0;
				restockCost = 0;
			};
			portraitId = 0;
		};
		[124] = {
			name = [[Gunsmoke]];
			shortName = [[GUNSMOKE]];
			notes = [[Gunsmoke]];
			staticName = [[Gunsmoke]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 4;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 645;
			iconShape = [[none]];
			iconSize = 15;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 0.000000;
				turnAcceleration = 0.000000;
			};
			portraitId = 0;
		};
		[125] = {
			name = [[Luxury Liner]];
			shortName = [[LUXLINER]];
			notes = [[Liner Disabled]];
			staticName = [[Luxury Liner]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = false;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 803;
			race = 800;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.000000;
			escortRank = 9;
			maxVelocity = 0.500000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.000000;
			health = 250;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 647;
			iconShape = [[plus]];
			iconSize = 7;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[1] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[The Elejeetian liner was destroyed.]];
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[126] = {
			name = [[Luxury Liner]];
			shortName = [[LUXLINER]];
			notes = [[Luxury Liner]];
			staticName = [[Luxury Liner]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = true;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = true;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 803;
			race = 800;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.000000;
			escortRank = 9;
			maxVelocity = 2.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.199219;
			health = 250;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 647;
			iconShape = [[plus]];
			iconSize = 7;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[1] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[The Elejeetian liner was destroyed.]];
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 17;
							text = [[The Elejeetian liner successfully exited through the jumpgate. Minister Jommo pledges to do what he can to convince his Emperor to provide you with ships or technology.]];
						};
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1127;
		};
		[127] = {
			name = [[Tractor Tug]];
			shortName = [[TUG]];
			notes = [[Tractor Tug]];
			staticName = [[Tractor Tug]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 301;
			race = 100;
			price = 2200;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 1.500000;
			escortRank = 5;
			maxVelocity = 2.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 0.000000;
			mass = 1.199219;
			thrust = 0.179688;
			health = 700;
			energy = 2000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 546;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 6.000000;
						};
						[2] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 15.000000;
						};
						[2] = {
							x = 0.000000;
							y = -15.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 1.000000;
			dangerThreshold = -10.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 61;
							min = 2;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 117;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 0.398438;
				turnAcceleration = 1.000000;
			};
			portraitId = 1128;
		};
		[128] = {
			name = [[Escape Pod]];
			shortName = [[ESCPEPOD]];
			notes = [[Escape Pod]];
			staticName = [[Escape Pod]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = false;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 801;
			race = 800;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.000000;
			escortRank = 9;
			maxVelocity = 1.500000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 1.500000;
			initialVelocityRange = 0.000000;
			mass = 0.097656;
			thrust = 0.000000;
			health = 250;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 568;
			iconShape = [[plus]];
			iconSize = 3;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[change score]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 1;
							amount = 1;
						};
						[1] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 5;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 514;
							soundIdRange = 0;
						};
						[2] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[1] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[One of the escape pods was destroyed.]];
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 14;
				direction = 1;
				directionRange = 0;
				speed = 12;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 1129;
		};
		[129] = {
			name = [[Heavy Destroyer]];
			shortName = [[HVDSTRYR]];
			notes = [[Heavy Destroyer]];
			staticName = [[Heavy Destroyer]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 450;
			race = 100;
			price = 6500;
			buildTime = 6500;
			buildRatio = 0.097656;
			offence = 4.000000;
			escortRank = 7;
			maxVelocity = 4.500000;
			warpSpeed = 40.000000;
			warpOutDistance = 22503164;
			initialVelocity = 1.500000;
			initialVelocityRange = 0.000000;
			mass = 1.449219;
			thrust = 0.078125;
			health = 2000;
			energy = 2000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 646;
			iconShape = [[triangle]];
			iconSize = 6;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 20;
					positions = {
						[1] = {
							x = 0.000000;
							y = -5.000000;
						};
						[2] = {
							x = 0.000000;
							y = 0.000000;
						};
						[3] = {
							x = 0.000000;
							y = 5.000000;
						};
					};
				};
				pulse = {
					id = 130;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 73;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1130;
		};
		[130] = {
			name = [[Fullerene Gun]];
			shortName = [[FULLPLSE]];
			notes = [[Fullerene Gun]];
			staticName = [[Fullerene Gun]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 60;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 519;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 131;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 10;
				ammo = 150;
				range = 810000;
				inverseSpeed = 17;
				restockCost = 30;
			};
			portraitId = 0;
		};
		[131] = {
			name = [[Fullerene Pulse]];
			shortName = [[FULLPLSE]];
			notes = [[Fullerene Pulse]];
			staticName = [[Fullerene Pulse]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 200;
			initialAge = 60;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 522;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = -2;
			initialDirectionRange = 4;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 7;
				direction = 1;
				directionRange = 0;
				speed = 3;
				speedRange = 0;
				shape = 0;
				shapeRange = 7;
			};
			portraitId = 0;
		};
		[132] = {
			name = [[Launching Bay]];
			shortName = [[LNCHBAY]];
			notes = [[Launching Bay]];
			staticName = [[Launching Bay]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 520;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 112;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = true;
					hex = 7;
				};
				energyCost = 0;
				reload = 200;
				ammo = 10;
				range = 100000;
				inverseSpeed = 35;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[133] = {
			name = [[LR PK Beam]];
			shortName = [[LRPKMEAM]];
			notes = [[LR PK Beam]];
			staticName = [[LR PK Beam]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = true;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 25.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 30;
			initialAge = 55;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			beam = {
				hex = 0;
				type = [[kinetic]];
				mode = nil;
				color = 2;
				accuracy = 131072;
				range = 256.000000;
			};
			portraitId = 0;
		};
		[134] = {
			name = [[LRPK Beam Cannon]];
			shortName = [[LRPKBEAM]];
			notes = [[LRPK Beam Cannon]];
			staticName = [[LRPK Beam Cannon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 25.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 50;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 28007;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 133;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 10;
				reload = 16;
				ammo = -1;
				range = 1562500;
				inverseSpeed = 10;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[135] = {
			name = [[Magno Launcher]];
			shortName = [[MGNOPULS]];
			notes = [[Magno Launcher]];
			staticName = [[Magno Launcher]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 28853;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 136;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 125;
				ammo = 150;
				range = 2073600;
				inverseSpeed = 28;
				restockCost = 30;
			};
			portraitId = 0;
		};
		[136] = {
			name = [[Magno Pulse]];
			shortName = [[MGNOPULS]];
			notes = [[Magno Pulse]];
			staticName = [[Magno Pulse]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = true;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 7.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.199219;
			health = 1000;
			energy = 0;
			damage = 200;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 581;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 79;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 5;
				direction = 1;
				directionRange = 0;
				speed = 34;
				speedRange = 0;
				shape = 0;
				shapeRange = 5;
			};
			portraitId = 0;
		};
		[137] = {
			name = [[Jump Gate]];
			shortName = [[JUMPGATE]];
			notes = [[Jump Gate]];
			staticName = [[Jump Gate]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = true;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = true;
				levelKey2 = true;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 573;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[change score]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 0;
							amount = 1;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[138] = {
			name = [[Gunship]];
			shortName = [[GUNSHIP]];
			notes = [[Gunship]];
			staticName = [[Gunship]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 300;
			race = 600;
			price = 1500;
			buildTime = 2000;
			buildRatio = 0.250000;
			offence = 1.500000;
			escortRank = 5;
			maxVelocity = 5.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.398438;
			thrust = 0.097656;
			health = 3700;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 569;
			iconShape = [[triangle]];
			iconSize = 5;
			shieldColor = 14;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 134;
					positions = {
						[1] = {
							x = 0.000000;
							y = -10.000000;
						};
						[2] = {
							x = 0.000000;
							y = 10.000000;
						};
					};
				};
				pulse = {
					id = 264;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 57;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.500000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1139;
		};
		[139] = {
			name = [[Assault Transport]];
			shortName = [[ASLTTRAN]];
			notes = [[Assault Transport]];
			staticName = [[Assault Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = true;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = true;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = true;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = true;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = true;
				orderKey3 = false;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 860;
			race = 600;
			price = 2000;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.199219;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 1200;
			energy = 800;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 600;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 134;
					positions = {
						[1] = {
							x = 0.000000;
							y = -8.000000;
						};
						[2] = {
							x = 0.000000;
							y = 8.000000;
						};
					};
				};
				pulse = {
					id = 135;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 254;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 5.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 320000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[activate special]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[activate special]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1140;
		};
		[140] = {
			name = [[Transport]];
			shortName = [[TRANSPRT]];
			notes = [[Transport]];
			staticName = [[Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = true;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = true;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = true;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = true;
				orderKey2 = true;
				orderKey3 = true;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 800;
			race = 600;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.148438;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 250;
			energy = 800;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 571;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 57;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[land at]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							speed = 32;
						};
						[1] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							priority = 5;
							persistence = 20;
							isAbsolute = true;
							volume = 255;
							volumeRange = 0;
							soundId = 513;
							soundIdRange = 0;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = true;
							value = 0;
						};
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1141;
		};
		[141] = {
			name = [[Jump Gate Non]];
			shortName = [[JUMPNON]];
			notes = [[Jump Gate Non]];
			staticName = [[Jump Gate Non]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 570;
			iconShape = [[square]];
			iconSize = 2;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[change score]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 0;
							amount = 1;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 2;
				direction = 1;
				directionRange = 0;
				speed = 15;
				speedRange = 0;
				shape = 0;
				shapeRange = 2;
			};
			portraitId = 0;
		};
		[142] = {
			name = [[Cruiser]];
			shortName = [[CRUISER]];
			notes = [[Cruiser]];
			staticName = [[Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 200;
			race = 700;
			price = 1000;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 7.500000;
			warpSpeed = 50.000000;
			warpOutDistance = 32972718;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.156250;
			health = 1500;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 578;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 6;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 145;
					positions = {
						[1] = {
							x = 0.000000;
							y = -5.000000;
						};
						[2] = {
							x = 0.000000;
							y = 5.000000;
						};
					};
				};
				pulse = {
					id = 271;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 159;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.500000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1143;
		};
		[143] = {
			name = [[Rapid Inasa Pulse]];
			shortName = [[RAPDINSA]];
			notes = [[Rapid Inasa Pulse Gun]];
			staticName = [[Rapid Inasa Pulse]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 45;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 538;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 144;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 13;
				ammo = -1;
				range = 810000;
				inverseSpeed = 12;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[144] = {
			name = [[Inasa Pulse]];
			shortName = [[INASPULS]];
			notes = [[Inasa Pulse]];
			staticName = [[Inasa Pulse]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 4.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 1.000000;
			health = 1000;
			energy = 0;
			damage = 200;
			initialAge = 54;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 580;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = -2;
			initialDirectionRange = 4;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 5;
				direction = 1;
				directionRange = 0;
				speed = 12;
				speedRange = 0;
				shape = 0;
				shapeRange = 5;
			};
			portraitId = 0;
		};
		[145] = {
			name = [[ASB Beam Cannon]];
			shortName = [[ASB BEAM]];
			notes = [[ASB Beam Cannon]];
			staticName = [[ASB Beam Cannon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 30;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 537;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 146;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 10;
				reload = 20;
				ammo = -1;
				range = 360000;
				inverseSpeed = 12;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[146] = {
			name = [[ASB Beam]];
			shortName = [[ASB BEAM]];
			notes = [[ASB Beam]];
			staticName = [[ASB Beam]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = true;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 2.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.449219;
			health = 1000;
			energy = 0;
			damage = 80;
			initialAge = 40;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[offline]];
							minimum = -30.000000;
							range = 60.000000;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[thrust]];
							relative = true;
							minimum = 12;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[current turn rate]];
							minimum = -2.000000;
							range = 4.000000;
						};
						[3] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[4] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			beam = {
				hex = 0;
				type = [[kinetic]];
				mode = nil;
				color = 14;
				accuracy = 2424832;
				range = 256.000000;
			};
			portraitId = 0;
		};
		[147] = {
			name = [[Fighter]];
			shortName = [[FIGHTER]];
			notes = [[Fighter]];
			staticName = [[Fighter]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 100;
			race = 700;
			price = 600;
			buildTime = 600;
			buildRatio = 0.750000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 6.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 6.000000;
			initialVelocityRange = 0.000000;
			mass = 0.796875;
			thrust = 0.097656;
			health = 600;
			energy = 600;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 577;
			iconShape = [[triangle]];
			iconSize = 3;
			shieldColor = 6;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 145;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 2.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 3.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1148;
		};
		[148] = {
			name = [[Carrier]];
			shortName = [[Carrier]];
			notes = [[Carrier]];
			staticName = [[Carrier]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 500;
			race = 700;
			price = 4500;
			buildTime = 6000;
			buildRatio = 0.097656;
			offence = 4.500000;
			escortRank = 7;
			maxVelocity = 4.000000;
			warpSpeed = 50.000000;
			warpOutDistance = 53002380;
			initialVelocity = 4.000000;
			initialVelocityRange = 0.000000;
			mass = 2.500000;
			thrust = 0.019531;
			health = 7500;
			energy = 6500;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 576;
			iconShape = [[diamond]];
			iconSize = 8;
			shieldColor = 6;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 261;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 157;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 150;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1149;
		};
		[149] = {
			name = [[Gunship]];
			shortName = [[GUNSHIP]];
			notes = [[Gunship]];
			staticName = [[Gunship]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 300;
			race = 700;
			price = 1500;
			buildTime = 2000;
			buildRatio = 0.250000;
			offence = 1.500000;
			escortRank = 5;
			maxVelocity = 5.000000;
			warpSpeed = 50.000000;
			warpOutDistance = 40977500;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.398438;
			thrust = 0.097656;
			health = 3700;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 579;
			iconShape = [[triangle]];
			iconSize = 5;
			shieldColor = 6;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 145;
					positions = {
						[1] = {
							x = 0.000000;
							y = -10.000000;
						};
						[2] = {
							x = 0.000000;
							y = 10.000000;
						};
					};
				};
				pulse = {
					id = 143;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.500000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1150;
		};
		[150] = {
			name = [[Launching Bay]];
			shortName = [[LNCHBAY]];
			notes = [[Launching Bay]];
			staticName = [[Launching Bay]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 520;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 147;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = true;
					hex = 7;
				};
				energyCost = 0;
				reload = 100;
				ammo = 10;
				range = 100000;
				inverseSpeed = 35;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[151] = {
			name = [[Cruiser]];
			shortName = [[CRUISER]];
			notes = [[Cruiser]];
			staticName = [[Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 200;
			race = 800;
			price = 1000;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 7.500000;
			warpSpeed = 50.000000;
			warpOutDistance = 32972718;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.156250;
			health = 1500;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 582;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 13;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 154;
					positions = {
						[1] = {
							x = 0.000000;
							y = -5.000000;
						};
						[2] = {
							x = 0.000000;
							y = 5.000000;
						};
					};
				};
				pulse = {
					id = 152;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.500000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1152;
		};
		[152] = {
			name = [[Onas Pulse Gun]];
			shortName = [[ONASPULS]];
			notes = [[Onas Pulse Gun]];
			staticName = [[Onas Pulse Gun]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 45;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 540;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 153;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 13;
				ammo = -1;
				range = 810000;
				inverseSpeed = 12;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[153] = {
			name = [[Onas Pulse]];
			shortName = [[ONASPULS]];
			notes = [[Onas Pulse]];
			staticName = [[Onas Pulse]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 1.000000;
			health = 1000;
			energy = 0;
			damage = 200;
			initialAge = 54;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 584;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = -2;
			initialDirectionRange = 4;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = true;
							minimum = 100.000000;
							range = 0.000000;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 79;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[2] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 5;
				direction = 1;
				directionRange = 0;
				speed = 24;
				speedRange = 0;
				shape = 0;
				shapeRange = 5;
			};
			portraitId = 0;
		};
		[154] = {
			name = [[Newo Beam Cannon]];
			shortName = [[NEWOBEAM]];
			notes = [[Newo Beam Cannon]];
			staticName = [[Newo Beam Cannon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 30;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 539;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 155;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 10;
				reload = 20;
				ammo = -1;
				range = 360000;
				inverseSpeed = 12;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[155] = {
			name = [[Newo Beam]];
			shortName = [[NEWOBEAM]];
			notes = [[Newo Beam]];
			staticName = [[Newo Beam]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = true;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 10.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.449219;
			health = 1000;
			energy = 0;
			damage = 80;
			initialAge = 30;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[offline]];
							minimum = -30.000000;
							range = 60.000000;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[thrust]];
							relative = true;
							minimum = 12;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[current turn rate]];
							minimum = -2.000000;
							range = 4.000000;
						};
						[3] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[4] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			beam = {
				hex = 0;
				type = [[kinetic]];
				mode = nil;
				color = 7;
				accuracy = 2424832;
				range = 256.000000;
			};
			portraitId = 0;
		};
		[156] = {
			name = [[Missile]];
			shortName = [[MISSILE]];
			notes = [[Missile]];
			staticName = [[Missile]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = true;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.347656;
			health = 1000;
			energy = 0;
			damage = 200;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 583;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = 154;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 79;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.000000;
				turnAcceleration = 0.000000;
			};
			portraitId = 0;
		};
		[157] = {
			name = [[A Missile Launch]];
			shortName = [[AMISSILE]];
			notes = [[A Missile Launch]];
			staticName = [[A Missile Launch]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 15;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 533;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 156;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 70;
				ammo = 150;
				range = 2073600;
				inverseSpeed = 28;
				restockCost = 12;
			};
			portraitId = 0;
		};
		[158] = {
			name = [[Holographic Decoy]];
			shortName = [[HOLODCOY]];
			notes = [[Holographic Decoy]];
			staticName = [[Holographic Decoy]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 7.500000;
			warpSpeed = 50.000000;
			warpOutDistance = 32972718;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.156250;
			health = 1500;
			energy = 1000;
			damage = 0;
			initialAge = 90;
			initialAgeRange = 90;
			scale = 1.000000;
			layer = 2;
			spriteId = 578;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = -5.000000;
						};
						[2] = {
							x = 0.000000;
							y = 5.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.500000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[159] = {
			name = [[Holo Generator]];
			shortName = [[HLOGNRTR]];
			notes = [[Holo Generator]];
			staticName = [[Holo Generator]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 45;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 158;
							min = 1;
							range = 2;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = true;
					hex = 7;
				};
				energyCost = 0;
				reload = 120;
				ammo = -1;
				range = 810000;
				inverseSpeed = 12;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[160] = {
			name = [[Massive Device]];
			shortName = [[MASSDVCE]];
			notes = [[Massive Device]];
			staticName = [[Massive Device]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = true;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 15000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 1;
			spriteId = 586;
			iconShape = [[framed square]];
			iconSize = 7;
			shieldColor = 6;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[161] = {
			name = [[Transport]];
			shortName = [[TRNSPORT]];
			notes = [[Fleeing to Jump Gate]];
			staticName = [[Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = true;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = true;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = true;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = true;
				orderKey2 = true;
				orderKey3 = true;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 1801;
			race = 900;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.097656;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 250;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 587;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = false;
							inclusiveFilter = 805306368;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 117;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[1] = {
							type = [[land at]];
							reflexive = false;
							inclusiveFilter = 805306368;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 120;
							speed = 80;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = -1;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[1] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[Out base on Lelande Alpha was captured.]];
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[change score]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 0;
							amount = 1;
						};
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[162] = {
			name = [[Protopulse 2 Gun]];
			shortName = [[PRTOPLSE]];
			notes = [[Protopulse 2 Gun]];
			staticName = [[Protopulse 2 Gun]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 13.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 40;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 519;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 163;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 15;
				ammo = 250;
				range = 270400;
				inverseSpeed = 19;
				restockCost = 12;
			};
			portraitId = 0;
		};
		[163] = {
			name = [[Protopulse 2]];
			shortName = [[PRTOPLS2]];
			notes = [[Protopulse 2]];
			staticName = [[Protopulse 2]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 13.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 13.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = 40;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 547;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = -2;
			initialDirectionRange = 4;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 5;
				direction = 1;
				directionRange = 0;
				speed = 14;
				speedRange = 0;
				shape = 0;
				shapeRange = 5;
			};
			portraitId = 0;
		};
		[164] = {
			name = [[Cruiser]];
			shortName = [[CRUISER]];
			notes = [[Cruiser]];
			staticName = [[Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 200;
			race = 900;
			price = 1000;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 5.000000;
			warpSpeed = 20.000000;
			warpOutDistance = 1122275;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.078125;
			health = 1000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 650;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 169;
					positions = {
						[1] = {
							x = 0.000000;
							y = -10.000000;
						};
						[2] = {
							x = 0.000000;
							y = 10.000000;
						};
					};
				};
				pulse = {
					id = 173;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1165;
		};
		[165] = {
			name = [[Fighter]];
			shortName = [[FIGHTER]];
			notes = [[Fighter]];
			staticName = [[Fighter]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 100;
			race = 900;
			price = 600;
			buildTime = 600;
			buildRatio = 0.750000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 6.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 6.000000;
			initialVelocityRange = 0.000000;
			mass = 0.796875;
			thrust = 0.039062;
			health = 100;
			energy = 600;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 651;
			iconShape = [[triangle]];
			iconSize = 3;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 169;
					positions = {
						[1] = {
							x = 0.000000;
							y = -3.000000;
						};
						[2] = {
							x = 0.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 2.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 3.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1166;
		};
		[166] = {
			name = [[Gunship]];
			shortName = [[GUNSHIP]];
			notes = [[Gunship]];
			staticName = [[Gunship]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 300;
			race = 900;
			price = 2200;
			buildTime = 2000;
			buildRatio = 0.347656;
			offence = 1.500000;
			escortRank = 5;
			maxVelocity = 5.000000;
			warpSpeed = 20.000000;
			warpOutDistance = 1167412;
			initialVelocity = 4.000000;
			initialVelocityRange = 0.000000;
			mass = 1.199219;
			thrust = 0.066406;
			health = 3000;
			energy = 2000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 652;
			iconShape = [[triangle]];
			iconSize = 5;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 175;
					positions = {
						[1] = {
							x = 0.000000;
							y = 6.000000;
						};
						[2] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 171;
					positions = {
						[1] = {
							x = 0.000000;
							y = 15.000000;
						};
						[2] = {
							x = 0.000000;
							y = -15.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 1.000000;
			dangerThreshold = -10.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.199219;
				turnAcceleration = 1.000000;
			};
			portraitId = 1167;
		};
		[167] = {
			name = [[Carrier]];
			shortName = [[CARRIER]];
			notes = [[Carrier]];
			staticName = [[Carrier]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 500;
			race = 900;
			price = 4500;
			buildTime = 10000;
			buildRatio = 0.097656;
			offence = 4.000000;
			escortRank = 7;
			maxVelocity = 3.000000;
			warpSpeed = 20.000000;
			warpOutDistance = 1406447;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 2.000000;
			thrust = 0.007812;
			health = 5000;
			energy = 5000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 649;
			iconShape = [[diamond]];
			iconSize = 8;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 175;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 171;
					positions = {
						[1] = {
							x = 60.000000;
							y = -14.000000;
						};
						[2] = {
							x = 60.000000;
							y = 0.000000;
						};
						[3] = {
							x = 60.000000;
							y = 14.000000;
						};
					};
				};
				special = {
					id = 168;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1168;
		};
		[168] = {
			name = [[Launching Bay]];
			shortName = [[LNCHBAY]];
			notes = [[Launching Bay]];
			staticName = [[Launching Bay]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 520;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 165;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = true;
					hex = 7;
				};
				energyCost = 0;
				reload = 200;
				ammo = 10;
				range = 100000;
				inverseSpeed = 35;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[169] = {
			name = [[Laser Cannon]];
			shortName = [[LASER]];
			notes = [[Laser Cannon]];
			staticName = [[Laser Cannon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 170;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 543;
							soundIdRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 10;
				reload = 20;
				ammo = -1;
				range = 50625;
				inverseSpeed = 17;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[170] = {
			name = [[Laser]];
			shortName = [[LASER]];
			notes = [[Laser]];
			staticName = [[Laser]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = true;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 15;
			initialAge = 15;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			beam = {
				hex = 0;
				type = [[kinetic]];
				mode = nil;
				color = 14;
				accuracy = 131072;
				range = 256.000000;
			};
			portraitId = 0;
		};
		[171] = {
			name = [[Rapid Magneto]];
			shortName = [[MGNTOPLS]];
			notes = [[Rapid Magneto]];
			staticName = [[Rapid Magneto]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 10.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 30;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 546;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 172;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 6;
				ammo = 500;
				range = 90000;
				inverseSpeed = 25;
				restockCost = 30;
			};
			portraitId = 0;
		};
		[172] = {
			name = [[Magneto Pulse]];
			shortName = [[MGNOPULS]];
			notes = [[Magneto Pulse]];
			staticName = [[Magneto Pulse]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 10.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 10.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 50;
			initialAge = 30;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 653;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = -2;
			initialDirectionRange = 4;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 5;
				direction = 1;
				directionRange = 0;
				speed = 3;
				speedRange = 0;
				shape = 0;
				shapeRange = 5;
			};
			portraitId = 0;
		};
		[173] = {
			name = [[Magneto Pulse Gun]];
			shortName = [[MGNTOPLS]];
			notes = [[Magneto Pulse Gun]];
			staticName = [[Magneto Pulse Gun]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 10.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 30;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 546;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 172;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 18;
				ammo = 200;
				range = 90000;
				inverseSpeed = 25;
				restockCost = 24;
			};
			portraitId = 0;
		};
		[174] = {
			name = [[Transport]];
			shortName = [[TRANSPRT]];
			notes = [[Transport -- special, for chapter 19]];
			staticName = [[Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = true;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = true;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = true;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = true;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = true;
				orderKey2 = true;
				orderKey3 = true;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 1801;
			race = 900;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.097656;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 250;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 587;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[land at]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							speed = 32;
						};
						[1] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 5;
							persistence = 20;
							isAbsolute = true;
							volume = 255;
							volumeRange = 0;
							soundId = 513;
							soundIdRange = 0;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[change score]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 0;
							amount = 1;
						};
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[175] = {
			name = [[Laser Turret]];
			shortName = [[LSRTURRT]];
			notes = [[Laser Turret]];
			staticName = [[Laser Turret]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 30;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 545;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 176;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 10;
				reload = 10;
				ammo = -1;
				range = 202500;
				inverseSpeed = 17;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[176] = {
			name = [[Laser]];
			shortName = [[LASER]];
			notes = [[Laser]];
			staticName = [[Laser]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = true;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 15;
			initialAge = 30;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			beam = {
				hex = 0;
				type = [[kinetic]];
				mode = nil;
				color = 12;
				accuracy = 131072;
				range = 256.000000;
			};
			portraitId = 0;
		};
		[177] = {
			name = [[Transport]];
			shortName = [[TRANSPRT]];
			notes = [[Transport]];
			staticName = [[Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = true;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = true;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = true;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = true;
				orderKey2 = true;
				orderKey3 = true;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 800;
			race = 700;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.199219;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 250;
			energy = 800;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 601;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[land at]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							speed = 32;
						};
						[1] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							priority = 5;
							persistence = 20;
							isAbsolute = true;
							volume = 255;
							volumeRange = 0;
							soundId = 513;
							soundIdRange = 0;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = true;
							value = 0;
						};
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[178] = {
			name = [[Transport]];
			shortName = [[TRANSPRT]];
			notes = [[Transport]];
			staticName = [[Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = true;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = true;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = true;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = true;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = true;
				orderKey2 = true;
				orderKey3 = true;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 800;
			race = 900;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.097656;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 250;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 587;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[land at]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							speed = 32;
						};
						[1] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							priority = 5;
							persistence = 20;
							isAbsolute = true;
							volume = 255;
							volumeRange = 0;
							soundId = 513;
							soundIdRange = 0;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = -265289728;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = true;
							value = 0;
						};
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[179] = {
			name = [[Transport]];
			shortName = [[TRANSPRT]];
			notes = [[Transport]];
			staticName = [[Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = true;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = true;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = true;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = true;
				orderKey2 = true;
				orderKey3 = true;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 801;
			race = 300;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.199219;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 250;
			energy = 800;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 563;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[You allowed the transports to dock at Charon station. You need to destroy the transports more quickly.]];
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[1] = {
							type = [[change score]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 0;
							amount = 1;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[180] = {
			name = [[Gate Ship]];
			shortName = [[GATESHIP]];
			notes = [=[Normal [usually has 198 for Special Weapon, health of 80000]]=];
			staticName = [[Gate Ship]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 550;
			race = 200;
			price = 4500;
			buildTime = 10000;
			buildRatio = 0.097656;
			offence = 4.000000;
			escortRank = 7;
			maxVelocity = 3.000000;
			warpSpeed = 20.000000;
			warpOutDistance = 1406447;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 2.000000;
			thrust = 0.007812;
			health = 70000;
			energy = 5000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 4.000000;
			layer = 2;
			spriteId = 604;
			iconShape = [[diamond]];
			iconSize = 10;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 135;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 60.000000;
							y = -14.000000;
						};
						[2] = {
							x = 60.000000;
							y = 0.000000;
						};
						[3] = {
							x = 60.000000;
							y = 14.000000;
						};
					};
				};
				special = {
					id = 197;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 220;
						};
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[181] = {
			name = [[Modified Cruiser]];
			shortName = [[MODCRSR]];
			notes = [[Modified Cruiser]];
			staticName = [[Modified Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 260;
			race = 100;
			price = 1500;
			buildTime = 1500;
			buildRatio = 0.796875;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 10.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 13505625;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.156250;
			health = 1000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 521;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 134;
					positions = {
						[1] = {
							x = 0.000000;
							y = -10.000000;
						};
						[2] = {
							x = 0.000000;
							y = 10.000000;
						};
					};
				};
				pulse = {
					id = 152;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 74;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[182] = {
			name = [[Asteroid Shoot Up]];
			shortName = [[ASTRSHOT]];
			notes = [[Asteroid Shoot Up]];
			staticName = [[Asteroid Shoot Up]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 573;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 184;
							min = 1;
							range = 2;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 1024;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 195;
							min = -4;
							range = 6;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 1024;
						};
					};
					interval = 255;
					intervalRange = 255;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[183] = {
			name = [[Jump Effect Large]];
			shortName = [[JUMPGATE]];
			notes = [[Jump Effect Large]];
			staticName = [[Jump Effect Large]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 1;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 4.000000;
			layer = 1;
			spriteId = 558;
			iconShape = [[none]];
			iconSize = 15;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 4;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 9800;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 28;
				direction = 1;
				directionRange = 0;
				speed = 15;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[184] = {
			name = [[Asteroid]];
			shortName = [[ASTEROID]];
			notes = [[Asteroid, regular]];
			staticName = [[Asteroid]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = true;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = true;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = true;
				levelKey2 = true;
				levelKey3 = false;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 3.000000;
			initialVelocityRange = 1.000000;
			mass = 10.000000;
			thrust = 0.000000;
			health = 10000;
			energy = 0;
			damage = 10;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 543;
			iconShape = [[framed square]];
			iconSize = 4;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 1.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = true;
							minimum = 0.000000;
							range = 2.000000;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 189;
							min = -10;
							range = 12;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 2;
						};
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 257;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 190;
							min = 2;
							range = 2;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 20;
				direction = -1;
				directionRange = -1;
				speed = 30;
				speedRange = 0;
				shape = 0;
				shapeRange = 19;
			};
			portraitId = 1185;
		};
		[185] = {
			name = [[Ast Shoot Down]];
			shortName = [[ASSHTDWN]];
			notes = [[Ast Shoot Down]];
			staticName = [[Ast Shoot Down]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 573;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 15;
			initialDirection = 180;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 184;
							min = 1;
							range = 2;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 1024;
						};
					};
					interval = 255;
					intervalRange = 255;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[186] = {
			name = [[Enemy Shooter Obj]];
			shortName = [[ENSHTOBJ]];
			notes = [[Enemy Shooter Obj]];
			staticName = [[Enemy Shooter Obj]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 573;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = 187;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[activate special]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
						};
					};
					interval = 255;
					intervalRange = 255;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[187] = {
			name = [[Enemy Shooter Wpn]];
			shortName = [[ENSHTWPN]];
			notes = [[Enemy Shooter Wpn]];
			staticName = [[Enemy Shooter Wpn]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 7;
							min = 0;
							range = 2;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 256;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 14;
							min = 0;
							range = 2;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 256;
						};
						[2] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 59;
							min = 0;
							range = 2;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 256;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = true;
					hex = 7;
				};
				energyCost = 0;
				reload = 0;
				ammo = 5;
				range = 0;
				inverseSpeed = 35;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[188] = {
			name = [[Target Drone]];
			shortName = [[TRGTDRNE]];
			notes = [[Target Drone]];
			staticName = [[Target Drone]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 123;
			race = 100;
			price = 600;
			buildTime = 600;
			buildRatio = 0.750000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 0.000000;
			mass = 0.796875;
			thrust = 0.296875;
			health = 250;
			energy = 600;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 588;
			iconShape = [[triangle]];
			iconSize = 3;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 198;
					positions = {
						[1] = {
							x = 0.000000;
							y = -3.000000;
						};
						[2] = {
							x = 0.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 2.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[health]];
							value = 250;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 201;
						};
						[2] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 4;
							persistence = 10;
							isAbsolute = true;
							volume = 255;
							volumeRange = 0;
							soundId = 551;
							soundIdRange = 0;
						};
						[3] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 360;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 525;
							soundIdRange = 0;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 60;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 188;
						};
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 23;
				direction = 1;
				directionRange = 0;
				speed = 140;
				speedRange = 0;
				shape = 0;
				shapeRange = 22;
			};
			portraitId = 0;
		};
		[189] = {
			name = [[Zerbilite]];
			shortName = [[ZRBILITE]];
			notes = [[Zerbilite]];
			staticName = [[Zerbilite]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 1;
			race = -1;
			price = 600;
			buildTime = 600;
			buildRatio = 0.750000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 6.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 6.000000;
			initialVelocityRange = 0.000000;
			mass = 0.097656;
			thrust = 0.097656;
			health = 70;
			energy = 600;
			damage = 20;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 589;
			iconShape = [[triangle]];
			iconSize = 2;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 2.000000;
			arriveActionDistance = 0;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[offline]];
							minimum = 0.000000;
							range = 60.000000;
						};
						[1] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 547;
							soundIdRange = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[age]];
							relative = false;
							minimum = 180;
							range = 180;
						};
						[3] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 120;
							baseType = 200;
							min = -1;
							range = 4;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 2;
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[1] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 548;
							soundIdRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 4;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 0;
				shapeRange = 3;
			};
			portraitId = 0;
		};
		[190] = {
			name = [[Asteroid Fragment]];
			shortName = [[FRAGMENT]];
			notes = [[Asteroid Fragment]];
			staticName = [[Asteroid Fragment]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 1.500000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 1.500000;
			initialVelocityRange = 1.000000;
			mass = 3.000000;
			thrust = 0.000000;
			health = 2500;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 544;
			iconShape = [[framed square]];
			iconSize = 3;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 191;
							min = 2;
							range = 2;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 21;
				direction = 1;
				directionRange = 0;
				speed = 30;
				speedRange = 0;
				shape = 0;
				shapeRange = 20;
			};
			portraitId = 0;
		};
		[191] = {
			name = [[Asteroid Debris]];
			shortName = [[DEBRIS]];
			notes = [[Asteroid Debris]];
			staticName = [[Asteroid Debris]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 2.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 2.000000;
			initialVelocityRange = 1.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 545;
			iconShape = [[framed square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[change score]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 1;
							amount = 1;
						};
						[1] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 5;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 514;
							soundIdRange = 0;
						};
						[2] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 21;
				direction = 1;
				directionRange = 0;
				speed = 30;
				speedRange = 0;
				shape = 0;
				shapeRange = 20;
			};
			portraitId = 0;
		};
		[192] = {
			name = [[Shrikeolator]];
			shortName = [[SHRKOLTR]];
			notes = [[Pushes you far far away]];
			staticName = [[Shrikeolator]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 193;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 544;
							soundIdRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 70;
				ammo = 150;
				range = 2073600;
				inverseSpeed = 28;
				restockCost = 24;
			};
			portraitId = 0;
		};
		[193] = {
			name = [[Temp Pulse]];
			shortName = [[TEMPPLSE]];
			notes = [[Temp Pulse]];
			staticName = [[Temp Pulse]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = true;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 7.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.199219;
			health = 1000;
			energy = 0;
			damage = 200;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 581;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 194;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = false;
							minimum = 20.000000;
							range = 10.000000;
						};
						[2] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 5;
				direction = 1;
				directionRange = 0;
				speed = 34;
				speedRange = 0;
				shape = 0;
				shapeRange = 5;
			};
			portraitId = 0;
		};
		[194] = {
			name = [[Large Energy Exp]];
			shortName = [[ENRGYEXP]];
			notes = [[Large Energy Exp]];
			staticName = [[Large Energy Exp]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 3;
			spriteId = 554;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 501;
							soundIdRange = 0;
						};
						[1] = {
							type = [[make sparks]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							count = 67174400;
							velocity = 0;
							velocityRange = 0;
							color = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 11;
				direction = 1;
				directionRange = 0;
				speed = 60;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[195] = {
			name = [[Nastiroid]];
			shortName = [[NASTROID]];
			notes = [[Nastiroid]];
			staticName = [[Nastiroid]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 7.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 3.000000;
			initialVelocityRange = 1.000000;
			mass = 10.000000;
			thrust = 0.000000;
			health = 500000;
			energy = 2000;
			damage = 40000;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 590;
			iconShape = [[diamond]];
			iconSize = 8;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 1.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[destroy]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 20;
				direction = -1;
				directionRange = -1;
				speed = 30;
				speedRange = 30;
				shape = 0;
				shapeRange = 19;
			};
			portraitId = 0;
		};
		[196] = {
			name = [[Nastiroid Shooter]];
			shortName = [[NSTSHOOT]];
			notes = [[Nastiroid Shooter]];
			staticName = [[Nastiroid Shooter]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 573;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 195;
							min = 1;
							range = 1;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 1024;
						};
					};
					interval = 255;
					intervalRange = 255;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[197] = {
			name = [[Electronic Jam]];
			shortName = [[ELCTJAM]];
			notes = [[Electronic Jamming Device]];
			staticName = [[Electronic Jam]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[offline]];
							minimum = 40.000000;
							range = 0.000000;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 70;
				ammo = 150;
				range = 2073600;
				inverseSpeed = 28;
				restockCost = 24;
			};
			portraitId = 0;
		};
		[198] = {
			name = [[Inert Beam Cannon]];
			shortName = [[INRTBEAM]];
			notes = [[Inert Beam Cannon]];
			staticName = [[Inert Beam Cannon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 15;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 199;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 180;
							volumeRange = 0;
							soundId = 549;
							soundIdRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 10;
				reload = 20;
				ammo = -1;
				range = 50625;
				inverseSpeed = 17;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[199] = {
			name = [[Inert PK Beam]];
			shortName = [[INRTBEAM]];
			notes = [[Inert PK Beam]];
			staticName = [[Inert PK Beam]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = true;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 30;
			initialAge = 15;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			beam = {
				hex = 0;
				type = [[kinetic]];
				mode = nil;
				color = 16;
				accuracy = 131072;
				range = 256.000000;
			};
			portraitId = 0;
		};
		[200] = {
			name = [[Zerbilite Spawn]];
			shortName = [[ZERBLITE]];
			notes = [[Zerbilite Spawn]];
			staticName = [[Zerbilite Spawn]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 100;
			race = 1000;
			price = 600;
			buildTime = 600;
			buildRatio = 0.750000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 6.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 6.000000;
			initialVelocityRange = 0.000000;
			mass = 0.097656;
			thrust = 0.097656;
			health = 70;
			energy = 600;
			damage = 20;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 0.500000;
			layer = 2;
			spriteId = 589;
			iconShape = [[triangle]];
			iconSize = 1;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 2.000000;
			arriveActionDistance = 0;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[offline]];
							minimum = 0.000000;
							range = 60.000000;
						};
						[1] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 547;
							soundIdRange = 0;
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[1] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 548;
							soundIdRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 4;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 0;
				shapeRange = 3;
			};
			portraitId = 0;
		};
		[201] = {
			name = [[Target Drone Dead]];
			shortName = [[TRGTDRNE]];
			notes = [[Target Drone Dead]];
			staticName = [[Target Drone Dead]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 123;
			race = 100;
			price = 600;
			buildTime = 600;
			buildRatio = 0.750000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 0.796875;
			thrust = 0.250000;
			health = 250;
			energy = 600;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 588;
			iconShape = [[triangle]];
			iconSize = 3;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = -3.000000;
						};
						[2] = {
							x = 0.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 2.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 23;
				direction = 1;
				directionRange = 0;
				speed = 72;
				speedRange = 0;
				shape = 0;
				shapeRange = 22;
			};
			portraitId = 0;
		};
		[202] = {
			name = [[Practice Drone]];
			shortName = [[PRCTCDRN]];
			notes = [[Practice Drone]];
			staticName = [[Practice Drone]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = true;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 1802;
			race = 100;
			price = 600;
			buildTime = 600;
			buildRatio = 0.750000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 0.000000;
			mass = 0.796875;
			thrust = 0.296875;
			health = 250;
			energy = 600;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 588;
			iconShape = [[plus]];
			iconSize = 4;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = -3.000000;
						};
						[2] = {
							x = 0.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 2.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 360;
							id = 5508;
							page = 1;
						};
						[1] = {
							type = [[set destination]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = 5;
							owner = 0;
							delay = 0;
						};
						[2] = {
							type = [[land at]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = 5;
							owner = 0;
							delay = 120;
							speed = 128;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 2400;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 13;
							range = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 23;
				direction = 1;
				directionRange = 0;
				speed = 140;
				speedRange = 0;
				shape = 0;
				shapeRange = 22;
			};
			portraitId = 0;
		};
		[203] = {
			name = [[Cruiser]];
			shortName = [[CRUISER]];
			notes = [[Practice Active]];
			staticName = [[Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 1803;
			race = 100;
			price = 1000;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 5.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.156250;
			health = 1000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 501;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 1;
					positions = {
						[1] = {
							x = 0.000000;
							y = -10.000000;
						};
						[2] = {
							x = 0.000000;
							y = 10.000000;
						};
					};
				};
				pulse = {
					id = 60;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[health]];
							value = 1000;
						};
						[1] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = -1;
							priority = 4;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 551;
							soundIdRange = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 204;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 360;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 203;
						};
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[204] = {
			name = [[Cruiser Dead]];
			shortName = [[CRUISER]];
			notes = [[Practice Inactive]];
			staticName = [[Cruiser Dead]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = false;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 1803;
			race = 100;
			price = 1000;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 501;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = -10.000000;
						};
						[2] = {
							x = 0.000000;
							y = 10.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 0.000000;
				turnAcceleration = 0.000000;
			};
			portraitId = 0;
		};
		[205] = {
			name = [[Human]];
			shortName = [[HUMAN]];
			notes = [[Needs rescuing, Not Waving]];
			staticName = [[Human]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = true;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 1.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 1.500000;
			mass = 0.500000;
			thrust = 0.097656;
			health = 1;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 0.500000;
			layer = 2;
			spriteId = 593;
			iconShape = [[plus]];
			iconSize = 2;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[offline]];
							minimum = -30.000000;
							range = 60.000000;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[current turn rate]];
							minimum = -1.000000;
							range = 1.000000;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 20;
							alterType = [[velocity]];
							relative = true;
							minimum = 0.500000;
							range = 0.500000;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 270;
							alterType = [[base type]];
							retainAmmoCount = true;
							id = 208;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 270;
							alterType = [[base type]];
							retainAmmoCount = true;
							id = 205;
						};
					};
					interval = 32;
					intervalRange = 32;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[change score]];
							reflexive = false;
							inclusiveFilter = -536870912;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 0;
							amount = 1;
						};
						[1] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = -536870912;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = false;
							value = -1;
						};
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[change score]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 2;
							amount = 1;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 2.000000;
			};
			portraitId = 0;
		};
		[206] = {
			name = [[Destroyer]];
			shortName = [[DESTROYR]];
			notes = [[Can Rescue]];
			staticName = [[Destroyer]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = true;
				levelKey3 = true;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 451;
			race = 100;
			price = 6500;
			buildTime = 6500;
			buildRatio = 0.097656;
			offence = 4.000000;
			escortRank = 7;
			maxVelocity = 4.500000;
			warpSpeed = 40.000000;
			warpOutDistance = 13505625;
			initialVelocity = 1.500000;
			initialVelocityRange = 0.000000;
			mass = 1.449219;
			thrust = 0.078125;
			health = 2000;
			energy = 2000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 646;
			iconShape = [[triangle]];
			iconSize = 6;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 20;
					positions = {
						[1] = {
							x = 0.000000;
							y = -5.000000;
						};
						[2] = {
							x = 0.000000;
							y = 0.000000;
						};
						[3] = {
							x = 0.000000;
							y = 5.000000;
						};
					};
				};
				pulse = {
					id = 130;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 73;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[207] = {
			name = [[Human]];
			shortName = [[HUMAN]];
			notes = [[exiting to base]];
			staticName = [[Human]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = true;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 1.500000;
			mass = 0.500000;
			thrust = 0.019531;
			health = 1;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 0.500000;
			layer = 2;
			spriteId = 549;
			iconShape = [[plus]];
			iconSize = 2;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 102;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 5000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = 1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 31989;
							soundIdRange = 0;
						};
						[1] = {
							type = [[change score]];
							reflexive = false;
							inclusiveFilter = 1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 1;
							amount = 1;
						};
						[2] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = 1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[set destination]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = 0;
							owner = 0;
							delay = 3;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 2.000000;
			};
			portraitId = 0;
		};
		[208] = {
			name = [[Human]];
			shortName = [[HUMAN]];
			notes = [[Human needs rescuing (waving)]];
			staticName = [[Human]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = true;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 1.500000;
			mass = 0.500000;
			thrust = 0.007812;
			health = 1;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 0.500000;
			layer = 2;
			spriteId = 594;
			iconShape = [[plus]];
			iconSize = 2;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[change score]];
							reflexive = false;
							inclusiveFilter = -536870912;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 0;
							amount = 1;
						};
						[1] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = -536870912;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[change score]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 2;
							amount = 1;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 23;
				direction = 1;
				directionRange = 0;
				speed = 120;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[209] = {
			name = [[Lab]];
			shortName = [[Lab]];
			notes = [[Burning]];
			staticName = [[Lab]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = true;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 592;
			iconShape = [[framed square]];
			iconSize = 6;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 1;
				lastShape = 6;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 1;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[210] = {
			name = [[Lab]];
			shortName = [[LAB]];
			notes = [[Fresh]];
			staticName = [[Lab]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = true;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 592;
			iconShape = [[framed square]];
			iconSize = 6;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 211;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 205;
							min = 10;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 16;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 209;
						};
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[211] = {
			name = [[Giant Explosion]];
			shortName = [[EXPLOSN]];
			notes = [[Debris-less]];
			staticName = [[Giant Explosion]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.500000;
			layer = 3;
			spriteId = 504;
			iconShape = [[square]];
			iconSize = 2;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 4;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 515;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 17;
				direction = 1;
				directionRange = 0;
				speed = 25;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[212] = {
			name = [[Obiard]];
			shortName = [[OBIARD]];
			notes = [[Needs rescuing, turning]];
			staticName = [[Obiard]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = true;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = true;
				engageKey1 = false;
				engageKey2 = true;
				engageKey3 = true;
				engageKey4 = true;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 1.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 1.500000;
			mass = 0.500000;
			thrust = 0.097656;
			health = 1;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 0.500000;
			layer = 2;
			spriteId = 596;
			iconShape = [[plus]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[offline]];
							minimum = -30.000000;
							range = 60.000000;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[current turn rate]];
							minimum = -1.000000;
							range = 1.000000;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 20;
							alterType = [[velocity]];
							relative = true;
							minimum = 0.500000;
							range = 0.500000;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 270;
							alterType = [[base type]];
							retainAmmoCount = true;
							id = 213;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 270;
							alterType = [[base type]];
							retainAmmoCount = true;
							id = 212;
						};
					};
					interval = 32;
					intervalRange = 32;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[change score]];
							reflexive = false;
							inclusiveFilter = -536870912;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 0;
							amount = 1;
						};
						[1] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = -536870912;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = false;
							value = -1;
						};
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[change score]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 2;
							amount = 1;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 2.000000;
			};
			portraitId = 0;
		};
		[213] = {
			name = [[Obiard]];
			shortName = [[OBIARD]];
			notes = [[Needs rescuing, waving]];
			staticName = [[Obiard]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = true;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = true;
				engageKey1 = false;
				engageKey2 = true;
				engageKey3 = true;
				engageKey4 = true;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 1.500000;
			mass = 0.500000;
			thrust = 0.007812;
			health = 1;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 0.500000;
			layer = 2;
			spriteId = 597;
			iconShape = [[plus]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[change score]];
							reflexive = false;
							inclusiveFilter = -536870912;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 0;
							amount = 1;
						};
						[1] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = -536870912;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[change score]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 2;
							amount = 1;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 23;
				direction = 1;
				directionRange = 0;
				speed = 120;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[214] = {
			name = [[Obiard]];
			shortName = [[OBIARD]];
			notes = [[Returning to Base]];
			staticName = [[Obiard]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = true;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 1.500000;
			mass = 0.500000;
			thrust = 0.019531;
			health = 1;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 0.500000;
			layer = 2;
			spriteId = 596;
			iconShape = [[plus]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 102;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 5000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = 1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 31989;
							soundIdRange = 0;
						};
						[1] = {
							type = [[change score]];
							reflexive = false;
							inclusiveFilter = 1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 1;
							amount = 1;
						};
						[2] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = 1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[set destination]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = 0;
							owner = 0;
							delay = 3;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 2.000000;
			};
			portraitId = 0;
		};
		[215] = {
			name = [[Lab]];
			shortName = [[LAB]];
			notes = [[Gaitori, Burning]];
			staticName = [[Lab]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = true;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 595;
			iconShape = [[framed square]];
			iconSize = 6;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 1;
				lastShape = 6;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 1;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[216] = {
			name = [[Lab]];
			shortName = [[LAB]];
			notes = [[Gaitori, Fresh (Not Burning)]];
			staticName = [[Lab]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = true;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 595;
			iconShape = [[framed square]];
			iconSize = 6;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 211;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 212;
							min = 5;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 16;
						};
						[2] = {
							type = [[activate special]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 7;
							directOverride = -1;
							owner = 0;
							delay = 0;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 215;
						};
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[217] = {
			name = [[Transport]];
			shortName = [[TRANSPRT]];
			notes = [[Can Pick Up Guys]];
			staticName = [[Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = true;
				levelKey3 = true;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 881;
			race = 400;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.398438;
			offence = 1.000000;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 1.500000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 2000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 567;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 96;
					positions = {
						[1] = {
							x = 0.000000;
							y = -5.000000;
						};
						[2] = {
							x = 0.000000;
							y = 0.000000;
						};
						[3] = {
							x = 0.000000;
							y = 5.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[218] = {
			name = [[Enmy Object Shoot]];
			shortName = [[ENOBJSHT]];
			notes = [[Gaitori]];
			staticName = [[Enmy Object Shoot]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 573;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = 219;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[219] = {
			name = [[Enemy Object Wpn]];
			shortName = [[ENOBJWPN]];
			notes = [[Gaitor]];
			staticName = [[Enemy Object Wpn]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 37;
							min = 1;
							range = 2;
							velocityRelative = true;
							directionRelative = false;
							distanceRange = 256;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 38;
							min = 1;
							range = 4;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 256;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = true;
					hex = 7;
				};
				energyCost = 0;
				reload = 0;
				ammo = 10;
				range = 0;
				inverseSpeed = 35;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[220] = {
			name = [[Gate Ship]];
			shortName = [[GATESHIP]];
			notes = [[Blowing up & Dying Left & Right]];
			staticName = [[Gate Ship]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = false;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 550;
			race = 200;
			price = 4500;
			buildTime = 10000;
			buildRatio = 0.097656;
			offence = 4.000000;
			escortRank = 7;
			maxVelocity = 3.000000;
			warpSpeed = 20.000000;
			warpOutDistance = 1406447;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 2.000000;
			thrust = 0.000000;
			health = 1;
			energy = 5000;
			damage = 0;
			initialAge = 720;
			initialAgeRange = 0;
			scale = 4.000000;
			layer = 2;
			spriteId = 604;
			iconShape = [[diamond]];
			iconSize = 10;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 60.000000;
							y = -14.000000;
						};
						[2] = {
							x = 60.000000;
							y = 0.000000;
						};
						[3] = {
							x = 60.000000;
							y = 14.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 0;
							range = 3;
							velocityRelative = true;
							directionRelative = false;
							distanceRange = 128;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 20;
							baseType = 52;
							min = 0;
							range = 2;
							velocityRelative = true;
							directionRelative = false;
							distanceRange = 128;
						};
						[2] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 20;
							baseType = 34;
							min = 0;
							range = 4;
							velocityRelative = true;
							directionRelative = false;
							distanceRange = 128;
						};
						[3] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 20;
							baseType = 8;
							min = 0;
							range = 4;
							velocityRelative = true;
							directionRelative = false;
							distanceRange = 128;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 4;
							range = 7;
						};
					};
					interval = 16;
					intervalRange = 16;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 4;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 515;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 221;
							min = 11;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 1;
							range = 0;
						};
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[221] = {
			name = [[Super Nova]];
			shortName = [[SUPRNOVA]];
			notes = [[Gate Ship Explodes]];
			staticName = [[Super Nova]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 6.000000;
			layer = 3;
			spriteId = 541;
			iconShape = [[square]];
			iconSize = 2;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[color flash]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							duration = 128;
							color = 2;
							shade = 15;
						};
					};
					interval = 4;
					intervalRange = 4;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[color flash]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							duration = 128;
							color = 2;
							shade = 15;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 27;
				direction = 1;
				directionRange = 0;
				speed = 48;
				speedRange = 0;
				shape = 4;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[222] = {
			name = [[Carrier]];
			shortName = [[Carrier]];
			notes = [[Modified]];
			staticName = [[Carrier]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 501;
			race = 900;
			price = 4500;
			buildTime = 10000;
			buildRatio = 0.097656;
			offence = 4.000000;
			escortRank = 7;
			maxVelocity = 3.000000;
			warpSpeed = 20.000000;
			warpOutDistance = 1406447;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 2.000000;
			thrust = 0.007812;
			health = 5000;
			energy = 5000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 649;
			iconShape = [[diamond]];
			iconSize = 8;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 152;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 130;
					positions = {
						[1] = {
							x = 60.000000;
							y = -14.000000;
						};
						[2] = {
							x = 60.000000;
							y = 0.000000;
						};
						[3] = {
							x = 60.000000;
							y = 14.000000;
						};
					};
				};
				special = {
					id = 168;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[223] = {
			name = [[Gate Ship]];
			shortName = [[GATESHIP]];
			notes = [[Instead of dying, opens up jump gate & escapes (health 40000)]];
			staticName = [[Gate Ship]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 550;
			race = 200;
			price = 4500;
			buildTime = 10000;
			buildRatio = 0.097656;
			offence = 4.000000;
			escortRank = 7;
			maxVelocity = 3.000000;
			warpSpeed = 20.000000;
			warpOutDistance = 1406447;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 2.000000;
			thrust = 0.007812;
			health = 40000;
			energy = 5000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 4.000000;
			layer = 2;
			spriteId = 604;
			iconShape = [[diamond]];
			iconSize = 10;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 135;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = 192;
					positions = {
						[1] = {
							x = 60.000000;
							y = -14.000000;
						};
						[2] = {
							x = 60.000000;
							y = 0.000000;
						};
						[3] = {
							x = 60.000000;
							y = 14.000000;
						};
					};
				};
				special = {
					id = 197;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[set destination]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = false;
							minimum = 0.000000;
							range = 0.000000;
						};
						[2] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 183;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
						[3] = {
							type = [[land at]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							speed = 128;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 224;
						};
						[5] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[health]];
							value = 80000;
						};
						[6] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 60;
							id = 5520;
							page = 1;
						};
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[224] = {
			name = [[Gate Ship]];
			shortName = [[GATESHIP]];
			notes = [[Going through Jump Gate]];
			staticName = [[Gate Ship]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = false;
				occupiesSpace = false;
				staticDestination = true;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 550;
			race = 200;
			price = 4500;
			buildTime = 10000;
			buildRatio = 0.097656;
			offence = 4.000000;
			escortRank = 7;
			maxVelocity = 3.000000;
			warpSpeed = 20.000000;
			warpOutDistance = 1406447;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 2.000000;
			thrust = 0.000000;
			health = 80000;
			energy = 5000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 4.000000;
			layer = 2;
			spriteId = 604;
			iconShape = [[diamond]];
			iconSize = 10;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 135;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 60.000000;
							y = -14.000000;
						};
						[2] = {
							x = 60.000000;
							y = 0.000000;
						};
						[3] = {
							x = 60.000000;
							y = 14.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 1.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[225] = {
			name = [[Passenger Liner]];
			shortName = [[LINER]];
			notes = [[Receives Hostages]];
			staticName = [[Passenger Liner]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = true;
				levelKey3 = true;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = -5.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 1;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 565;
			iconShape = [[plus]];
			iconSize = 7;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = -5.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 0.000000;
				turnAcceleration = 0.000000;
			};
			portraitId = 0;
		};
		[226] = {
			name = [[KL Beam Cannon]];
			shortName = [[KLBEAM]];
			notes = [[Identical to #2, really]];
			staticName = [[KL Beam Cannon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 15;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 227;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 4;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 10;
				reload = 12;
				ammo = -1;
				range = 50625;
				inverseSpeed = 17;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[227] = {
			name = [[Kinetic Laser]];
			shortName = [[KLBEAM]];
			notes = [[Same as #3, except sound]];
			staticName = [[Kinetic Laser]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = true;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 30;
			initialAge = 15;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 544;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			beam = {
				hex = 0;
				type = [[kinetic]];
				mode = nil;
				color = 12;
				accuracy = 131072;
				range = 256.000000;
			};
			portraitId = 0;
		};
		[228] = {
			name = [[Ast Shoot Up Lite]];
			shortName = [[ASTSHOOT]];
			notes = [[For Net Level 1 (Rock & Rock)]];
			staticName = [[Ast Shoot Up Lite]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 573;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 184;
							min = -2;
							range = 5;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 1024;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 195;
							min = -12;
							range = 14;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 1024;
						};
					};
					interval = 255;
					intervalRange = 255;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[229] = {
			name = [[Ast Shoot Down Lt]];
			shortName = [[ASTSHTDN]];
			notes = [[For Net Level 1 (Rock & Rock)]];
			staticName = [[Ast Shoot Down Lt]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 573;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 15;
			initialDirection = 180;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 184;
							min = -2;
							range = 5;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 1024;
						};
					};
					interval = 255;
					intervalRange = 255;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[230] = {
			name = [[Heavy Destroyer]];
			shortName = [[HVDSTRYR]];
			notes = [[Heavy Destroyer]];
			staticName = [[Heavy Destroyer]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 450;
			race = 200;
			price = 6500;
			buildTime = 6500;
			buildRatio = 0.097656;
			offence = 4.000000;
			escortRank = 7;
			maxVelocity = 4.500000;
			warpSpeed = 40.000000;
			warpOutDistance = 22503164;
			initialVelocity = 1.500000;
			initialVelocityRange = 0.000000;
			mass = 1.449219;
			thrust = 0.078125;
			health = 2000;
			energy = 2000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 603;
			iconShape = [[triangle]];
			iconSize = 6;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 15;
					positions = {
						[1] = {
							x = 0.000000;
							y = -5.000000;
						};
						[2] = {
							x = 0.000000;
							y = 0.000000;
						};
						[3] = {
							x = 0.000000;
							y = 5.000000;
						};
					};
				};
				pulse = {
					id = 231;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 57;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[231] = {
			name = [[Quasimatter Gun]];
			shortName = [[QUASMTTR]];
			notes = [[Quasimatter Gun]];
			staticName = [[Quasimatter Gun]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 60;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 554;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 232;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 10;
				ammo = 150;
				range = 810000;
				inverseSpeed = 17;
				restockCost = 30;
			};
			portraitId = 0;
		};
		[232] = {
			name = [[Quasimatter Pulse]];
			shortName = [[QSIPULSE]];
			notes = [[Quasimatter Pulse]];
			staticName = [[Quasimatter Pulse]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 200;
			initialAge = 60;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 605;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = -2;
			initialDirectionRange = 4;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[make sparks]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							count = 67108864;
							velocity = 0;
							velocityRange = 0;
							color = 0;
						};
						[1] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 1;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 542;
							soundIdRange = 0;
						};
						[2] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 233;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
						[3] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 5;
				direction = 1;
				directionRange = 0;
				speed = 27;
				speedRange = 0;
				shape = 0;
				shapeRange = 5;
			};
			portraitId = 0;
		};
		[233] = {
			name = [[Quasimatter Exp]];
			shortName = [[QUASEXPL]];
			notes = [[Quasimatter Explosion]];
			staticName = [[Quasimatter Exp]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 606;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 6;
				direction = 1;
				directionRange = 0;
				speed = 30;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[234] = {
			name = [[Heavy Destroyer]];
			shortName = [[HVDSTRYR]];
			notes = [[Heavy Destroyer]];
			staticName = [[Heavy Destroyer]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 450;
			race = 700;
			price = 6500;
			buildTime = 6500;
			buildRatio = 0.097656;
			offence = 4.000000;
			escortRank = 7;
			maxVelocity = 4.500000;
			warpSpeed = 50.000000;
			warpOutDistance = 43838884;
			initialVelocity = 1.500000;
			initialVelocityRange = 0.000000;
			mass = 1.449219;
			thrust = 0.078125;
			health = 2000;
			energy = 2000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 607;
			iconShape = [[triangle]];
			iconSize = 6;
			shieldColor = 6;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 145;
					positions = {
						[1] = {
							x = 0.000000;
							y = -5.000000;
						};
						[2] = {
							x = 0.000000;
							y = 0.000000;
						};
						[3] = {
							x = 0.000000;
							y = 5.000000;
						};
					};
				};
				pulse = {
					id = 235;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 157;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[235] = {
			name = [[C-Form Cannon]];
			shortName = [[CFORMCNN]];
			notes = [[Charged Form Cannon]];
			staticName = [[C-Form Cannon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 60;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 558;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 236;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 10;
				ammo = 150;
				range = 810000;
				inverseSpeed = 17;
				restockCost = 30;
			};
			portraitId = 0;
		};
		[236] = {
			name = [[Charged Form]];
			shortName = [[CHRGFORM]];
			notes = [[Charged Form]];
			staticName = [[Charged Form]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 200;
			initialAge = 60;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 611;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = -2;
			initialDirectionRange = 4;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 5;
				direction = 1;
				directionRange = 0;
				speed = 12;
				speedRange = 0;
				shape = 0;
				shapeRange = 4;
			};
			portraitId = 0;
		};
		[237] = {
			name = [[Heavy Destroyer]];
			shortName = [[HVDSTRYR]];
			notes = [[Salrilian Heavy Destroyer]];
			staticName = [[Heavy Destroyer]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 450;
			race = 600;
			price = 6500;
			buildTime = 6500;
			buildRatio = 0.097656;
			offence = 4.000000;
			escortRank = 7;
			maxVelocity = 4.500000;
			warpSpeed = 40.000000;
			warpOutDistance = 22503164;
			initialVelocity = 1.500000;
			initialVelocityRange = 0.000000;
			mass = 1.449219;
			thrust = 0.078125;
			health = 2000;
			energy = 2000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 610;
			iconShape = [[triangle]];
			iconSize = 6;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 134;
					positions = {
						[1] = {
							x = 0.000000;
							y = -5.000000;
						};
						[2] = {
							x = 0.000000;
							y = 0.000000;
						};
						[3] = {
							x = 0.000000;
							y = 5.000000;
						};
					};
				};
				pulse = {
					id = 238;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 57;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[238] = {
			name = [[Chronon Prtcl Gun]];
			shortName = [[CHRNNPRT]];
			notes = [[Chronon Particle Gun]];
			staticName = [[Chronon Prtcl Gun]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 60;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 101;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 556;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 239;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 8;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 10;
				ammo = 150;
				range = 810000;
				inverseSpeed = 17;
				restockCost = 30;
			};
			portraitId = 0;
		};
		[239] = {
			name = [[Chronon Particle]];
			shortName = [[CHRNNPRT]];
			notes = [[Untitled]];
			staticName = [[Chronon Particle]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 200;
			initialAge = 60;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 620;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = -2;
			initialDirectionRange = 4;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 5;
				direction = 1;
				directionRange = 0;
				speed = 36;
				speedRange = 0;
				shape = 0;
				shapeRange = 4;
			};
			portraitId = 0;
		};
		[240] = {
			name = [[Heavy Destroyer]];
			shortName = [[HVDSTRYR]];
			notes = [[Human Heavy Destroyer]];
			staticName = [[Heavy Destroyer]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 450;
			race = 900;
			price = 6500;
			buildTime = 6500;
			buildRatio = 0.097656;
			offence = 4.000000;
			escortRank = 7;
			maxVelocity = 4.500000;
			warpSpeed = 40.000000;
			warpOutDistance = 22503164;
			initialVelocity = 1.500000;
			initialVelocityRange = 0.000000;
			mass = 1.449219;
			thrust = 0.078125;
			health = 2000;
			energy = 2000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 609;
			iconShape = [[triangle]];
			iconSize = 6;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 175;
					positions = {
						[1] = {
							x = 0.000000;
							y = -5.000000;
						};
						[2] = {
							x = 0.000000;
							y = 0.000000;
						};
						[3] = {
							x = 0.000000;
							y = 5.000000;
						};
					};
				};
				pulse = {
					id = 241;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 171;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[241] = {
			name = [[Phtorctr Pls Cann]];
			shortName = [[PHTOPULS]];
			notes = [[Photoreactor Pulse Cannon]];
			staticName = [[Phtorctr Pls Cann]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 60;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 557;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 242;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 10;
				ammo = 150;
				range = 810000;
				inverseSpeed = 17;
				restockCost = 30;
			};
			portraitId = 0;
		};
		[242] = {
			name = [[Photoreactor Puls]];
			shortName = [[PHTOPULS]];
			notes = [[Photoreactor Pulse]];
			staticName = [[Photoreactor Puls]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 200;
			initialAge = 60;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 614;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = -2;
			initialDirectionRange = 4;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 11;
				direction = 1;
				directionRange = 0;
				speed = 36;
				speedRange = 0;
				shape = 0;
				shapeRange = 11;
			};
			portraitId = 0;
		};
		[243] = {
			name = [[Heavy Destroyer]];
			shortName = [[HVDSTRYR]];
			notes = [[Gaitori Heavy Destroyer]];
			staticName = [[Heavy Destroyer]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 450;
			race = 300;
			price = 6500;
			buildTime = 6500;
			buildRatio = 0.097656;
			offence = 4.000000;
			escortRank = 7;
			maxVelocity = 4.500000;
			warpSpeed = 40.000000;
			warpOutDistance = 22503164;
			initialVelocity = 1.500000;
			initialVelocityRange = 0.000000;
			mass = 1.449219;
			thrust = 0.078125;
			health = 2000;
			energy = 2000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 608;
			iconShape = [[triangle]];
			iconSize = 6;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 39;
					positions = {
						[1] = {
							x = -10.000000;
							y = -5.000000;
						};
						[2] = {
							x = -10.000000;
							y = 5.000000;
						};
					};
				};
				pulse = {
					id = 244;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 73;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = -20.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 52;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1244;
		};
		[244] = {
			name = [[Neutron Pulse Gun]];
			shortName = [[NEUTRON]];
			notes = [[Neutron Pulse Gun]];
			staticName = [[Neutron Pulse Gun]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 60;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 559;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 245;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 10;
				ammo = 150;
				range = 810000;
				inverseSpeed = 17;
				restockCost = 30;
			};
			portraitId = 0;
		};
		[245] = {
			name = [[Neutron Pulse]];
			shortName = [[NEUTRON]];
			notes = [[Neutron Pulse]];
			staticName = [[Neutron Pulse]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 15.000000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 200;
			initialAge = 60;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 613;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = -2;
			initialDirectionRange = 4;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 53;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 5;
				direction = 1;
				directionRange = 0;
				speed = 36;
				speedRange = 0;
				shape = 0;
				shapeRange = 5;
			};
			portraitId = 0;
		};
		[246] = {
			name = [[Assault Transport]];
			shortName = [[ASLTTRAN]];
			notes = [[Gaitori Assault Transport]];
			staticName = [[Assault Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = true;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = true;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = true;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = true;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = true;
				orderKey3 = false;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 860;
			race = 300;
			price = 2000;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.199219;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 216090000;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 1200;
			energy = 800;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 616;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 39;
					positions = {
						[1] = {
							x = 0.000000;
							y = -8.000000;
						};
						[2] = {
							x = 0.000000;
							y = 8.000000;
						};
					};
				};
				pulse = {
					id = 74;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 247;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 8.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 320000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[activate special]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[247] = {
			name = [[Assault Team]];
			shortName = [[ASLTTEAM]];
			notes = [[Gaitori Assault Team]];
			staticName = [[Assault Team]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 566;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object set destination]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 248;
							min = 6;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 240;
				ammo = 2;
				range = 2073600;
				inverseSpeed = 28;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[248] = {
			name = [[EVA Trooper]];
			shortName = [[EVAT]];
			notes = [[Gaitori Extra-vehicular Assault Trooper]];
			staticName = [[EVA Trooper]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = true;
				engageKey1 = false;
				engageKey2 = true;
				engageKey3 = false;
				engageKey4 = true;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = true;
				orderKey3 = false;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 10;
			race = 300;
			price = 600;
			buildTime = 600;
			buildRatio = 0.000000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 0.500000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 0.000000;
			mass = 0.007812;
			thrust = 0.019531;
			health = 10;
			energy = 50;
			damage = 0;
			initialAge = 4000;
			initialAgeRange = 0;
			scale = 0.500000;
			layer = 2;
			spriteId = 619;
			iconShape = [[triangle]];
			iconSize = 1;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 39;
					positions = {
						[1] = {
							x = 0.000000;
							y = -3.000000;
						};
						[2] = {
							x = 0.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 2.000000;
			arriveActionDistance = 5000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							how = [[expire]];
						};
						[1] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							priority = 4;
							persistence = 60;
							isAbsolute = true;
							volume = 255;
							volumeRange = 0;
							soundId = 31989;
							soundIdRange = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[occupation]];
							value = 1;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 12558;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 6.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[249] = {
			name = [[Assault Transport]];
			shortName = [[ASLTTRAN]];
			notes = [[Human Assault Transport]];
			staticName = [[Assault Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = true;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = true;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = true;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = true;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = true;
				orderKey3 = false;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 860;
			race = 900;
			price = 2000;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.199219;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 1200;
			energy = 800;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 617;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 175;
					positions = {
						[1] = {
							x = 0.000000;
							y = -8.000000;
						};
						[2] = {
							x = 0.000000;
							y = 8.000000;
						};
					};
				};
				pulse = {
					id = 74;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 98;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 8.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 320000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[activate special]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[activate special]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[250] = {
			name = [[Assault Transport]];
			shortName = [[ASLTTRAN]];
			notes = [[Audemedon Assault Transport]];
			staticName = [[Assault Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = true;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = true;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = true;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = true;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = true;
				orderKey3 = false;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 860;
			race = 700;
			price = 2000;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.199219;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 1200;
			energy = 800;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 615;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 6;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 145;
					positions = {
						[1] = {
							x = 0.000000;
							y = -8.000000;
						};
						[2] = {
							x = 0.000000;
							y = 8.000000;
						};
					};
				};
				pulse = {
					id = 157;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = 251;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 8.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 320000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[activate special]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 1251;
		};
		[251] = {
			name = [[Assault Team]];
			shortName = [[ASLTTEAM]];
			notes = [[Audemedon Assault Team]];
			staticName = [[Assault Team]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 16515072;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 569;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object set destination]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 252;
							min = 10;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 4;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 240;
				ammo = 2;
				range = 2073600;
				inverseSpeed = 28;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[252] = {
			name = [[EVA Trooper]];
			shortName = [[EVAT]];
			notes = [[Audemedon Extra-vehicular Assault Trooper]];
			staticName = [[EVA Trooper]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = true;
				engageKey1 = false;
				engageKey2 = true;
				engageKey3 = false;
				engageKey4 = true;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = true;
				orderKey3 = false;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 10;
			race = 700;
			price = 600;
			buildTime = 600;
			buildRatio = 0.000000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 0.500000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 0.000000;
			mass = 0.007812;
			thrust = 0.019531;
			health = 100;
			energy = 200;
			damage = 0;
			initialAge = 4000;
			initialAgeRange = 0;
			scale = 0.500000;
			layer = 2;
			spriteId = 618;
			iconShape = [[triangle]];
			iconSize = 1;
			shieldColor = 6;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 145;
					positions = {
						[1] = {
							x = 0.000000;
							y = -3.000000;
						};
						[2] = {
							x = 0.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 2.000000;
			arriveActionDistance = 5000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							how = [[expire]];
						};
						[1] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							priority = 4;
							persistence = 60;
							isAbsolute = true;
							volume = 255;
							volumeRange = 0;
							soundId = 31989;
							soundIdRange = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[occupation]];
							value = 1;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 12558;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 6.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[253] = {
			name = [[EVA Trooper]];
			shortName = [[EVAT]];
			notes = [[Salrilian Extra-vehicular Assault Trooper]];
			staticName = [[EVA Trooper]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = true;
				engageKey1 = false;
				engageKey2 = true;
				engageKey3 = false;
				engageKey4 = true;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = true;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = true;
				orderKey3 = false;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 10;
			race = 600;
			price = 600;
			buildTime = 600;
			buildRatio = 0.000000;
			offence = 0.500000;
			escortRank = 1;
			maxVelocity = 0.500000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 0.000000;
			mass = 0.007812;
			thrust = 0.019531;
			health = 10;
			energy = 50;
			damage = 0;
			initialAge = 4000;
			initialAgeRange = 0;
			scale = 0.500000;
			layer = 2;
			spriteId = 602;
			iconShape = [[triangle]];
			iconSize = 1;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 134;
					positions = {
						[1] = {
							x = 0.000000;
							y = -3.000000;
						};
						[2] = {
							x = 0.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 2.000000;
			arriveActionDistance = 5000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
						[0] = {
							type = [[die]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							how = [[expire]];
						};
						[1] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							priority = 4;
							persistence = 60;
							isAbsolute = true;
							volume = 255;
							volumeRange = 0;
							soundId = 31989;
							soundIdRange = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = -1610612736;
							exclusiveFilter = -1;
							subjectOverride = -1;
							directOverride = -1;
							owner = -1;
							delay = 0;
							alterType = [[occupation]];
							value = 1;
						};
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 12558;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 35;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = false;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 6.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[254] = {
			name = [[Assault Team]];
			shortName = [[ASLTTEAM]];
			notes = [[Salrilian Assault Team]];
			staticName = [[Assault Team]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 20;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 568;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object set destination]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 253;
							min = 6;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 240;
				ammo = 2;
				range = 2073600;
				inverseSpeed = 28;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[255] = {
			name = [[Sparkle]];
			shortName = [[SPARKLE]];
			notes = [[Sparkle]];
			staticName = [[Sparkle]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 655;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 6;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[256] = {
			name = [[C Missile]];
			shortName = [[CMISSILE]];
			notes = [[Can't target or turn?]];
			staticName = [[C Missile]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.500000;
			initialVelocityRange = 0.000000;
			mass = 0.500000;
			thrust = 0.199219;
			health = 25;
			energy = 0;
			damage = 200;
			initialAge = 30;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 528;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 79;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 30;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 533;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = true;
							id = 72;
						};
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 0.007812;
				turnAcceleration = 0.000000;
			};
			portraitId = 0;
		};
		[257] = {
			name = [[Large Explosion]];
			shortName = [[EXPLOSN]];
			notes = [[No bodies, no debris]];
			staticName = [[Large Explosion]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 3;
			spriteId = 504;
			iconShape = [[square]];
			iconSize = 2;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 4;
							persistence = 60;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 515;
							soundIdRange = 0;
						};
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 17;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[258] = {
			name = [[Trans-Space Bolt]];
			shortName = [[TRNSBOLT]];
			notes = [[Trans-Space Bolt]];
			staticName = [[Trans-Space Bolt]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = true;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 15;
			initialAge = 45;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			beam = {
				hex = 5;
				type = [[bolt]];
				mode = [[relative]];
				color = 9;
				accuracy = 0;
				range = 30.000000;
			};
			portraitId = 0;
		};
		[259] = {
			name = [[T-Space Bolt Rod]];
			shortName = [[TRNSBOLT]];
			notes = [[Trans-Spacial Bolt Firing Rod]];
			staticName = [[T-Space Bolt Rod]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 1.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 45;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 30;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 563;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 258;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = true;
					hex = 7;
				};
				energyCost = 50;
				reload = 60;
				ammo = -1;
				range = 810000;
				inverseSpeed = 12;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[260] = {
			name = [[Trazer Beam]];
			shortName = [[TRZRBEAM]];
			notes = [[Trazer Beam]];
			staticName = [[Trazer Beam]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = true;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 30;
			initialAge = 90;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			beam = {
				hex = 3;
				type = [[static]];
				mode = [[relative]];
				color = 13;
				accuracy = 50;
				range = 17.320509;
			};
			portraitId = 0;
		};
		[261] = {
			name = [[Trazer Cannon]];
			shortName = [[TRAZER]];
			notes = [[Trazer Cannon]];
			staticName = [[Trazer Cannon]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 30;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 564;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 260;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = true;
					hex = 7;
				};
				energyCost = 50;
				reload = 30;
				ammo = -1;
				range = 50625;
				inverseSpeed = 17;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[262] = {
			name = [[Fireball Trail]];
			shortName = [[FIRETRL]];
			notes = [[Fireball Trail]];
			staticName = [[Fireball Trail]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 50;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 656;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 4;
				direction = 1;
				directionRange = 0;
				speed = 80;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[263] = {
			name = [[Fireball]];
			shortName = [[FIREBALL]];
			notes = [[Fireball]];
			staticName = [[Fireball]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 12.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 12.000000;
			initialVelocityRange = 0.000000;
			mass = 0.097656;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 100;
			initialAge = 45;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 3;
			spriteId = 656;
			iconShape = [[square]];
			iconSize = 1;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 262;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 1;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 8;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[expire]];
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[264] = {
			name = [[Plasma Ball]];
			shortName = [[PLASMA]];
			notes = [[Plasma Ball, Fireball]];
			staticName = [[Plasma Ball]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 12.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 45;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 263;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 15;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 565;
							soundIdRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 25;
				ammo = 50;
				range = 291600;
				inverseSpeed = 21;
				restockCost = 3;
			};
			portraitId = 0;
		};
		[265] = {
			name = [[Asteroid]];
			shortName = [[Asteroid]];
			notes = [[Asteroid (random direction)]];
			staticName = [[Asteroid]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = true;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = true;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = true;
				levelKey2 = true;
				levelKey3 = false;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 3.000000;
			initialVelocityRange = 1.000000;
			mass = 10.000000;
			thrust = 0.000000;
			health = 10000;
			energy = 0;
			damage = 10;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 543;
			iconShape = [[framed square]];
			iconSize = 4;
			shieldColor = 255;
			initialDirection = -45;
			initialDirectionRange = 90;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 1.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = true;
							minimum = 0.000000;
							range = 2.000000;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 189;
							min = -10;
							range = 12;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 2;
						};
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 257;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 190;
							min = 2;
							range = 2;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 20;
				direction = -1;
				directionRange = -1;
				speed = 30;
				speedRange = 0;
				shape = 0;
				shapeRange = 19;
			};
			portraitId = 0;
		};
		[266] = {
			name = [[Asteroid Shoot Up]];
			shortName = [[ASTSHTUP]];
			notes = [[Asteroid Shoot Up, Random Direction]];
			staticName = [[Asteroid Shoot Up]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 573;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 265;
							min = 1;
							range = 2;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 4096;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 195;
							min = -4;
							range = 5;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 4096;
						};
					};
					interval = 255;
					intervalRange = 255;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[267] = {
			name = [[AsteroidShootDown]];
			shortName = [[ASTSHTDN]];
			notes = [[Asteroid Shoot Down, Random Direction]];
			staticName = [[AsteroidShootDown]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 573;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 15;
			initialDirection = 180;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 265;
							min = 1;
							range = 2;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 4096;
						};
					};
					interval = 255;
					intervalRange = 255;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 0;
		};
		[268] = {
			name = [[Untitled]];
			shortName = [[Untitled]];
			notes = [[Untitled]];
			staticName = [[Untitled]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = -1.000000;
			escortRank = 0;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 0;
				ammo = 0;
				range = 0;
				inverseSpeed = 0;
				restockCost = 0;
			};
			portraitId = 0;
		};
		[269] = {
			name = [[Monkey Friend]];
			shortName = [[MONKEY]];
			notes = [[Monkey Friend]];
			staticName = [[Monkey Friend]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = -1.000000;
			escortRank = 0;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 0;
				ammo = 0;
				range = 0;
				inverseSpeed = 0;
				restockCost = 0;
			};
			portraitId = 0;
		};
		[270] = {
			name = [[Outpost Station]];
			shortName = [[OUTPOST]];
			notes = [[Outpost]];
			staticName = [[Outpost Station]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = true;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = true;
				isDestination = true;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = true;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = true;
				levelKey3 = false;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = 10;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 5000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 5;
			scale = 2.000000;
			layer = 1;
			spriteId = 801;
			iconShape = [[framed square]];
			iconSize = 7;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = 96;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = 73;
					positions = {
					};
				};
			};
			friendDefecit = 3.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 0;
				direction = 0;
				directionRange = 0;
				speed = 0;
				speedRange = 0;
				shape = 0;
				shapeRange = 0;
			};
			portraitId = 1271;
		};
		[271] = {
			name = [[Inasa Pulse Gun]];
			shortName = [[INSAPLSE]];
			notes = [[Inasa Pulse Gun]];
			staticName = [[Inasa Pulse Gun]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 20.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 45;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 538;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 144;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 23;
				ammo = -1;
				range = 810000;
				inverseSpeed = 12;
				restockCost = -1;
			};
			portraitId = 0;
		};
		[272] = {
			name = [[Cruiser]];
			shortName = [[CRUISER]];
			notes = [[Cruiser, Grolk for CTF, P1]];
			staticName = [[Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 201;
			race = 1100;
			price = 1000;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 5.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.027344;
			health = 1000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 657;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 169;
					positions = {
						[1] = {
							x = -14.000000;
							y = -3.000000;
						};
						[2] = {
							x = -14.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = 173;
					positions = {
						[1] = {
							x = -7.000000;
							y = -16.000000;
						};
						[2] = {
							x = -7.000000;
							y = 16.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 571;
							soundIdRange = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = 3;
							owner = 0;
							delay = 0;
							alterType = [[location]];
							relative = true;
							minimum = 600;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[health]];
							value = 1000;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = false;
							minimum = 0.000000;
							range = 0.000000;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 280;
						};
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[273] = {
			name = [[Cruiser]];
			shortName = [[CRUISER]];
			notes = [[Cruiser, Grolk, for CTF, P2]];
			staticName = [[Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 202;
			race = 1100;
			price = 1000;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 5.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.027344;
			health = 1000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 657;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 169;
					positions = {
						[1] = {
							x = -14.000000;
							y = -3.000000;
						};
						[2] = {
							x = -14.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = 173;
					positions = {
						[1] = {
							x = -7.000000;
							y = -16.000000;
						};
						[2] = {
							x = -7.000000;
							y = 16.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 571;
							soundIdRange = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = 2;
							owner = 0;
							delay = 0;
							alterType = [[location]];
							relative = true;
							minimum = 600;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[health]];
							value = 1000;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = false;
							minimum = 0.000000;
							range = 0.000000;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 281;
						};
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[274] = {
			name = [[Player 1's Flag]];
			shortName = [[FLAG P1]];
			notes = [[Flag, for CTF, P1]];
			staticName = [[Player 1's Flag]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 221;
			race = 1100;
			price = 1000;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 1324297;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.058594;
			health = 100000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 659;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = -14.000000;
							y = -3.000000;
						};
						[2] = {
							x = -14.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = -7.000000;
							y = -16.000000;
						};
						[2] = {
							x = -7.000000;
							y = 16.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = true;
							value = -1;
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[275] = {
			name = [[Player 2's Flag]];
			shortName = [[FLAG P2]];
			notes = [[Flag, for CTF, P2]];
			staticName = [[Player 2's Flag]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 222;
			race = 1100;
			price = 1000;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 1324297;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.058594;
			health = 100000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 659;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = -14.000000;
							y = -3.000000;
						};
						[2] = {
							x = -14.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = -7.000000;
							y = -16.000000;
						};
						[2] = {
							x = -7.000000;
							y = 16.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = true;
							value = -1;
						};
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[276] = {
			name = [[Tractor Moor]];
			shortName = [[MOOR 1 Y]];
			notes = [[Moor, for CTF, P1, Active]];
			staticName = [[Tractor Moor]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 658;
			iconShape = [[plus]];
			iconSize = 3;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[health]];
							value = 1000;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 277;
						};
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 11;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 0;
				shapeRange = 11;
			};
			portraitId = 0;
		};
		[277] = {
			name = [[Tractor Moor]];
			shortName = [[MOOR 1 N]];
			notes = [[Moor, for CTF, P1 Inactive]];
			staticName = [[Tractor Moor]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = true;
				engageKey1 = true;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = true;
				levelKey1 = true;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 1800;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 658;
			iconShape = [[plus]];
			iconSize = 3;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = 283;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 11;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 0;
				shapeRange = 11;
			};
			portraitId = 0;
		};
		[278] = {
			name = [[Tractor Moor]];
			shortName = [[MOOR 2 Y]];
			notes = [[Moor, for CTF, P2 Active]];
			staticName = [[Tractor Moor]];
			attributes = {
				canTurn = false;
				canBeEngaged = true;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = true;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 658;
			iconShape = [[plus]];
			iconSize = 3;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[health]];
							value = 1000;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 279;
						};
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 11;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 0;
				shapeRange = 11;
			};
			portraitId = 0;
		};
		[279] = {
			name = [[Tractor Moor]];
			shortName = [[MOOR 2 N]];
			notes = [[Moor, for CTF, P2 Inactive]];
			staticName = [[Tractor Moor]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = true;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = true;
				engageKey1 = true;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = true;
				levelKey1 = true;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 1800;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 1;
			spriteId = 658;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 15;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = 282;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			animation = {
				firstShape = 0;
				lastShape = 11;
				direction = 1;
				directionRange = 0;
				speed = 40;
				speedRange = 0;
				shape = 0;
				shapeRange = 11;
			};
			portraitId = 0;
		};
		[280] = {
			name = [[Cruiser]];
			shortName = [[CRUISER]];
			notes = [[Cruiser, for CTF, Player 1, Inactive]];
			staticName = [[Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = true;
				canOnlyEngage = false;
				engageKey1 = true;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = true;
				levelKey1 = true;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 203;
			race = 1100;
			price = 1000;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.027344;
			health = 1000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 657;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = -14.000000;
							y = -3.000000;
						};
						[2] = {
							x = -14.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = -7.000000;
							y = -16.000000;
						};
						[2] = {
							x = -7.000000;
							y = 16.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[281] = {
			name = [[Cruiser]];
			shortName = [[CRUISER]];
			notes = [[Cruiser, for CTF, Player 2, Inactive]];
			staticName = [[Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = true;
				canOnlyEngage = false;
				engageKey1 = true;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = true;
				levelKey1 = true;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = true;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 204;
			race = 1100;
			price = 1000;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.027344;
			health = 1000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 657;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = -14.000000;
							y = -3.000000;
						};
						[2] = {
							x = -14.000000;
							y = 3.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = -7.000000;
							y = -16.000000;
						};
						[2] = {
							x = -7.000000;
							y = 16.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = true;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[282] = {
			name = [[Reactivator]];
			shortName = [[RCTVTR]];
			notes = [[for CTF moor -- P2's moor -- turns deactivated ship active]];
			staticName = [[Reactivator]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 272;
						};
						[1] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 5;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 551;
							soundIdRange = 0;
						};
						[2] = {
							type = [[nil target]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 70;
				ammo = -1;
				range = 2073600;
				inverseSpeed = 28;
				restockCost = 0;
			};
			portraitId = 0;
		};
		[283] = {
			name = [[Reactivator]];
			shortName = [[RCTVTR]];
			notes = [[Reactivator, for CTF, P2]];
			staticName = [[Reactivator]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = true;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 9.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 160;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 273;
						};
						[1] = {
							type = [[play sound]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 5;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 551;
							soundIdRange = 0;
						};
						[2] = {
							type = [[nil target]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 70;
				ammo = -1;
				range = 2073600;
				inverseSpeed = 28;
				restockCost = 0;
			};
			portraitId = 0;
		};
		[284] = {
			name = [[Light Cruiser]];
			shortName = [[LGHTCRSR]];
			notes = [[Light Cruiser, Grolk]];
			staticName = [[Light Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 200;
			race = 1100;
			price = 1000;
			buildTime = 1000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 5.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.027344;
			health = 1000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 660;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = -14.000000;
							y = -3.000000;
						};
					};
				};
				pulse = {
					id = 285;
					positions = {
						[1] = {
							x = -14.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[285] = {
			name = [[Light Phtoreactor]];
			shortName = [[LTPHTORT]];
			notes = [[Light Photoreactor Pulse Cannon]];
			staticName = [[Light Phtoreactor]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = 0.000000;
			escortRank = -256;
			maxVelocity = 15.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 0;
			initialAge = 60;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
						[0] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 3;
							persistence = 10;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 557;
							soundIdRange = 0;
						};
						[1] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 242;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = true;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 39;
				ammo = 150;
				range = 810000;
				inverseSpeed = 17;
				restockCost = 30;
			};
			portraitId = 0;
		};
		[286] = {
			name = [[U.N.S. Ares]];
			shortName = [[UNSARES]];
			notes = [[Ares for Shoplifter 2]];
			staticName = [[U.N.S. Ares]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = true;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = true;
				levelKey3 = true;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = -5.000000;
			escortRank = -256;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 1000;
			energy = 0;
			damage = 1;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 2.000000;
			layer = 2;
			spriteId = 599;
			iconShape = [[plus]];
			iconSize = 7;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = -5.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 0.000000;
				turnAcceleration = 0.000000;
			};
			portraitId = 0;
		};
		[287] = {
			name = [[Transport]];
			shortName = [[TRANSPRT]];
			notes = [[Special transport for newtorial 1; can't evade, be attacked, or collide]];
			staticName = [[Transport]];
			attributes = {
				canTurn = true;
				canBeEngaged = false;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = true;
				sufficientEscortExists = true;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = true;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = true;
				targetIsBase = true;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = true;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = true;
				orderKey2 = true;
				orderKey3 = true;
				orderKey4 = true;
				hex = 4194303;
			};
			class = 832;
			race = 200;
			price = 800;
			buildTime = 2200;
			buildRatio = 0.699219;
			offence = 0.148438;
			escortRank = 9;
			maxVelocity = 3.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 9734400;
			initialVelocity = 3.000000;
			initialVelocityRange = 0.000000;
			mass = 1.097656;
			thrust = 0.156250;
			health = 250;
			energy = 800;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 514;
			iconShape = [[plus]];
			iconSize = 5;
			shieldColor = 8;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				pulse = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 2.000000;
			dangerThreshold = 4.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[288] = {
			name = [[Cruiser]];
			shortName = [[CRUISER]];
			notes = [[Cruiser -- for newtorial 3; adopts init ob # of score 0]];
			staticName = [[Cruiser]];
			attributes = {
				canTurn = true;
				canBeEngaged = true;
				hasDirectionGoal = true;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = true;
				isSelfAnimated = false;
				shapeFromDirection = true;
				isPlayerShip = false;
				canBeDestination = true;
				canEngage = true;
				canEvade = true;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = true;
				autoTarget = false;
				animationCycle = false;
				canCollide = true;
				canBeHit = true;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = true;
				hated = true;
				occupiesSpace = true;
				staticDestination = false;
				canBeEvaded = true;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = true;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = 267;
			race = 100;
			price = 1000;
			buildTime = 3000;
			buildRatio = 1.000000;
			offence = 1.000000;
			escortRank = 3;
			maxVelocity = 5.000000;
			warpSpeed = 40.000000;
			warpOutDistance = 9734400;
			initialVelocity = 5.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.156250;
			health = 1000;
			energy = 1000;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 2;
			spriteId = 501;
			iconShape = [[triangle]];
			iconSize = 4;
			shieldColor = 0;
			initialDirection = 0;
			initialDirectionRange = 360;
			weapons = {
				beam = {
					id = 1;
					positions = {
						[1] = {
							x = 0.000000;
							y = -10.000000;
						};
						[2] = {
							x = 0.000000;
							y = 10.000000;
						};
					};
				};
				pulse = {
					id = 60;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
				special = {
					id = -1;
					positions = {
						[1] = {
							x = 0.000000;
							y = 0.000000;
						};
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 1.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
						[0] = {
							type = [[assume initial object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5;
						};
						[1] = {
							type = [[change score]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 0;
							amount = 1;
						};
					};
				};
				destroy = {
					seq = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 29;
							min = 1;
							range = 0;
							velocityRelative = false;
							directionRelative = true;
							distanceRange = 0;
						};
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			rotation = {
				offset = 0;
				resolution = 15;
				turnRate = 2.000000;
				turnAcceleration = 1.000000;
			};
			portraitId = 0;
		};
		[289] = {
			name = [[Untitled]];
			shortName = [[Untitled]];
			notes = [[Untitled]];
			staticName = [[Untitled]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = -1.000000;
			escortRank = 0;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 0;
				ammo = 0;
				range = 0;
				inverseSpeed = 0;
				restockCost = 0;
			};
			portraitId = 0;
		};
		[290] = {
			name = [[Untitled]];
			shortName = [[Untitled]];
			notes = [[Untitled]];
			staticName = [[Untitled]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = -1.000000;
			escortRank = 0;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 0;
				ammo = 0;
				range = 0;
				inverseSpeed = 0;
				restockCost = 0;
			};
			portraitId = 0;
		};
		[291] = {
			name = [[Untitled]];
			shortName = [[Untitled]];
			notes = [[Untitled]];
			staticName = [[Untitled]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = -1.000000;
			escortRank = 0;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 0;
				ammo = 0;
				range = 0;
				inverseSpeed = 0;
				restockCost = 0;
			};
			portraitId = 0;
		};
		[292] = {
			name = [[Untitled]];
			shortName = [[Untitled]];
			notes = [[Untitled]];
			staticName = [[Untitled]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = -1.000000;
			escortRank = 0;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 0;
				ammo = 0;
				range = 0;
				inverseSpeed = 0;
				restockCost = 0;
			};
			portraitId = 0;
		};
		[293] = {
			name = [[Untitled]];
			shortName = [[Untitled]];
			notes = [[Untitled]];
			staticName = [[Untitled]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = -1.000000;
			escortRank = 0;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 0;
				ammo = 0;
				range = 0;
				inverseSpeed = 0;
				restockCost = 0;
			};
			portraitId = 0;
		};
		[294] = {
			name = [[Untitled]];
			shortName = [[Untitled]];
			notes = [[Untitled]];
			staticName = [[Untitled]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = -1.000000;
			escortRank = 0;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 0;
				ammo = 0;
				range = 0;
				inverseSpeed = 0;
				restockCost = 0;
			};
			portraitId = 0;
		};
		[295] = {
			name = [[Untitled]];
			shortName = [[Untitled]];
			notes = [[Untitled]];
			staticName = [[Untitled]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = -1.000000;
			escortRank = 0;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 0;
				ammo = 0;
				range = 0;
				inverseSpeed = 0;
				restockCost = 0;
			};
			portraitId = 0;
		};
		[296] = {
			name = [[Untitled]];
			shortName = [[Untitled]];
			notes = [[Untitled]];
			staticName = [[Untitled]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = -1.000000;
			escortRank = 0;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 0;
				ammo = 0;
				range = 0;
				inverseSpeed = 0;
				restockCost = 0;
			};
			portraitId = 0;
		};
		[297] = {
			name = [[Untitled]];
			shortName = [[Untitled]];
			notes = [[Untitled]];
			staticName = [[Untitled]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = -1.000000;
			escortRank = 0;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 0;
				ammo = 0;
				range = 0;
				inverseSpeed = 0;
				restockCost = 0;
			};
			portraitId = 0;
		};
		[298] = {
			name = [[Untitled]];
			shortName = [[Untitled]];
			notes = [[Untitled]];
			staticName = [[Untitled]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = -1.000000;
			escortRank = 0;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 0;
				ammo = 0;
				range = 0;
				inverseSpeed = 0;
				restockCost = 0;
			};
			portraitId = 0;
		};
		[299] = {
			name = [[Untitled]];
			shortName = [[Untitled]];
			notes = [[Untitled]];
			staticName = [[Untitled]];
			attributes = {
				canTurn = false;
				canBeEngaged = false;
				hasDirectionGoal = false;
				isRemote = false;
				isHumanControlled = false;
				isBeam = false;
				doesBounce = false;
				isSelfAnimated = false;
				shapeFromDirection = false;
				isPlayerShip = false;
				canBeDestination = false;
				canEngage = false;
				canEvade = false;
				canAcceptMessages = false;
				canAcceptBuild = false;
				canAcceptDestination = false;
				autoTarget = false;
				animationCycle = false;
				canCollide = false;
				canBeHit = false;
				isDestination = false;
				hideEffect = false;
				releaseEnergyOnDeath = false;
				hated = false;
				occupiesSpace = false;
				staticDestination = false;
				canBeEvaded = false;
				neutralDeath = false;
				isGuided = false;
				appearOnRadar = false;
				bit31 = false;
				onAutoPilot = false;
				hex = -1;
			};
			buildFlags = {
				uncapturedBaseExists = false;
				sufficientEscortExists = false;
				thisBaseNeedsProtection = false;
				friendUpTrend = false;
				friendDownTrend = false;
				foeUpTrend = false;
				foeDownTrend = false;
				matchingFoeExists = false;
				onlyEngagedBy = false;
				canOnlyEngage = false;
				engageKey1 = false;
				engageKey2 = false;
				engageKey3 = false;
				engageKey4 = false;
				levelKey1 = false;
				levelKey2 = false;
				levelKey3 = false;
				levelKey4 = false;
				hex = 262143;
			};
			orderFlags = {
				strongerThanTarget = false;
				targetIsBase = false;
				targetIsNotBase = false;
				targetIsLocal = false;
				targetIsRemote = false;
				onlyEscortNotBase = false;
				targetIsFriend = false;
				targetIsFoe = false;
				hardMatchingFriend = false;
				hardMatchingFoe = false;
				hardFriendlyEscortOnly = false;
				hardNoFriendlyEscort = false;
				hardTargetIsRemote = false;
				hardTargetIsLocal = false;
				hardTargetIsFoe = false;
				hardTargetIsFriend = false;
				hardTargetIsNotBase = false;
				hardTargetIsBase = false;
				orderKey1 = false;
				orderKey2 = false;
				orderKey3 = false;
				orderKey4 = false;
				hex = 4194303;
			};
			class = -1;
			race = -1;
			price = 0;
			buildTime = 0;
			buildRatio = 0.000000;
			offence = -1.000000;
			escortRank = 0;
			maxVelocity = 0.000000;
			warpSpeed = 0.000000;
			warpOutDistance = 0;
			initialVelocity = 0.000000;
			initialVelocityRange = 0.000000;
			mass = 1.000000;
			thrust = 0.000000;
			health = 0;
			energy = 0;
			damage = 0;
			initialAge = -1;
			initialAgeRange = 0;
			scale = 1.000000;
			layer = 0;
			spriteId = -1;
			iconShape = [[square]];
			iconSize = 0;
			shieldColor = 255;
			initialDirection = 0;
			initialDirectionRange = 0;
			weapons = {
				beam = {
					id = -1;
					positions = {
					};
				};
				pulse = {
					id = -1;
					positions = {
					};
				};
				special = {
					id = -1;
					positions = {
					};
				};
			};
			friendDefecit = 0.000000;
			dangerThreshold = 0.000000;
			arriveActionDistance = 50000;
			actions = {
				activate = {
					seq = {
					};
					interval = 0;
					intervalRange = 0;
				};
				arrive = {
					seq = {
					};
				};
				collide = {
					seq = {
					};
				};
				create = {
					seq = {
					};
				};
				destroy = {
					seq = {
					};
					dontDieOnDeath = false;
				};
				expire = {
					seq = {
					};
				};
			};
			device = {
				uses = {
					transportation = false;
					attacking = false;
					defence = false;
					hex = 7;
				};
				energyCost = 0;
				reload = 0;
				ammo = 0;
				range = 0;
				inverseSpeed = 0;
				restockCost = 0;
			};
			portraitId = 0;
		};
	};
	scenarios = {
		[0] = {
			name = [[\i Tutorial Lesson 1\iMoons for Goons]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 0.007812;
					netRaceFlags = 0;
				};
				[2] = {
					type = [[cpu]];
					race = 200;
					name = [[The Cantharan Order]];
					earningPower = 1.000000;
					netRaceFlags = 0;
				};
			};
			scoreString = {
				[0] = [[-Destroy all 5]];
				[1] = [[_-transports.]];
				[2] = [[4\0\0\5\f\t\Remaining: \/5]];
			};
			initialObjects = {
				[0] = {
					type = 0;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 0;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -3000;
						y = 3000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 24;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 3000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 47;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 3000;
						y = 3000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 23;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 5000;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Simulated Planet]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 287;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 3000;
						y = -1000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = true;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[6] = {
					type = 0;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 3000;
						y = 3000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 25;
					owner = 1;
					initialDestination = 7;
					position = {
						x = 3000;
						y = -6000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[8] = {
					type = 25;
					owner = 1;
					initialDestination = 8;
					position = {
						x = 3250;
						y = -6250;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[disable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 318767104;
						};
						[1] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 1;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = false;
							minimum = 0.000000;
							range = 0.000000;
						};
						[3] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5700;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
				[1] = {
					type = [[current computer selection]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5701;
							page = 3;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					screen = 4;
					line = -1;
				};
				[2] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 3;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5701;
					page = 3;
				};
				[3] = {
					type = [[current computer selection]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5750;
							page = 1;
						};
						[1] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335544320;
						};
						[2] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 22;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					screen = 1;
					line = -1;
				};
				[4] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 3;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 5;
							range = 0;
						};
						[2] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335544320;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5704;
					page = 6;
				};
				[5] = {
					type = [[zoom level]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5711;
							page = 4;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
				[6] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[set destination]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 5;
							directOverride = 0;
							owner = 0;
							delay = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 7;
							range = 0;
						};
						[2] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 5;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5711;
					page = 2;
				};
				[7] = {
					type = [[proximity]];
					subject = 0;
					direct = 5;
					actions = {
						[0] = {
							type = [[set destination]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 5;
							directOverride = 4;
							owner = 0;
							delay = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 120;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 8;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[8] = {
					type = [[proximity]];
					subject = 4;
					direct = 5;
					actions = {
						[0] = {
							type = [[set destination]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 5;
							directOverride = 0;
							owner = 0;
							delay = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 120;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 7;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[9] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 5;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 10;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5711;
					page = 4;
				};
				[10] = {
					type = [[zoom level]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5715;
							page = 6;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 7;
				};
				[11] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[disable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 318767104;
						};
						[1] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 7;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5715;
					page = 1;
				};
				[12] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 2;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[health]];
							value = -249;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5715;
					page = 3;
				};
				[13] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 14;
							range = 0;
						};
						[1] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335544320;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5715;
					page = 6;
				};
				[14] = {
					type = [[zoom level]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5721;
							page = 21;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[15] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335544320;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5721;
					page = 2;
				};
				[16] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335544320;
						};
						[1] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5721;
					page = 4;
				};
				[17] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 4;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5721;
					page = 3;
				};
				[18] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335609856;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5721;
					page = 11;
				};
				[19] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 7;
							range = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 8;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[cloak]];
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 8;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[max velocity]];
							value = 0.000000;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 7;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[max velocity]];
							value = 0.000000;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 4;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = false;
							value = 0;
						};
						[5] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 20;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5721;
					page = 17;
				};
				[20] = {
					type = [[destruction]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 21;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 7;
				};
				[21] = {
					type = [[destruction]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 2;
							text = [[Good work. You completed the first tutorial.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 8;
				};
				[22] = {
					type = [[current computer selection]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5751;
							page = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 23;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					screen = 1;
					line = 3;
				};
				[23] = {
					type = [[current computer selection]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5704;
							page = 7;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					screen = 4;
					line = -1;
				};
			};
			briefing = {
			};
			starmap = {
				x = 330.000000;
				y = 287.000000;
			};
			par = {
				time = 120;
				kills = 9;
				ratio = 0.000000;
				float = 0;
			};
			angle = 5;
			startTime = 0;
			isTraining = true;
			prologue = [[#+B2005\i PROLOGUE \i #+The Ishimans broadcast their plans to your crew -- your crew, once explorers, now reluctant warriors.Using their massive gateship, your new alien allies will transport the UNS Ares and its crew to strategic points along the winding route to Earth. With its jumpstream technology, the gateship can bridge great distances in an instant.  Were it not for the war, you would be home in weeks.You will be supplied with ships and, when possible, bases of operation. The Ishimans will provide you with tactical plans, but it will be up to you to execute them successfully.You have a vast expanse of space to cross, and it is filled with unknowable dangers.But first, you must prepare...]];
			epilogue = [[]];
			songId = 4002;
			movie = nil;
		};
		[1] = {
			name = [[\i Chapter 1 \iEasy Street]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 256;
				};
				[2] = {
					type = [[cpu]];
					race = 300;
					name = [[The Gaitori Union]];
					earningPower = 1.000000;
					netRaceFlags = 16516;
				};
			};
			scoreString = {
				[0] = [[-Destroy all 5]];
				[1] = [[_-transports.]];
				[2] = [[4\0\0\5\f\t\Remaining: \/5]];
			};
			initialObjects = {
				[0] = {
					type = 23;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -97391;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 643;
					builds = {
					};
					nameOverride = [[Charon Station]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 179;
					owner = 1;
					initialDestination = 0;
					position = {
						x = -694;
						y = -35129;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[2] = {
					type = 179;
					owner = 1;
					initialDestination = 0;
					position = {
						x = -347;
						y = -42782;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[3] = {
					type = 179;
					owner = 1;
					initialDestination = 0;
					position = {
						x = 0;
						y = -47999;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[4] = {
					type = 179;
					owner = 1;
					initialDestination = 0;
					position = {
						x = -173;
						y = -53564;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[5] = {
					type = 179;
					owner = 1;
					initialDestination = 0;
					position = {
						x = -522;
						y = -57565;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[6] = {
					type = 0;
					owner = 0;
					initialDestination = 5;
					position = {
						x = 0;
						y = -23652;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 38;
					owner = 1;
					initialDestination = 1;
					position = {
						x = -87;
						y = -33912;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[8] = {
					type = 38;
					owner = 1;
					initialDestination = 1;
					position = {
						x = -782;
						y = -33651;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[9] = {
					type = 38;
					owner = 1;
					initialDestination = 2;
					position = {
						x = 87;
						y = -41390;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[10] = {
					type = 38;
					owner = 1;
					initialDestination = 2;
					position = {
						x = -695;
						y = -41129;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[11] = {
					type = 38;
					owner = 1;
					initialDestination = 3;
					position = {
						x = 0;
						y = -46607;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[12] = {
					type = 38;
					owner = 1;
					initialDestination = 3;
					position = {
						x = -43;
						y = -46869;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[13] = {
					type = 38;
					owner = 1;
					initialDestination = 3;
					position = {
						x = -348;
						y = -46345;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[14] = {
					type = 37;
					owner = 1;
					initialDestination = 4;
					position = {
						x = -348;
						y = -52173;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[15] = {
					type = 37;
					owner = 1;
					initialDestination = 5;
					position = {
						x = -1217;
						y = -56172;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[16] = {
					type = 37;
					owner = 1;
					initialDestination = 5;
					position = {
						x = -347;
						y = -56172;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[17] = {
					type = 37;
					owner = 1;
					initialDestination = 5;
					position = {
						x = 696;
						y = -55999;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[counter]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[set destination]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 17;
							directOverride = 6;
							owner = 0;
							delay = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 2;
						id = 0;
						player = 0;
					};
				};
				[1] = {
					type = [[counter]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 3;
							text = [[You destroyed all five Gaitori transports, preventing any reinforcements from reaching the Gaitori base.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 5;
						id = 0;
						player = 0;
					};
				};
			};
			briefing = {
				[0] = {
					title = [[Charon System]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[Welcome to your first combat mission, humans. In the Charon System, the Gaitori have just established a new base near our space. A small convoy of sublight transports is shuttling in a battalion of Gaitori reinforcements, a blatantly aggressive act. Your mission in the Charon System is to intercept and destroy the five transports.]];
				};
				[1] = {
					title = [[Cruiser]];
					kind = [[object]];
					objectId = 6;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1001^For this mission you will have a single cruiser. Its combination of maneuverability and medium armament make it a useful small offensive vessel. The fusion pulse gun is fairly powerful, and the ship is stocked with 50 fusion pulse charges. The photokinetic beam cannon is an energy based supplement to this weapon.]];
				};
				[2] = {
					title = [[Transport]];
					kind = [[object]];
					objectId = 1;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1087^Use your superlight boosters to quickly traverse the length of the convoy, stopping to destroy each of the five transports.]];
				};
				[3] = {
					title = [[Fighter]];
					kind = [[object]];
					objectId = 7;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1039^The transports are being escorted by an assortment of Gaitori fighters and cruisers. Their primary weapons are kinetic laser cannons, and concussive pellet guns, neither of which are very damaging.^P1038^]];
				};
				[4] = {
					title = [[Charon Station]];
					kind = [[object]];
					objectId = 0;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10001^If any one of the transports reaches the Gaitori base, the mission will be aborted. Good luck.]];
				};
			};
			starmap = {
				x = 330.000000;
				y = 287.000000;
			};
			par = {
				time = 120;
				kills = 9;
				ratio = 0.000000;
				float = 0;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[#+B2005\i PART 1 \i #+10016The Gaitori, ruthless mercenaries and minions of the Cantharan Order, are the first enemy you must face in your quest for Earth. The Gaitori Union, once an interstellar trading empire that linked the many disparate space-faring civilizations together, was brought to its knees by the Order, and now serves as sentry on the Cantharan frontier. #+Although disorganized and thinly dispersed along the Los-Selactos line, the Gaitori navy insulates the Order from the systems in the galactic south. To reach Earth, you must first punch a hole through this border zone.#+Under the guidance of the Ishimans, you will launch your initial strike against the Gaitori, and test your prowess in battle for the first time. You brace your crew for confrontation.]];
			epilogue = [[]];
			songId = 5000;
			movie = [[:Ares Data ƒ:Part 2]];
		};
		[2] = {
			name = [[\i Tutorial Lesson 2\iSection on Selection]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 0.007812;
					netRaceFlags = 0;
				};
				[2] = {
					type = [[cpu]];
					race = 200;
					name = [[The Cantharan Order]];
					earningPower = 1.000000;
					netRaceFlags = 0;
				};
			};
			scoreString = {
				[0] = [[-Destroy all 5]];
				[1] = [[_-transports.]];
				[2] = [[4\0\0\5\f\t\Remaining: \/5]];
			};
			initialObjects = {
				[0] = {
					type = 0;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 61;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 60;
						y = -400;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[2] = {
					type = 19;
					owner = 0;
					initialDestination = 2;
					position = {
						x = 6000;
						y = -100;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[3] = {
					type = 13;
					owner = 0;
					initialDestination = 3;
					position = {
						x = 6000;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[4] = {
					type = 0;
					owner = 0;
					initialDestination = 4;
					position = {
						x = 6000;
						y = 100;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[5] = {
					type = 24;
					owner = 0;
					initialDestination = 5;
					position = {
						x = 6000;
						y = 200;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[6] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -200;
						y = -100;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Simulated Planet]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 287;
					owner = 1;
					initialDestination = 7;
					position = {
						x = 0;
						y = 200;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = true;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5800;
							page = 3;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = false;
							minimum = 0.000000;
							range = 0.000000;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = false;
							minimum = 0.000000;
							range = 0.000000;
						};
						[3] = {
							type = [[disable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 318767104;
						};
						[4] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
				[1] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 2;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5800;
					page = 3;
				};
				[2] = {
					type = [[is auxiliary]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5803;
							page = 8;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[3] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 4;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5803;
					page = 8;
				};
				[4] = {
					type = [[is auxiliary]];
					subject = 6;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5811;
							page = 2;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 2;
							range = 3;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[5] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 2;
							range = 3;
						};
						[1] = {
							type = [[set zoom level]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 7;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 6;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5811;
					page = 2;
				};
				[6] = {
					type = [[is auxiliary]];
					subject = 5;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5813;
							page = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[7] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 2;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
						[1] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 3;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
						[2] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 4;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
						[3] = {
							type = [[die]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 5;
							directOverride = -1;
							owner = 0;
							delay = 0;
							how = [[plain]];
						};
						[4] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 5;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 8;
							range = 0;
						};
						[5] = {
							type = [[set zoom level]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 2;
						};
						[6] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335609856;
						};
						[7] = {
							type = [[disable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 318832640;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5813;
					page = 2;
				};
				[8] = {
					type = [[is auxiliary]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5815;
							page = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[9] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 2;
							range = 3;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 2;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute location]];
							relative = false;
							x = 80;
							y = -500;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 3;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute location]];
							relative = false;
							x = 60;
							y = -600;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 4;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute location]];
							relative = false;
							x = 80;
							y = -700;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 5;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute location]];
							relative = false;
							x = 60;
							y = -800;
						};
						[5] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 10;
							range = 0;
						};
						[6] = {
							type = [[set zoom level]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 3;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5815;
					page = 2;
				};
				[10] = {
					type = [[is auxiliary]];
					subject = 5;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5817;
							page = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[11] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 12;
							range = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 2;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute location]];
							relative = false;
							x = 6000;
							y = -2000;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 3;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute location]];
							relative = false;
							x = 5950;
							y = -1950;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 4;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute location]];
							relative = false;
							x = 5900;
							y = -1900;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 5;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute location]];
							relative = false;
							x = 5850;
							y = -1850;
						};
						[5] = {
							type = [[set zoom level]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 7;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5817;
					page = 2;
				};
				[12] = {
					type = [[is auxiliary]];
					subject = 2;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5819;
							page = 4;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[13] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 2;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute location]];
							relative = false;
							x = 500;
							y = -6000;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 3;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute location]];
							relative = false;
							x = 500;
							y = -6100;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 4;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute location]];
							relative = false;
							x = 500;
							y = -6200;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 5;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute location]];
							relative = false;
							x = 500;
							y = -6300;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5819;
					page = 2;
				};
				[14] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[set zoom level]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 15;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5819;
					page = 4;
				};
				[15] = {
					type = [[is auxiliary]];
					subject = 5;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5823;
							page = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[16] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 17;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5823;
					page = 2;
				};
				[17] = {
					type = [[is auxiliary]];
					subject = 6;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5825;
							page = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[18] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 19;
							range = 0;
						};
						[1] = {
							type = [[disable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 318832640;
						};
						[2] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335609856;
						};
						[3] = {
							type = [[set zoom level]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5825;
					page = 2;
				};
				[19] = {
					type = [[is target]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5827;
							page = 4;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[20] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 21;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5827;
					page = 4;
				};
				[21] = {
					type = [[is target]];
					subject = 6;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5831;
							page = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[22] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 7;
							range = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 23;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5831;
					page = 2;
				};
				[23] = {
					type = [[is target]];
					subject = 7;
					direct = 1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5833;
							page = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[24] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 25;
							range = 0;
						};
						[1] = {
							type = [[disable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 318832640;
						};
						[2] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335609856;
						};
					};
					flags = {
						trueOnlyOnce = false;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5833;
					page = 2;
				};
				[25] = {
					type = [[is target]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5835;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[26] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 27;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = false;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5835;
					page = 1;
				};
				[27] = {
					type = [[is target]];
					subject = 6;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5836;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[28] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 29;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = false;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5836;
					page = 1;
				};
				[29] = {
					type = [[is target]];
					subject = 7;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5837;
							page = 3;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[30] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335544320;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 31;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5837;
					page = 3;
				};
				[31] = {
					type = [[is target]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5840;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[32] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 33;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5840;
					page = 1;
				};
				[33] = {
					type = [[autopilot]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5841;
							page = 1;
						};
						[1] = {
							type = [[set zoom level]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 1;
							directOverride = 5;
							owner = 0;
							delay = 0;
							value = 6;
						};
						[2] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 34;
							range = 0;
						};
						[3] = {
							type = [[disable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 318767104;
						};
						[4] = {
							type = [[set destination]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 1;
							directOverride = 5;
							owner = 0;
							delay = 120;
						};
						[5] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 34;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[34] = {
					type = [[proximity]];
					subject = 1;
					direct = 5;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5842;
							page = 1;
						};
						[1] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335544320;
						};
						[2] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 36;
							range = 0;
						};
						[3] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 35;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[35] = {
					type = [[proximity]];
					subject = -2;
					direct = 6;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 4;
							text = [[Good work. You completed the second tutorial.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[36] = {
					type = [[not autopilot]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[disable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 318767104;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = false;
							minimum = 0.000000;
							range = 0.000000;
						};
						[2] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5843;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
			};
			briefing = {
			};
			starmap = {
				x = 330.000000;
				y = 287.000000;
			};
			par = {
				time = -1;
				kills = -1;
				ratio = -1.000000;
				float = -1;
			};
			angle = 5;
			startTime = 0;
			isTraining = true;
			prologue = [[]];
			epilogue = [[]];
			songId = 4002;
			movie = nil;
		};
		[3] = {
			name = [[\i Chapter 2 \iThe Stars Have Ears]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 0.003906;
					netRaceFlags = 0;
				};
				[2] = {
					type = [[cpu]];
					race = 300;
					name = [[The Gaitori Union]];
					earningPower = 0.000000;
					netRaceFlags = 0;
				};
			};
			scoreString = {
				[0] = [[-Destroy all 4]];
				[1] = [[_-relay dishes.]];
				[2] = [[4\0\0\4\f\t\Remaining: \/4]];
			};
			initialObjects = {
				[0] = {
					type = 36;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 7043;
						y = 4521;
					};
					earning = 1.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Relay Dish 1]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 61;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 7652;
						y = 8695;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 37;
					owner = 1;
					initialDestination = 0;
					position = {
						x = 6434;
						y = 4695;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[3] = {
					type = 37;
					owner = 1;
					initialDestination = 16;
					position = {
						x = 2608;
						y = 2086;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[4] = {
					type = 37;
					owner = 1;
					initialDestination = 16;
					position = {
						x = 3739;
						y = 2434;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[5] = {
					type = 64;
					owner = 1;
					initialDestination = 17;
					position = {
						x = -347;
						y = -1913;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[6] = {
					type = 37;
					owner = 1;
					initialDestination = 17;
					position = {
						x = -1130;
						y = -2347;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[7] = {
					type = 37;
					owner = 1;
					initialDestination = 17;
					position = {
						x = -347;
						y = -2782;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[8] = {
					type = 64;
					owner = 1;
					initialDestination = 18;
					position = {
						x = -1043;
						y = -5043;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[9] = {
					type = 37;
					owner = 1;
					initialDestination = 18;
					position = {
						x = -2695;
						y = -4173;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[10] = {
					type = 37;
					owner = 1;
					initialDestination = 18;
					position = {
						x = -1826;
						y = -4434;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[11] = {
					type = 37;
					owner = 1;
					initialDestination = 18;
					position = {
						x = -1913;
						y = -4956;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[12] = {
					type = 42;
					owner = 0;
					initialDestination = 1;
					position = {
						x = -8695;
						y = 6782;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[13] = {
					type = 42;
					owner = 0;
					initialDestination = 1;
					position = {
						x = -6695;
						y = 8347;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[14] = {
					type = 104;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -1652;
						y = -4173;
					};
					earning = 1.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = 1200;
					builds = {
					};
					nameOverride = [[Myrmidon Station]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[15] = {
					type = 27;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Myrmidon]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[16] = {
					type = 36;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 3217;
						y = 2000;
					};
					earning = 1.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Relay Dish 2]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[17] = {
					type = 36;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 2000;
						y = -1130;
					};
					earning = 1.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Relay Dish 3]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[18] = {
					type = 36;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 1043;
						y = -4347;
					};
					earning = 1.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Relay Dish 4]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[counter]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 5;
							text = [[Mission completed. You destroyed all four of the sensor relay dishes.]];
						};
					};
					flags = {
						trueOnlyOnce = false;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 4;
						id = 0;
						player = 0;
					};
				};
				[1] = {
					type = [[destruction]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[You lost your heavy cruiser, failing to destroy all four relay dishes.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[2] = {
					type = [[destruction]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 12;
							range = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 13;
							range = 0;
						};
						[2] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 120;
							id = 4210;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 17;
				};
			};
			briefing = {
				[0] = {
					title = [[Myrmidon]];
					kind = [[object]];
					objectId = 15;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The Gaitori in this system have deployed a series of long-range scanner relay dishes, designed to gather information on our ship movements.You are to put an end to this intrusion by destroying all four relay stations.]];
				};
				[1] = {
					title = [[Cruiser]];
					kind = [[object]];
					objectId = 1;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1062^You'll be dropped in here. Your only ship for this mission is this heavy cruiser. It's speedier than the standard cruiser, and has an improved rapid-fire fusion pulse gun. Save your guided missiles for difficult targets. If you lose the cruiser, the mission will be aborted.]];
				};
				[2] = {
					title = [[Relay Dish 1]];
					kind = [[object]];
					objectId = 0;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10015^This the the first of the four Relay Stations you should destroy. The stations are unarmed, and are only protected by deflector shields.]];
				};
				[3] = {
					title = [[Cruiser]];
					kind = [[object]];
					objectId = 2;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1038^There are Gaitori cruisers stationed at each dish. Their cruisers are slow, but are armed with rapid-fire concussive pellet guns. ]];
				};
				[4] = {
					title = [[Relay Dish 2]];
					kind = [[object]];
					objectId = 16;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[This is dish is your second target.]];
				};
				[5] = {
					title = [[Relay Dish 3]];
					kind = [[object]];
					objectId = 17;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The third dish is your next target.^P1065^This dish is being guarded by a gunship. Gaitori gunships are not heavily armored, but they have converted atomic pulse mining guns, which fire powerful long-range homing pulses.]];
				};
				[6] = {
					title = [[Relay Dish 4]];
					kind = [[object]];
					objectId = 18;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[This is the last Relay Station you should destroy. With a gunship and two cruisers nearby, it's the most heavily guarded.]];
				};
				[7] = {
					title = [[Myrmidon Station]];
					kind = [[object]];
					objectId = 14;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10001^The Gaitori habitat station in the Myrmidon System is heavily armed. We recommend that you keep a safe distance from this station.]];
				};
				[8] = {
					title = [[Obish Escorts]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1043^A pair of Obish escorts is in the region. They've expressed an interest in aiding us in destroying the Relay Stations, but have indicated that they would like to observe your progress first. They may choose to join you during the mission. The Obish Escorts have Salrilian stealth fields and Ishiman core pulse guns.]];
				};
			};
			starmap = {
				x = 393.000000;
				y = 282.000000;
			};
			par = {
				time = 120;
				kills = 10;
				ratio = 0.000000;
				float = 0;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[]];
			epilogue = [[]];
			songId = 5001;
			movie = nil;
		};
		[4] = {
			name = [[\i Tutorial Lesson 3\iThe Complete Idiot’s Guide to Commanding a Space Armada]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 0.007812;
					netRaceFlags = 0;
				};
				[2] = {
					type = [[cpu]];
					race = 200;
					name = [[The Cantharan Order]];
					earningPower = 0.007812;
					netRaceFlags = 0;
				};
			};
			scoreString = {
				[0] = [[-Destroy all 5]];
				[1] = [[_-transports.]];
				[2] = [[4\0\0\5\f\t\Remaining: \/5]];
			};
			initialObjects = {
				[0] = {
					type = 0;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -200;
						y = -200;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
						[0] = 267;
						[1] = 450;
						[2] = 500;
					};
					nameOverride = [[Simulated Planet]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 61;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 6000;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 24;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 200;
						y = 200;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 24;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 400;
						y = 400;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 13;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 200;
						y = 250;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 13;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 250;
						y = 200;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 25;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 6000;
						y = -3000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[8] = {
					type = 25;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 6100;
						y = -3000;
					};
					earning = 0.000000;
					distanceRange = 1000;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[9] = {
					type = 25;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 6000;
						y = -3100;
					};
					earning = 0.000000;
					distanceRange = 1000;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[10] = {
					type = 25;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 6200;
						y = -3000;
					};
					earning = 0.000000;
					distanceRange = 1000;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[11] = {
					type = 25;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 5900;
						y = -3000;
					};
					earning = 0.000000;
					distanceRange = 1000;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[12] = {
					type = 25;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 5950;
						y = -3200;
					};
					earning = 0.000000;
					distanceRange = 1000;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[13] = {
					type = 25;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 6300;
						y = -3000;
					};
					earning = 0.000000;
					distanceRange = 1000;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[14] = {
					type = 25;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 6410;
						y = -3400;
					};
					earning = 0.000000;
					distanceRange = 1000;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[15] = {
					type = 25;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 6000;
						y = -3000;
					};
					earning = 0.000000;
					distanceRange = 1000;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[16] = {
					type = 25;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 6000;
						y = -3000;
					};
					earning = 0.000000;
					distanceRange = 1000;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = false;
							minimum = 0.000000;
							range = 0.000000;
						};
						[1] = {
							type = [[disable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 318767104;
						};
						[2] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 2;
						};
						[3] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute cash]];
							useObjectsOwner = false;
							value = 640000;
							player = 0;
						};
						[4] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5900;
							page = 2;
						};
						[5] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 1;
							directOverride = -1;
							owner = 0;
							delay = 160;
							alterType = [[owner]];
							useObjectsOwner = false;
							value = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
				[1] = {
					type = [[current message]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 2;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5900;
					page = 2;
				};
				[2] = {
					type = [[is auxiliary]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5905;
							page = 3;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[3] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 4;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5905;
					page = 3;
				};
				[4] = {
					type = [[current computer selection]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5910;
							page = 10;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					screen = 2;
					line = -1;
				};
				[5] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute cash]];
							useObjectsOwner = false;
							value = 6000000;
							player = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5910;
					page = 5;
				};
				[6] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							alterType = [[absolute cash]];
							useObjectsOwner = false;
							value = -6000000;
							player = 0;
						};
						[1] = {
							type = [[computer select]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							screen = 2;
							line = 3;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5910;
					page = 6;
				};
				[7] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[computer select]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							screen = 2;
							line = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5910;
					page = 8;
				};
				[8] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335544320;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 9;
							range = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5910;
					page = 10;
				};
				[9] = {
					type = [[object being built]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5925;
							page = 1;
						};
						[1] = {
							type = [[disable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 318767104;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[10] = {
					type = [[counter greater]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5930;
							page = 2;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 11;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 1;
						id = 0;
						player = 0;
					};
				};
				[11] = {
					type = [[is auxiliary]];
					subject = 5;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5935;
							page = 3;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[12] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 7;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 13;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5935;
					page = 3;
				};
				[13] = {
					type = [[is target]];
					subject = 2;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5940;
							page = 1;
						};
						[1] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 2;
						};
						[2] = {
							type = [[computer select]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							screen = 2;
							line = 3;
						};
						[3] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 14;
							range = 0;
						};
						[4] = {
							type = [[disable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 318767104;
						};
						[5] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335544320;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[14] = {
					type = [[counter]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5945;
							page = 3;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 2;
						id = 0;
						player = 0;
					};
				};
				[15] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 7;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5945;
					page = 2;
				};
				[16] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 17;
							range = 0;
						};
						[1] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335544320;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5945;
					page = 3;
				};
				[17] = {
					type = [[is auxiliary]];
					subject = 2;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5950;
							page = 1;
						};
						[1] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 2;
						};
						[2] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 18;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[18] = {
					type = [[is target]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5955;
							page = 3;
						};
						[1] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 7;
						};
						[2] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 19;
							range = 0;
						};
						[3] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335544320;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[19] = {
					type = [[proximity]];
					subject = 1;
					direct = 2;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5960;
							page = 2;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 20;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[20] = {
					type = [[is auxiliary]];
					subject = 6;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5965;
							page = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 21;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[21] = {
					type = [[direct is subject target]];
					subject = 6;
					direct = 1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5970;
							page = 4;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[22] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = false;
							value = 1;
						};
						[1] = {
							type = [[set zoom level]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 4;
						};
						[2] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute cash]];
							useObjectsOwner = false;
							value = -3276800;
							player = 1;
						};
						[3] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 3;
							range = 0;
						};
						[4] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 23;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5970;
					page = 3;
				};
				[23] = {
					type = [[owner]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 280;
							id = 5975;
							page = 2;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 4;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
				[24] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 25;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5975;
					page = 2;
				};
				[25] = {
					type = [[is auxiliary]];
					subject = 6;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5980;
							page = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 26;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[26] = {
					type = [[is target]];
					subject = 4;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5985;
							page = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 27;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[27] = {
					type = [[direct is subject target]];
					subject = 6;
					direct = 4;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5990;
							page = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 28;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[28] = {
					type = [[direct is subject target]];
					subject = 5;
					direct = 4;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5995;
							page = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 29;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[29] = {
					type = [[direct is subject target]];
					subject = 2;
					direct = 4;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 7000;
							page = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[30] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[disable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 318767104;
						};
						[1] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 1;
						};
						[2] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 31;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 7000;
					page = 2;
				};
				[31] = {
					type = [[is target]];
					subject = 0;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 7005;
							page = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 32;
							range = 0;
						};
						[2] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335544320;
						};
						[3] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 7;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[32] = {
					type = [[direct is subject target]];
					subject = 2;
					direct = 0;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 33;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[33] = {
					type = [[direct is subject target]];
					subject = 5;
					direct = 0;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 34;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[34] = {
					type = [[direct is subject target]];
					subject = 6;
					direct = 0;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 7010;
							page = 3;
						};
						[1] = {
							type = [[computer select]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							screen = 1;
							line = 4;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[35] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 36;
							range = 0;
						};
						[1] = {
							type = [[computer select]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							screen = 1;
							line = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 7010;
					page = 3;
				};
				[36] = {
					type = [[current computer selection]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 7015;
							page = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					screen = 3;
					line = -1;
				};
				[37] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 38;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 7015;
					page = 2;
				};
				[38] = {
					type = [[is auxiliary]];
					subject = 2;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 7020;
							page = 1;
						};
						[1] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335544320;
						};
						[2] = {
							type = [[computer select]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							screen = 3;
							line = 1;
						};
						[3] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 39;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[39] = {
					type = [[subject is player]];
					subject = 2;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 7025;
							page = 5;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[40] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 7;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 5970;
					page = 4;
				};
				[41] = {
					type = [[current message]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 7;
							range = 9;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 360;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 42;
							range = 0;
						};
						[2] = {
							type = [[enable keys]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 0;
							owner = 0;
							delay = 0;
							keyMask = 335544320;
						};
						[3] = {
							type = [[set zoom level]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							value = 5;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					id = 7025;
					page = 5;
				};
				[42] = {
					type = [[no ships left]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 6;
							text = [[Good work. You completed the third tutorial.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					player = 1;
				};
				[43] = {
					type = [[none]];
					subject = 0;
					direct = 0;
					actions = {
					};
					flags = {
						trueOnlyOnce = false;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
				};
			};
			briefing = {
			};
			starmap = {
				x = 330.000000;
				y = 287.000000;
			};
			par = {
				time = -1;
				kills = -1;
				ratio = -1.000000;
				float = -1;
			};
			angle = 5;
			startTime = 0;
			isTraining = true;
			prologue = [[]];
			epilogue = [[]];
			songId = 4002;
			movie = nil;
		};
		[5] = {
			name = [[\i Chapter 3 \iWhile The Iron Is Hot]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 172;
				};
				[2] = {
					type = [[cpu]];
					race = 300;
					name = [[The Gaitori Union]];
					earningPower = 0.847656;
					netRaceFlags = 0;
				};
			};
			scoreString = {
				[0] = [[-Capture Demeter]];
				[1] = [[_-Beta]];
			};
			initialObjects = {
				[0] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 260;
						y = 4695;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1009;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 800;
					};
					nameOverride = [[Demeter Alpha]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 0;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 782;
						y = 4782;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 27;
					owner = -1;
					initialDestination = -1;
					position = {
						x = -3478;
						y = 86;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Demeter]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 37;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -1251;
						y = -8336;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 87;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 260;
						y = -8695;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 23;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -347;
						y = -7477;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1010;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 300;
						[3] = 800;
					};
					nameOverride = [[Demeter Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[owner]];
					subject = 0;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[The Gaitori have taken our base on Demeter Alpha. The system is now controlled by them.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[1] = {
					type = [[owner]];
					subject = 5;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 7;
							text = [[You took the Gaitori base on Demeter Beta. The mission was a success.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
				[2] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5310;
							page = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 400;
							alterType = [[hidden]];
							minimum = 4;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 3600;
				};
			};
			briefing = {
				[0] = {
					title = [[Demeter]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[Our success in the Myrmidon System has caught the Gaitori by surprise. The last thing they expected was an offensive initiated by the Ishiman Stellar Navy. Your instinctual aggressiveness served you well.Your goal in the Demeter System is to capitalize on the Gaitori's disarray by seizing one of their planet-based outposts threatening our space. This is an opportunity for you to demonstrate the ability to coordinate a space-to-surface assault.]];
				};
				[1] = {
					title = [[Cruiser]];
					kind = [[object]];
					objectId = 1;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1001^You'll initially be using this standard cruiser. By utilizing our base on Alpha, you'll be able to manufacture as many of these cruisers as you can afford.]];
				};
				[2] = {
					title = [[Demeter Alpha]];
					kind = [[object]];
					objectId = 0;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[You must protect our base on Demeter Alpha from enemy transports. If a Gaitori transport lands on Alpha, the mission will be aborted.The base on Alpha can produce two types of ships in addition to cruisers. ^P1014^Fighters are fast, but can only travel at sublight speeds. Their only weapons are photokinetic beam cannons.]];
				};
				[3] = {
					title = [[Demeter Alpha]];
					kind = [[object]];
					objectId = 0;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1025^The transport is the only ship capable of space-to-surface assault. They are limited to sublight travel and are unarmed.For this mission you'll need to give a transport orders to go to Demeter Beta. It will attempt to land once it arrives.]];
				};
				[4] = {
					title = [[Demeter Beta]];
					kind = [[object]];
					objectId = 5;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[This planet is your objective. Land a transport here to complete the mission.The base here can produce four types of ships.]];
				};
				[5] = {
					title = [[Demeter Beta]];
					kind = [[object]];
					objectId = 5;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1039^Gaitori fighters are slow, and poorly armored.^P1038^You've already encountered several of their cruisers.]];
				};
				[6] = {
					title = [[Demeter Beta]];
					kind = [[object]];
					objectId = 5;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1087^Destroy any of their transports you find making its way towards our base on Alpha. If our base is lost, the mission will be aborted.The Gaitori base can also construct gunships.^P1065^Good luck.]];
				};
			};
			starmap = {
				x = 354.000000;
				y = 271.000000;
			};
			par = {
				time = 180;
				kills = 16;
				ratio = 0.000000;
				float = 4;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[]];
			epilogue = [[]];
			songId = 5002;
			movie = nil;
		};
		[6] = {
			name = [[\i Chapter 4 \iShoplifter 1]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 0;
				};
				[2] = {
					type = [[cpu]];
					race = 300;
					name = [[The Gaitori Union]];
					earningPower = 1.500000;
					netRaceFlags = 202;
				};
			};
			scoreString = {
				[0] = [[-Rescue 11]];
				[1] = [[_-Obiards]];
				[2] = [[2\0\0\0\f\t\In transport: \/5]];
				[3] = [[2\1\0\0\f\t\Rescued: \/11]];
			};
			initialObjects = {
				[0] = {
					type = 225;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[ISN 2020187]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 217;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 695;
						y = 956;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 216;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -5130;
						y = -6086;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Cell 1]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 216;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 4086;
						y = -7130;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Cell 2]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 216;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -1042;
						y = -11652;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Cell 3]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 61;
					owner = 0;
					initialDestination = 0;
					position = {
						x = -608;
						y = 956;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 42;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 260;
						y = 1826;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[7] = {
					type = 218;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 520;
						y = -18956;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[8] = {
					type = 37;
					owner = 1;
					initialDestination = 2;
					position = {
						x = -4175;
						y = -6610;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[9] = {
					type = 37;
					owner = 1;
					initialDestination = 3;
					position = {
						x = 3129;
						y = -7566;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[10] = {
					type = 37;
					owner = 1;
					initialDestination = 3;
					position = {
						x = 3998;
						y = -7566;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[11] = {
					type = 37;
					owner = 1;
					initialDestination = 4;
					position = {
						x = -436;
						y = -10696;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[12] = {
					type = 37;
					owner = 1;
					initialDestination = 4;
					position = {
						x = -262;
						y = -11653;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[13] = {
					type = 64;
					owner = 1;
					initialDestination = 4;
					position = {
						x = -697;
						y = -9653;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[14] = {
					type = 37;
					owner = 1;
					initialDestination = 2;
					position = {
						x = -4175;
						y = -6610;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[15] = {
					type = 38;
					owner = 1;
					initialDestination = 2;
					position = {
						x = -3826;
						y = -7043;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[16] = {
					type = 38;
					owner = 1;
					initialDestination = 9;
					position = {
						x = 4347;
						y = -5652;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[counter]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = true;
							id = 88;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 5;
						id = 0;
						player = 0;
					};
				};
				[1] = {
					type = [[proximity]];
					subject = 1;
					direct = 0;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 2;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = false;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[2] = {
					type = [[counter greater]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 214;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[change score]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 0;
							amount = -1;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 0;
							range = 0;
						};
						[3] = {
							type = [[activate special]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 6;
							directOverride = -1;
							owner = 0;
							delay = 0;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = true;
							id = 217;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 1;
						id = 0;
						player = 0;
					};
				};
				[3] = {
					type = [[distance greater]];
					subject = 1;
					direct = 0;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 2;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = false;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 50000;
				};
				[4] = {
					type = [[counter]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 8;
							text = [[You rescued more than two thirds of the Obish hostages. Ambassador Thrntz extends his gratitude.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 11;
						id = 1;
						player = 0;
					};
				};
				[5] = {
					type = [[counter]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[Too many of the Obiards were killed in your rescue attempt for this mission to be considered successful.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 5;
						id = 2;
						player = 0;
					};
				};
			};
			briefing = {
				[0] = {
					title = [[Elysium System]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[A civilian Obish vessel was seized by a rogue band of Gaitori mercenaries, loyalists to the Order. The mercenaries are holding the surviving Obiards captive in a group of deep space cells. Your mission in the Elysium System is to help the Obish rescue the hostages.]];
				};
				[1] = {
					title = [[Elysium System]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10033^This mission has special significance. We have confirmed that one of the Obiards being held is Ambassador Thrntz, a key negotiator in the Obain/Gaitor Nonaggression Pact. His safe return would win you considerable favor with the Obiards.]];
				};
				[2] = {
					title = [[Heavy Cruiser]];
					kind = [[object]];
					objectId = 5;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[You will be conducting this mission from a heavy cruiser. There is little margin for error in this enterprise; conservation of your heavy cruiser’s resources will be vital for success.]];
				};
				[3] = {
					title = [[Transport]];
					kind = [[object]];
					objectId = 1;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[To pick up the prisoners, you'll be escorting this sublight Obish transport. It is armed with minimal defensive lasers capable of breaking the deep space cells open. Once a cell is breached, the prisoners will escape and attempt to enter the transport.The Obish prisoners will be vulnerable to your weapons fire, since your targeting systems will not be keyed to their suits. Be careful not to catch them in crossfire. They will also be disoriented, so give them plenty of time to enter the transport.]];
				};
				[4] = {
					title = [[Cell 1]];
					kind = [[object]];
					objectId = 3;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[There are three deep space cells, each holding five Obiards. Command the transport to each cell in turn, then allow it to break open the cell and pick up the prisoners. The cells will be guarded, and your transport will need protection.]];
				};
				[5] = {
					title = [[Passenger Liner]];
					kind = [[object]];
					objectId = 0;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The transport can carry all five Obiards contained in a deep space cell. When the transport has picked up the prisoners at a cell, command it to return to this waiting Obish passenger liner. The Obiards will exit the transport and enter the liner.]];
				};
				[6] = {
					title = [[Elysium System]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[In addition to the ships guarding the cells, there are several squadrons of Gaitori fighters and cruisers on maneuvers in the vicinity. You should monitor the transport's position closely, as enemy cruisers could appear and quickly overtake the transport at any time. Don’t stray too far from the transport’s side.]];
				};
				[7] = {
					title = [[Escort]];
					kind = [[object]];
					objectId = 6;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[An Obish cruiser will escort the transport. It is under the command of the Obiards, so it will not be available for you to control.]];
				};
				[8] = {
					title = [[Elysium System]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[For the mission to be considered successful, you must rescue at least eleven of the fifteen total hostages. Good luck.]];
				};
			};
			starmap = {
				x = 460.000000;
				y = 259.000000;
			};
			par = {
				time = 720;
				kills = 25;
				ratio = 0.000000;
				float = 0;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[]];
			epilogue = [[]];
			songId = 5003;
			movie = nil;
		};
		[7] = {
			name = [[\i Chapter 5 \iOut of the Frying Pan...]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 172;
				};
				[2] = {
					type = [[cpu]];
					race = 300;
					name = [[The Gaitori Union]];
					earningPower = 1.500000;
					netRaceFlags = 202;
				};
			};
			scoreString = {
				[0] = [[-Capture Aeneas]];
				[1] = [[_-Beta]];
			};
			initialObjects = {
				[0] = {
					type = 0;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 1130;
						y = 1304;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1011;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 800;
						[3] = 850;
					};
					nameOverride = [[Aeneas Alpha]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 95;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 1913;
						y = 521;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 94;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -11391;
						y = -9304;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 95;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 1652;
						y = 2173;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 243;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -9664;
						y = -8245;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 93;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -4004;
						y = -3990;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 93;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -9184;
						y = -9367;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[8] = {
					type = 23;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -9130;
						y = -9304;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1012;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 800;
						[3] = 850;
					};
					nameOverride = [[Aeneas Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[owner]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[Our base on Aeneas Alpha was captured by the Gaitori.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[1] = {
					type = [[owner]];
					subject = 8;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 9;
							text = [[You captured Aeneas Beta.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
			};
			briefing = {
				[0] = {
					title = [[Aeneas System]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[The Gaitori defeat in the Demeter system effectively ended their potency near Ishiman space; now we must take the battle to them.We traced the jumpstream from Elysium to here, the Aeneas system. We believe it's the primary base of operations for the Cantharan-loyal military.Your mission is to occupy their base, and to rout them from the system.]];
				};
				[1] = {
					title = [[Cruiser]];
					kind = [[object]];
					objectId = 0;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1001^You'll start in a single standard cruiser, but you'll be able to build more.]];
				};
				[2] = {
					title = [[Aeneas Beta]];
					kind = [[object]];
					objectId = 8;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The Gaitori have a planet base on Aeneas Beta, one of the two planets in the system. Their planet is defended by a flak drone.^P1094^Flak drones are indestructible. In addition to having guided rockets, they can fire deadly flak over a wide area. The only way to gain control of a flak drone is with an engineering pod.]];
				};
				[3] = {
					title = [[Aeneas Alpha]];
					kind = [[object]];
					objectId = 1;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[You'll be coordinating the assault from our base on Aeneas Alpha.]];
				};
				[4] = {
					title = [[Aeneas Alpha]];
					kind = [[object]];
					objectId = 1;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1096^In addition to fighters, cruisers, and transports, our base can produce engineering pods. Send these robot ships to flak drones to gain control of them. Once an engineering pod reaches a flak drone, the drone will be configured to fire on enemy ships.The engineering pods are equipped with defensive lasers, capable of protecting them briefly from missiles and enemy ships. The pods are invisible to the flak drones' sensors, but they are still susceptible to weapons fire.]];
				};
				[5] = {
					title = [[Aeneas Beta]];
					kind = [[object]];
					objectId = 8;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The Gaitori base on Beta is your objective. Land a transport here to complete the mission.^P1095^The Gaitori can also make fighters, cruisers, transports and engineering pods. Their engineering pods also have defensive lasers.]];
				};
				[6] = {
					title = [[Flak Drone]];
					kind = [[object]];
					objectId = 6;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1094^There's a flak drone positioned directly between the two planets of Aeneas. You may want to send an engineering pod to this drone first in order to prevent it from firing on any of your transports on their way to Beta.]];
				};
				[7] = {
					title = [[Heavy Destroyer]];
					kind = [[object]];
					objectId = 5;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1244^There's a Gaitori heavy destroyer currently over Beta. Compared to our cruisers, it is an extremely dangerous ship.]];
				};
			};
			starmap = {
				x = 366.000000;
				y = 250.000000;
			};
			par = {
				time = 420;
				kills = 15;
				ratio = 0.000000;
				float = 15;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[]];
			epilogue = [[]];
			songId = 5004;
			movie = nil;
		};
		[8] = {
			name = [[\i Chapter 6 \i...Into the Fire]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 172;
				};
				[2] = {
					type = [[cpu]];
					race = 300;
					name = [[The Gaitori Union]];
					earningPower = 1.250000;
					netRaceFlags = 176;
				};
			};
			scoreString = {
				[0] = [[-Capture Hades]];
				[1] = [[_-Beta]];
			};
			initialObjects = {
				[0] = {
					type = 114;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 3739;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Power Station O-2]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 114;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 3826;
						y = 2434;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Power Station O-3]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 114;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -5043;
						y = 2173;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Power Station O-1]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 114;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -4434;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Power Station G-2]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 114;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 5739;
						y = -4869;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Power Station G-3]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 114;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -6521;
						y = -7739;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Power Station G-1]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 93;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 4032;
						y = 2477;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 93;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -196;
						y = 3956;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[8] = {
					type = 93;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -5272;
						y = 2130;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[9] = {
					type = 93;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -6369;
						y = -7368;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[10] = {
					type = 93;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 141;
						y = -4282;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[11] = {
					type = 93;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 5532;
						y = -4716;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[12] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 9478;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1013;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 800;
						[3] = 850;
					};
					nameOverride = [[Hades Alpha]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[13] = {
					type = 111;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 1652;
						y = -9130;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1014;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 300;
						[3] = 800;
						[4] = 850;
					};
					nameOverride = [[Hades Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[14] = {
					type = 0;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 956;
						y = 8782;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[15] = {
					type = 64;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -86;
						y = -9130;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[owner]];
					subject = 12;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[A Gaitori transport landed on Hades Alpha.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[1] = {
					type = [[owner]];
					subject = 13;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 10;
							text = [[You captured the Gaitori base on Hades Beta.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
			};
			briefing = {
				[0] = {
					title = [[Hades System]];
					kind = [[no point]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[The Gaitori military has one remaining foothold near our space:  a joint power station cluster, established as a gesture of cooperation between the Obish and Gaitori governments after the war.The Cantharan-loyalist Gaitori intend to destroy Obain's half of the Hades System's power stations. Your mission is to occupy their base, destroying as many Gaitori power stations as possible, and saving as many of the Obish stations as you can.]];
				};
				[1] = {
					title = [[Hades Alpha]];
					kind = [[object]];
					objectId = 12;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The Obish base, currently occupied by our forces, is on Alpha. It can produce fighters, cruisers, transports, and engineering pods -- the Hades system is littered with flak drones.]];
				};
				[2] = {
					title = [[Power Station O-1]];
					kind = [[object]];
					objectId = 2;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1115^This is the first of the three Obish power stations. Each station is guarded by a flak drone.Note that the power stations produce tremendous resources -- keeping the power stations from being destroyed will allow you to produce more ships.]];
				};
				[3] = {
					title = [[Power Station O-2]];
					kind = [[object]];
					objectId = 0;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1115^This is the second of the three Obish power stations.]];
				};
				[4] = {
					title = [[Power Station O-3]];
					kind = [[object]];
					objectId = 1;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1115^The is the last of the three Obish power stations.]];
				};
				[5] = {
					title = [[Hades Beta]];
					kind = [[object]];
					objectId = 13;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The Gaitori base is on Hades Beta. They can produce fighters, cruisers, transports, engineering pods, as well as gunships. Land a transport here to complete the mission.]];
				};
				[6] = {
					title = [[Power Station G-1]];
					kind = [[object]];
					objectId = 5;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1115^This is the first of the three Gaitori controlled power stations. Although you can complete the mission objectives without destroying the Gaitori stations, keep in mind that the more stations they have intact, the more ships they can manufacture.]];
				};
				[7] = {
					title = [[Power Station G-2]];
					kind = [[object]];
					objectId = 3;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1115^This is the second of the three Gaitori power stations. Each of the stations is guarded by a flak drone.]];
				};
				[8] = {
					title = [[Power Station G-3]];
					kind = [[object]];
					objectId = 4;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1115^The is the last of the three Gaitori power stations.]];
				};
			};
			starmap = {
				x = 431.000000;
				y = 237.000000;
			};
			par = {
				time = 450;
				kills = 45;
				ratio = 0.000000;
				float = 12;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[]];
			epilogue = [[]];
			songId = 5000;
			movie = nil;
		};
		[9] = {
			name = [[\i Chapter 7 \iOn the Rocks]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 0.000000;
					netRaceFlags = -18392;
				};
				[2] = {
					type = [[cpu]];
					race = 200;
					name = [[The Cantharan Order]];
					earningPower = 0.000000;
					netRaceFlags = 0;
				};
			};
			scoreString = {
				[0] = [[-Collect 4]];
				[1] = [[_-asteroid samples]];
				[2] = [[2\1\0\0\f\t\Collected: \/4]];
			};
			initialObjects = {
				[0] = {
					type = 62;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -22129;
						y = -17913;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 80;
					owner = 0;
					initialDestination = 5;
					position = {
						x = -2696;
						y = 4347;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 83;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -8000;
						y = -8800;
					};
					earning = 1.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Asteroid IR7-7e]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -4000;
						y = 3000;
					};
					earning = 1.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = 1001;
					builds = {
					};
					nameOverride = [[Philemon Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 27;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 200;
						y = -200;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Philemon]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 61;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -3678;
						y = 3497;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 59;
					owner = 1;
					initialDestination = 2;
					position = {
						x = -6978;
						y = -8804;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[7] = {
					type = 17;
					owner = 1;
					initialDestination = 1;
					position = {
						x = -11760;
						y = -17673;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[8] = {
					type = 59;
					owner = 1;
					initialDestination = 7;
					position = {
						x = -10543;
						y = -17325;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[9] = {
					type = 59;
					owner = 1;
					initialDestination = 7;
					position = {
						x = -11673;
						y = -16021;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 4220;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 180;
				};
				[1] = {
					type = [[counter]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 120;
							id = 4221;
							page = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 7;
							range = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 1;
						id = 1;
						player = 0;
					};
				};
				[2] = {
					type = [[counter]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 11;
							text = [[You captured enough samples of the artificial asteroid for a thorough analysis.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 4;
						id = 1;
						player = 0;
					};
				};
				[3] = {
					type = [[counter]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[DEBUG Chapter 8, computer wins.Computer got enough asteroid fragments that player could never win (this should never happen).]];
						};
					};
					flags = {
						trueOnlyOnce = false;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 7;
						id = 1;
						player = 1;
					};
				};
			};
			briefing = {
				[0] = {
					title = [[Asteroid IR7-7e]];
					kind = [[object]];
					objectId = 2;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The miners in this system alerted us when they detected a Cantharan ship pursuing a rogue asteroid.^P10034^Our preliminary analysis suggests that the asteroid has been artificially manufactured.]];
				};
				[1] = {
					title = [[Asteroid IR7-7e]];
					kind = [[object]];
					objectId = 2;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10040^Its trajectory indicates that it originated in the Los Ran system, and we believe it may be a remnant of the ancient Boodan War of Cantharis. ]];
				};
				[2] = {
					title = [[Asteroid IR7-7e]];
					kind = [[object]];
					objectId = 2;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The Cantharans' interest in this asteroid is alarmingly peculiar. We intend to destroy it, but we'd like to collect some samples to determine its purpose.^P1185^You must break the asteroid into pieces small enough to be collected. We require a minimum of four samples of its debris.]];
				};
				[3] = {
					title = [[Astrominer]];
					kind = [[object]];
					objectId = 1;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1081^The astrominer has been ordered to follow you. Guide it to the asteroid and the astrominer will attempt to break it apart. The miner’s bulky appearance belies its vulnerability to weapons fire. Protect it from attack: it is not a military vessel.The astrominer is equipped with two short-range non-concussive solitoid cannons, which will gradually weaken the asteroid's structure.]];
				};
				[4] = {
					title = [[Philemon Beta]];
					kind = [[object]];
					objectId = 5;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1062^A single heavy cruiser should be a sufficient escort for the astrominer. If the cruiser is destroyed, you may attempt to complete the mission without it, but the astrominer is almost incapable of defending itself.]];
				};
				[5] = {
					title = [[Schooner]];
					kind = [[object]];
					objectId = 6;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1060^This Cantharan schooner has pursued the artificial asteroid to the Philemon System. The schooner is extremely agile, but is minimally armed.]];
				};
				[6] = {
					title = [[Heavy Cruiser]];
					kind = [[object]];
					objectId = 0;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1063^A heavy cruiser has also been detected near the asteroid. It will probably attempt to intercept you.]];
				};
				[7] = {
					title = [[Philemon]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[If the asteroid has any significance to the Cantharans, you can expect that the Order has already dispatched reinforcements. Be prepared.]];
				};
			};
			starmap = {
				x = 401.000000;
				y = 224.000000;
			};
			par = {
				time = 180;
				kills = 2;
				ratio = 0.000000;
				float = 0;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[#+B2006\i PART 2 \i #+With the Gaitori threat behind you, you turn your eyes to the principle enemy of your race: the Cantharan Order, servants to the Prophets and Crusaders against the Unenlightened.#+10020Centuries ago, the Cantharan Order, then a stable if inflexible defender of interstellar peace, was plunged into chaos by the Boodan Civil War. Although the Order prevailed, it was greatly changed by the conflict. Soon after the Order began its crusades, with its zealous devotion to the twin gods Zom and Doz fueling its thirst for conquest. One among the dozens of “primitive” worlds to fall under Cantharan rule was Earth.#+The Cantharan frontier is a thick swatch the Cantharans cut from the formerly free trading corridor that connected the Bazidanese Star League, the Ishiman Stellar Protectorate, the Elejeetian Empire, the Gaitori Union, and Obain. Once the Order’s crusades began to make trade in this corridor a risky and unprofitable practice, the races withdrew into their separate systems, none of them prepared to challenge the might of the Cantharan military force.#+You now must face that force. With the help of the Ishimans, you prepare to make a quick, decisive strike directly into the frontier. With speed and surprise still on your side, you hope to bisect the frontier and reach into Cantharan space before the Order has time to react.]];
			epilogue = [[#+B2006The Ishimans’ initial analysis of the rogue asteroid was correct: it was artificially created, and originated in the Cantharan system of Los Ran during the Boodan War. Further examination of the samples you retrieved reveals a sinister secret.#+The asteroid was saturated with a biomechanical virus, apparently designed to lie dormant within the asteroid until it collided with a living planet. The artificial virus, millions of tiny mechanisms, would then activate and seek out compatible life which it could infest.#+A relic of the Boodan war, the biomechanisms could have been some kind of weapon, but the method of distribution--on artificial asteroids--would have been too slow for any tactical use. Its purpose is obscure.#+This Boodan Mechanism is beyond any known races’ ability. The ramifications of its discovery this far from Cantharis are staggering. It now seems the Cantharan Crusades have more to do with hunting down and harnessing this virus than they do with obliteration of the “Unenlightened.”]];
			songId = 5001;
			movie = [[:Ares Data ƒ:Part 3]];
		};
		[10] = {
			name = [[\i Chapter 8 \iAstrotrash Plus!]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 0;
				};
				[2] = {
					type = [[cpu]];
					race = 200;
					name = [[The Cantharan Order]];
					earningPower = 1.000000;
					netRaceFlags = 172;
				};
			};
			scoreString = {
				[0] = [[-Collect 10]];
				[1] = [[_-asteroid samples]];
				[2] = [[2\1\0\0\f\t\Collected: \/10]];
			};
			initialObjects = {
				[0] = {
					type = 61;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -22956;
						y = -1391;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 14;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -3565;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 182;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = 32768;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 185;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -32768;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 80;
					owner = 0;
					initialDestination = 0;
					position = {
						x = -24000;
						y = -2259;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 80;
					owner = 0;
					initialDestination = 0;
					position = {
						x = -24000;
						y = -2259;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 80;
					owner = 0;
					initialDestination = 0;
					position = {
						x = -23305;
						y = -2259;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 186;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 32768;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 1;
							range = 2;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 4;
							range = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 4760;
				};
				[1] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 7;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 5500;
				};
				[2] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[velocity]];
							relative = false;
							minimum = 0.000000;
							range = 0.000000;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 3;
				};
				[3] = {
					type = [[counter greater]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 12;
							text = [[Mission completed. You collected enough asteroid samples for a thorough analysis.]];
						};
					};
					flags = {
						trueOnlyOnce = false;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 10;
						id = 1;
						player = 0;
					};
				};
			};
			briefing = {
				[0] = {
					title = [[Palyos Belt]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[We need to determine how prolific the bio-mechanical Boodan Virus has been. Therefore, we're dropping you in the Palyos Belt so you can collect some samples from the asteroids there.]];
				};
				[1] = {
					title = [[Heavy Cruiser]];
					kind = [[object]];
					objectId = 0;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1062^You'll be using this heavy cruiser. Several small Cantharan ships are in the area; they may be investigating the asteroids as well, or they may simply try to prevent us from doing so.]];
				};
				[2] = {
					title = [[Astrominer]];
					kind = [[object]];
					objectId = 4;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1081^Since we'll need at least ten samples, you'll have three astrominers at your command for this mission. While we'd prefer it if all three survived this mission, we will not abort even if all three are destroyed.]];
				};
				[3] = {
					title = [[Asteroid]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1185^Remember, to collect an asteroid sample, it must be first broken down to the smallest possible size. Also remember that we need at least ten samples before we'll pull you out.Finally, watch out for the parasitic zerbilite organisms, which are frequently found in mineral-rich asteroid belts. And make sure you or your astrominers don't collide with one of the green unstable asteroids. A collision with one of those giants is fatal.]];
				};
			};
			starmap = {
				x = 286.000000;
				y = 211.000000;
			};
			par = {
				time = 270;
				kills = 6;
				ratio = 0.000000;
				float = 1;
			};
			angle = 0;
			startTime = 240;
			isTraining = false;
			prologue = [[]];
			epilogue = [[]];
			songId = 5002;
			movie = nil;
		};
		[11] = {
			name = [[\i Chapter 9 \iHand Over Fist]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 0;
				};
				[2] = {
					type = [[cpu]];
					race = 200;
					name = [[The Cantharan Order]];
					earningPower = 1.250000;
					netRaceFlags = 1;
				};
			};
			scoreString = {
				[0] = [[-Capture Proteus]];
				[1] = [[_-Gamma]];
			};
			initialObjects = {
				[0] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 12043;
						y = 38956;
					};
					earning = 1.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = 1002;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 300;
						[3] = 800;
						[4] = 600;
					};
					nameOverride = [[Proteus Alpha]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -33825;
						y = -32695;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 0;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 13586;
						y = 39456;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 7;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 6260;
						y = -7478;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 23;
					owner = -1;
					initialDestination = -1;
					position = {
						x = -7999;
						y = 13652;
					};
					earning = 1.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = 1003;
					builds = {
						[0] = 100;
					};
					nameOverride = [[Proteus Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 23;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 7304;
						y = -7565;
					};
					earning = 1.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = 1004;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 300;
						[3] = 800;
						[4] = 600;
					};
					nameOverride = [[Proteus Gamma]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 27;
					owner = -1;
					initialDestination = -1;
					position = {
						x = -600;
						y = 9000;
					};
					earning = 0.000000;
					distanceRange = 500;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Proteus]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 4200;
							page = 2;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 1;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1200;
				};
				[1] = {
					type = [[owner]];
					subject = 0;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[The Order captured our base on Proteus Alpha.]];
						};
					};
					flags = {
						trueOnlyOnce = false;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[2] = {
					type = [[owner]];
					subject = 5;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 13;
							text = [[You captured the Cantharan base on Proteus Gamma.]];
						};
					};
					flags = {
						trueOnlyOnce = false;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
			};
			briefing = {
				[0] = {
					title = [[Proteus]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10020^The Cantharan Order controls the Proteus System. In your first major offensive move against the Order, you will seize their base on Proteus Gamma.]];
				};
				[1] = {
					title = [[Proteus Alpha]];
					kind = [[object]];
					objectId = 0;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[Our base Proteus Alpha will be at your disposal. It's well equipped and capable of producing a variety of ships.You must defend this planet from Cantharan occupation. If you allow the Cantharans to land a transport here, the mission will be aborted.]];
				};
				[2] = {
					title = [[Proteus Alpha]];
					kind = [[object]];
					objectId = 0;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1014^The base on Alpha can produce fighters and cruisers.^P1001^]];
				};
				[3] = {
					title = [[Proteus Alpha]];
					kind = [[object]];
					objectId = 0;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1020^This base can also produce defense drones, gunships and transports. The heavily armored gunships are slow, and they rely entirely on energy weapons .^P1055^]];
				};
				[4] = {
					title = [[Philemon Beta]];
					kind = [[object]];
					objectId = 4;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[There's an unoccupied installation on Proteus Beta capable of constructing fighters. Controlling Beta is not a mission requirement, but you may want to take advantage of its resources--or prevent the Cantharans from doing so.]];
				};
				[5] = {
					title = [[Proteus Gamma]];
					kind = [[object]];
					objectId = 5;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[This is the location of the Cantharan base. It has facilities equal to our base on Alpha.]];
				};
				[6] = {
					title = [[Proteus Gamma]];
					kind = [[object]];
					objectId = 5;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1015^Their base can also produce fighters and cruisers.^P1008^]];
				};
				[7] = {
					title = [[Proteus Gamma]];
					kind = [[object]];
					objectId = 5;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1018^Cantharan gunships have antimatter pulse guns which are extremely powerful at close range.^P1057^Their defense drones are best destroyed with large squadrons of ships.]];
				};
				[8] = {
					title = [[Proteus Gamma]];
					kind = [[object]];
					objectId = 5;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1026^Destroy any transports you encounter. They will probably make an attempt to occupy Proteus Beta. If you lose Alpha, the mission is over.]];
				};
				[9] = {
					title = [[Proteus Gamma]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1046^We expect the Cantharans to have a carrier in the area. Be prepared.]];
				};
			};
			starmap = {
				x = 368.000000;
				y = 201.000000;
			};
			par = {
				time = 960;
				kills = 14;
				ratio = 0.000000;
				float = 8;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[]];
			epilogue = [[]];
			songId = 5003;
			movie = nil;
		};
		[12] = {
			name = [[\i Chapter 10 \iAssassin]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 0.000000;
					netRaceFlags = 0;
				};
				[2] = {
					type = [[cpu]];
					race = 200;
					name = [[The Cantharan Order]];
					earningPower = 0.007812;
					netRaceFlags = 0;
				};
			};
			scoreString = {
				[0] = [[-Destroy all]];
				[1] = [[_-hostile ships]];
			};
			initialObjects = {
				[0] = {
					type = 61;
					owner = 0;
					initialDestination = 6;
					position = {
						x = 1565;
						y = 6521;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 27;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 1913;
						y = -2086;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 0;
					owner = 0;
					initialDestination = 6;
					position = {
						x = 956;
						y = 7565;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 13;
					owner = 0;
					initialDestination = 6;
					position = {
						x = 1913;
						y = 8086;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 13;
					owner = 0;
					initialDestination = 6;
					position = {
						x = 2173;
						y = 7391;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 42;
					owner = 0;
					initialDestination = 6;
					position = {
						x = 521;
						y = 6782;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 47;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 2434;
						y = 6782;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 61;
					owner = 0;
					initialDestination = 6;
					position = {
						x = 2782;
						y = 8521;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[8] = {
					type = 42;
					owner = 0;
					initialDestination = 6;
					position = {
						x = 2956;
						y = 7739;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[9] = {
					type = 13;
					owner = 0;
					initialDestination = 6;
					position = {
						x = 1043;
						y = 8782;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[10] = {
					type = 62;
					owner = 1;
					initialDestination = 17;
					position = {
						x = 1478;
						y = 1826;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[11] = {
					type = 62;
					owner = 1;
					initialDestination = 17;
					position = {
						x = 2869;
						y = 1913;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[12] = {
					type = 7;
					owner = 1;
					initialDestination = 17;
					position = {
						x = 1130;
						y = 1130;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[13] = {
					type = 37;
					owner = 1;
					initialDestination = 17;
					position = {
						x = 2260;
						y = 956;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[14] = {
					type = 37;
					owner = 1;
					initialDestination = 17;
					position = {
						x = 3217;
						y = 1391;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[15] = {
					type = 23;
					owner = -1;
					initialDestination = -1;
					position = {
						x = -434;
						y = 2260;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = 1005;
					builds = {
					};
					nameOverride = [[Sprist]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[16] = {
					type = 45;
					owner = 1;
					initialDestination = 6;
					position = {
						x = -1652;
						y = 3217;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[17] = {
					type = 45;
					owner = 1;
					initialDestination = 1;
					position = {
						x = 2000;
						y = 2695;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[18] = {
					type = 14;
					owner = 1;
					initialDestination = 16;
					position = {
						x = -1565;
						y = 2695;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[19] = {
					type = 14;
					owner = 1;
					initialDestination = 16;
					position = {
						x = -782;
						y = 3565;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[20] = {
					type = 7;
					owner = 1;
					initialDestination = 16;
					position = {
						x = -1565;
						y = 869;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[21] = {
					type = 7;
					owner = 1;
					initialDestination = 16;
					position = {
						x = -2956;
						y = 1043;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[22] = {
					type = 7;
					owner = 1;
					initialDestination = 16;
					position = {
						x = -1565;
						y = -260;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[23] = {
					type = 7;
					owner = 1;
					initialDestination = 16;
					position = {
						x = -3043;
						y = -86;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[24] = {
					type = 7;
					owner = 1;
					initialDestination = 16;
					position = {
						x = -1913;
						y = 2086;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 360;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[destruction]];
					subject = 0;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[Our carrier ISN 2020187 was destroyed in the battle.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 6;
				};
				[1] = {
					type = [[destruction]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 14;
							text = [[You destoyed the Constant Voice of Zom, and the mastermind Som with it.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 17;
				};
			};
			briefing = {
				[0] = {
					title = [[Sprist System]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10020^Our mission here is simple: destroy Mek Het, the Som of Tay Ros. He is one of Cantharis's most influential advocates for expansion, and one of their best military minds.]];
				};
				[1] = {
					title = [[The Constant Voice of Doz]];
					kind = [[object]];
					objectId = 17;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1046^The Som is on the Carrier the Constant Voice of Zom. Destroy this carrier and its escorts.]];
				};
				[2] = {
					title = [[The Open Eye of Zom]];
					kind = [[object]];
					objectId = 16;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1046^The Open Eye of Zom is also in the Sprist system, and has its own host of escorts.]];
				};
				[3] = {
					title = [[ISN 2020187]];
					kind = [[object]];
					objectId = 6;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1048^We've brought in a carrier of our own, the ISN 2020187. It should be able to successfully engage the Constant Voice. However, if 2020187 is destroyed, the mission will be aborted. It has its own group of escorts, including some Obish ships.]];
				};
			};
			starmap = {
				x = 311.000000;
				y = 192.000000;
			};
			par = {
				time = 120;
				kills = 10;
				ratio = 0.000000;
				float = 25;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[]];
			epilogue = [[]];
			songId = 5004;
			movie = nil;
		};
		[13] = {
			name = [[\i Chapter 11 \iShoplifter 2]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 0.003906;
					netRaceFlags = 229;
				};
				[2] = {
					type = [[cpu]];
					race = 200;
					name = [[The Prophets of Salril]];
					earningPower = 0.000000;
					netRaceFlags = 0;
				};
			};
			scoreString = {
				[0] = [[-Rescue 21]];
				[1] = [[_-humans]];
				[2] = [[2\0\0\0\f\t\On board: \/5]];
				[3] = [[2\1\0\0\f\t\Rescued: \/21]];
			};
			initialObjects = {
				[0] = {
					type = 286;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 599;
					builds = {
					};
					nameOverride = [[UNS Ares]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 206;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 521;
						y = 3304;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 210;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -3564;
						y = -22347;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Simlab 1]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 210;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 2434;
						y = -36869;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Simlab 2]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 210;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 521;
						y = -10608;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Simlab 3]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 112;
					owner = 1;
					initialDestination = 4;
					position = {
						x = 1739;
						y = -8782;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[6] = {
					type = 14;
					owner = 1;
					initialDestination = 4;
					position = {
						x = -521;
						y = -8782;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[7] = {
					type = 14;
					owner = 1;
					initialDestination = 4;
					position = {
						x = 260;
						y = -9043;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[8] = {
					type = 13;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 1304;
						y = 3478;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[9] = {
					type = 13;
					owner = 0;
					initialDestination = 1;
					position = {
						x = -347;
						y = 4000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[10] = {
					type = 7;
					owner = 1;
					initialDestination = 2;
					position = {
						x = -1741;
						y = -22173;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[11] = {
					type = 62;
					owner = 1;
					initialDestination = 2;
					position = {
						x = -5217;
						y = -23304;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[12] = {
					type = 110;
					owner = 1;
					initialDestination = 3;
					position = {
						x = 4869;
						y = -33391;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[13] = {
					type = 110;
					owner = 1;
					initialDestination = 3;
					position = {
						x = -1043;
						y = -35478;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[14] = {
					type = 110;
					owner = 1;
					initialDestination = 3;
					position = {
						x = 5217;
						y = -34782;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[counter]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = true;
							id = 129;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 5;
						id = 0;
						player = 0;
					};
				};
				[1] = {
					type = [[proximity]];
					subject = 1;
					direct = 0;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 7;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = false;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[2] = {
					type = [[counter greater]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[create object]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							baseType = 207;
							min = 1;
							range = 0;
							velocityRelative = true;
							directionRelative = true;
							distanceRange = 0;
						};
						[1] = {
							type = [[change score]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 0;
							amount = -1;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 0;
							range = 0;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = true;
							id = 206;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 1;
						id = 0;
						player = 0;
					};
				};
				[3] = {
					type = [[distance greater]];
					subject = 1;
					direct = 0;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 2;
							range = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 7;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = false;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 50000;
				};
				[4] = {
					type = [[counter]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 15;
							text = [[You rescued more than two thirds of the human captives.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 21;
						id = 1;
						player = 0;
					};
				};
				[5] = {
					type = [[counter]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[You allowed too many of the human captives to die for this mission to be considered a success.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 10;
						id = 2;
						player = 0;
					};
				};
				[6] = {
					type = [[destruction]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[Without your modified destroyer, you can’t rescue the humans.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[7] = {
					type = [[velocity less than or equal]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 2;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1280;
				};
			};
			briefing = {
				[0] = {
					title = [[Heshac System]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[The Heshac System is owned by Salril. The presence of the deep space simlabs indicates that the Salrilians are using it as part of their Oracular Network. To our surprise, however, the beings inside the simlabs are human.]];
				};
				[1] = {
					title = [[Heshac System]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[Your mission in the Heshac System is to destroy the simlabs and to rescue as many humans as possible.]];
				};
				[2] = {
					title = [[Heavy Destroyer]];
					kind = [[object]];
					objectId = 1;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1130^For this mission you’ll be using a single destroyer. It’s a powerful vessel, armed with a fullerene pulse gun, twin lepton beam cannons, and one hundred and fifty concussion missiles. You'll also have two fighters for escort.]];
				};
				[3] = {
					title = [[UNS Ares]];
					kind = [[object]];
					objectId = 0;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10002^You’ll actually be making use of the UNS Ares in the Heshac system, as it is the ship best equipped for holding humans. For obvious reasons, the UNS Ares will not be engaging any enemy ships, or approaching the Salrilian installations.]];
				};
				[4] = {
					title = [[Lab]];
					kind = [[object]];
					objectId = 2;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1210^At each simlab, fire at the installation until you rip open its walls. Take care, because once the simlab is open, the humans will escape, and your weapons will not be keyed to the humans’ life signs so the humans will be vulnerable to your weapons fire.]];
				};
				[5] = {
					title = [[Heavy Destroyer]];
					kind = [[object]];
					objectId = 1;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[Your destroyer has been specially modified to allow the humans to enter from the outside. However, you’ll only be able to hold five of them at a time. When you have as many humans aboard as possible, return them to the UNS Ares.]];
				};
				[6] = {
					title = [[Cruiser]];
					kind = [[object]];
					objectId = 12;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1113^There are an assortment of Salrilian and Cantharan ships guarding the simlabs. The Salrilian warships are nimble and powerful. Even with the destroyer, you’ll find engaging them a challenge.^P1111^]];
				};
				[7] = {
					title = [[Heshac System]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[For this mission to be considered successful, you must rescue at least twenty one of the thirty humans in the labs. Good luck.]];
				};
			};
			starmap = {
				x = 160.000000;
				y = 179.000000;
			};
			par = {
				time = 435;
				kills = 8;
				ratio = 0.000000;
				float = 0;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[#+B2007#+10025The master race of the Cantharans, the Salrilians are believed to have the ability to predict the near future. Far from supernatural, this knowledge is the result of incredible investments in technology. Through a process of quantum simulation, the Salrilians’ massive Oracular Net of computers forecasts events well before they happen, anywhere in the known galaxy. The more information the Salrilians have, the more accurate the Oracles are. Thus, the Salrilians seek to learn all they can about the Universe and its denizens. What they cannot understand, they seek to contain. What they cannot contain they destroy.#+The Salrilians have a vested interest in the success of the Cantharans, a race they can influence and understand. You were warned that as you drew closer to Earth, you ran the risk of piquing the interest of the Prophets. But now, the Ishimans have unexpected information for the weary crew of the Ares.#+A string of deep space simlabs, Salrilian installations designed to probe and analyze alien intelligences, has been detected in a nearby system.#+The aliens in the simlabs are human.]];
			epilogue = [[]];
			songId = 5000;
			movie = nil;
		};
		[14] = {
			name = [[\i Chapter 12 \iMake Way]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 0;
				};
				[2] = {
					type = [[cpu]];
					race = 200;
					name = [[The Cantharan Order]];
					earningPower = 3.000000;
					netRaceFlags = 172;
				};
			};
			scoreString = {
				[0] = [[-Capture Fansi]];
				[1] = [[_-Beta]];
				[2] = [[-Ensure safety]];
				[3] = [[_-of 5 cargo ships]];
				[4] = [[-]];
				[5] = [[2\0\0\0\f\t\Docked: \/5]];
			};
			initialObjects = {
				[0] = {
					type = 115;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -14609;
						y = -14259;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Orbital Shipyard]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 116;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -14609;
						y = -14259;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 0;
					owner = 0;
					initialDestination = 9;
					position = {
						x = -21999;
						y = -15478;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 118;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 0;
						y = 4347;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[4] = {
					type = 104;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 3821;
						y = 9473;
					};
					earning = 0.750000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Bunker Station 2]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[5] = {
					type = 118;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 0;
						y = 4347;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[6] = {
					type = 118;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 0;
						y = 4347;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[7] = {
					type = 118;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 0;
						y = 4347;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[8] = {
					type = 118;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 0;
						y = 4347;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[9] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -11133;
						y = -18088;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1019;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 300;
						[3] = 800;
						[4] = 850;
						[5] = 860;
					};
					nameOverride = [[Fansi Alpha]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[10] = {
					type = 23;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 22957;
						y = 43826;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1020;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 300;
						[3] = 800;
						[4] = 850;
						[5] = 860;
					};
					nameOverride = [[Fansi Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[11] = {
					type = 104;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 695;
						y = 3826;
					};
					earning = 0.750000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Bunker Station 1]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[12] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 20173;
						y = 4173;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[13] = {
					type = 93;
					owner = -2;
					initialDestination = -1;
					position = {
						x = -2346;
						y = 956;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[14] = {
					type = 93;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 6935;
						y = 14868;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[15] = {
					type = 119;
					owner = 1;
					initialDestination = 11;
					position = {
						x = 21913;
						y = 8000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[16] = {
					type = 119;
					owner = 1;
					initialDestination = 4;
					position = {
						x = 18086;
						y = 2434;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5300;
							page = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 1200;
							alterType = [[hidden]];
							minimum = 3;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 1200;
							alterType = [[hidden]];
							minimum = 5;
							range = 0;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 1200;
							alterType = [[hidden]];
							minimum = 6;
							range = 0;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 1200;
							alterType = [[hidden]];
							minimum = 7;
							range = 0;
						};
						[5] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 1200;
							alterType = [[hidden]];
							minimum = 8;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 18000;
				};
				[1] = {
					type = [[counter]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 1;
							range = 0;
						};
						[1] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5301;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 5;
						id = 0;
						player = 0;
					};
				};
				[2] = {
					type = [[owner]];
					subject = 9;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[The Cantharan Order landed a transport on our base on Fansi Alpha.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[3] = {
					type = [[owner]];
					subject = 10;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 16;
							text = [[You captured the Cantharan base on Fansi Beta.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
			};
			briefing = {
				[0] = {
					title = [[Fansi]];
					kind = [[absolute]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[The Fansi System was once the front line Gaitori base of operations in Obish space during the Gaitori/Obish War. Today it's the last outpost of the Gaitori Isolationists--one of the few enemies of both Cantharis and Obain. It's also the last military obstacle between you and Cantharan Space.The Cantharans intend to capture the Fansi System. Your objective is to beat them to it.]];
				};
				[1] = {
					title = [[Orbital Shipyard]];
					kind = [[object]];
					objectId = 0;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10057^Part of the Fansi System's value is its orbital shipyard. The Gaitori Isolationists haven't had the resources to make use of it, but there's a remnant of the Gaitori/Obish war here--a partially constructed Obish destroyer, built during Obain's brief occupation of the system near the end of the war. We will be completing the destroyer's construction for this mission.]];
				};
				[2] = {
					title = [[Cargo Ship]];
					kind = [[object]];
					objectId = 11;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1119^To complete the construction of the Obish destroyer during the mission, five cargo ships will be exiting through a jump gate here. All five cargo ships must make it to the orbital shipyard in order for us to complete the destroyer. We'll alert you when the cargo ships are due to drop in-system, but it'll be up to you to make sure their path is clear.]];
				};
				[3] = {
					title = [[Flak Drone]];
					kind = [[object]];
					objectId = 13;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1094^Send engineering pods to this flak drone to reconfigure it to fire on enemy vessels. The Gaitori Isolationists currently have it set to fire on all ships. Make sure you have control of it before the cargo ships arrive.]];
				};
				[4] = {
					title = [[Bunker Station 1]];
					kind = [[object]];
					objectId = 11;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1105^This is one of two bunker stations in the Fansi system, both of which are occupied by Gaitori Isolationists. The bunker stations have powerful armament, but their defenses can be knocked out using heavy fire to reduce their shields.Use assault transports to gain control of the bunker stations--occupying the stations will generate resources for you during the mission.]];
				};
				[5] = {
					title = [[Bunker Station 2]];
					kind = [[object]];
					objectId = 4;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1105^This is the other bunker station. If the Cantharans gain control of both the stations, they will most likely overwhelm you.]];
				};
				[6] = {
					title = [[Fansi Alpha]];
					kind = [[object]];
					objectId = 9;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[We've set up a base of operations here on Fansi Alpha, where you'll be able to produce a variety of ships. As usual, allowing the enemy to land a transport here will force us to abort the mission.]];
				};
				[7] = {
					title = [[Engineer Pod]];
					kind = [[object]];
					objectId = 9;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[In addition to fighters, cruisers, gunships, and transports, the base on Fansi can produce two special-purpose ships.^P1096^Build engineering pods to gain control of the flak drones. Make sure you commandeer the flak drone that lies between Bunker Station 1 and the orbital shipyard, to ensure the safe passage of the freighters.]];
				};
				[8] = {
					title = [[Assault Transport]];
					kind = [[object]];
					objectId = 9;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1102^Assault Transports are the only ships designed to gain control of bunker stations. Our assault transports carry twelve extravehicular assault troopers. Six EVA troopers can exit the transport at once, and the assault transport will automatically dispatch them when it arrives at a hostile barrack station. At least five troopers must enter the station to control it.]];
				};
				[9] = {
					title = [[Fansi Beta]];
					kind = [[object]];
					objectId = 10;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The Cantharan base on Fansi Beta is your ultimate goal. Land a standard transport here to complete the mission. The Cantharans have ship building facilities equivalent to ours.^P1120^In addition to fighters, cruisers, transports, and gunships, the Cantharans have assault transports of their own. Destroy them, and the EVA Troopers they release.]];
				};
				[10] = {
					title = [[Engineer Pod]];
					kind = [[object]];
					objectId = 10;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1121^Cantharan engineering pods, like our own, are equipped with defensive repulser beam cannons.]];
				};
				[11] = {
					title = [[Carrier]];
					kind = [[object]];
					objectId = 12;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1046^The Cantharan carrier the Song of Zom is already in the Fansi system. Its missiles are very effective against the bunker stations' defenses.]];
				};
			};
			starmap = {
				x = 259.000000;
				y = 158.000000;
			};
			par = {
				time = 900;
				kills = 10;
				ratio = 1.199219;
				float = 20;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[]];
			epilogue = [[]];
			songId = 5001;
			movie = nil;
		};
		[15] = {
			name = [[\i Chapter 13 \iYo Ho Ho]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 0;
				};
				[2] = {
					type = [[cpu]];
					race = 600;
					name = [[The Prophets of Salril]];
					earningPower = 1.000000;
					netRaceFlags = 0;
				};
			};
			scoreString = {
				[0] = [[1\0\0\0\Retrieve escape\Escort tractor]];
				[1] = [[_1\0\0\0\pods\tug]];
				[2] = [[2\1\0\0\f\t\Rescued: \/6]];
				[3] = [[1\1\0\0\N\Y\Liner secure: \]];
			};
			initialObjects = {
				[0] = {
					type = 125;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[1] = {
					type = 128;
					owner = -1;
					initialDestination = -1;
					position = {
						x = -1304;
						y = -956;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 128;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 1304;
						y = 1043;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 128;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 1739;
						y = -2173;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 128;
					owner = -1;
					initialDestination = -1;
					position = {
						x = -2260;
						y = 1739;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 128;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 173;
						y = -1478;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 128;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 3565;
						y = 86;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 137;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 2238;
						y = 6174;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Secorem Jump Gate]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[8] = {
					type = 141;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 2168;
						y = 6075;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[9] = {
					type = 141;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 2357;
						y = 6179;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[10] = {
					type = 127;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 2238;
						y = 6174;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[11] = {
					type = 129;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 1391;
						y = 6434;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[12] = {
					type = 87;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 4174;
						y = 24782;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[13] = {
					type = 37;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 9827;
						y = 27826;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[14] = {
					type = 37;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 3217;
						y = 29826;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[15] = {
					type = 64;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 9217;
						y = 23739;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[16] = {
					type = 113;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -7739;
						y = -8521;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[17] = {
					type = 110;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -6782;
						y = -9217;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[18] = {
					type = 110;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -8608;
						y = -7478;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[19] = {
					type = 117;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 2238;
						y = 6174;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[20] = {
					type = 141;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 2173;
						y = 6260;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[counter]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 90;
							alterType = [[hidden]];
							minimum = 10;
							range = 0;
						};
						[1] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 30;
							id = 5400;
							page = 1;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 900;
							alterType = [[hidden]];
							minimum = 16;
							range = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 6;
						id = 1;
						player = 0;
					};
				};
				[1] = {
					type = [[proximity]];
					subject = 0;
					direct = 10;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 126;
						};
						[1] = {
							type = [[play sound]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							priority = 4;
							persistence = 30;
							isAbsolute = false;
							volume = 255;
							volumeRange = 0;
							soundId = 17406;
							soundIdRange = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 2;
							range = 0;
						};
						[3] = {
							type = [[set destination]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 10;
							owner = 0;
							delay = 0;
						};
						[4] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5401;
							page = 1;
						};
						[5] = {
							type = [[set destination]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 10;
							directOverride = 7;
							owner = 0;
							delay = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[2] = {
					type = [[proximity]];
					subject = 10;
					direct = 7;
					actions = {
						[0] = {
							type = [[set destination]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 7;
							owner = 0;
							delay = 0;
						};
						[1] = {
							type = [[land at]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = 7;
							owner = 0;
							delay = 60;
							speed = 128;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 10;
							alterType = [[hidden]];
							minimum = 19;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
			};
			briefing = {
				[0] = {
					title = [[EACSR Banadee]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1127^The Banadee, an Elejeetian luxury passenger liner, has been disabled by Gaitori pirates. The Elejeetian Minister of Automation, Jommo, along with most of the other passengers, has abandoned ship.]];
				};
				[1] = {
					title = [[EACSR Banadee]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[Your mission in the Secorem System is to recover the Banadee's escape pods, and to aid a tractor tug in its recovery of the liner. The Elejeetian Empire is anxious to see Minister Jommo returned safely.^P10045^]];
				};
				[2] = {
					title = [[Heavy Destroyer]];
					kind = [[object]];
					objectId = 11;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1130^You'll have the use of this destroyer for this mission.]];
				};
				[3] = {
					title = [[Secorem]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1065^Before you commence the rescue operation, you need to destroy the Gaitori pirates, who are still in the Secorem system. You'll find the destroyer more than adequate for the task.]];
				};
				[4] = {
					title = [[Escape Pod]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1129^Don't allow any of the escape pods to be destroyed while you engage the Gaitori, or the mission will be aborted.When the Secorem system is clear, recover all six escape pods from the Banadee. ]];
				};
				[5] = {
					title = [[Secorem Jump Gate]];
					kind = [[object]];
					objectId = 7;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10030^Once you've safely recovered all six escape pods, the civilian tractor tug will be entering here through the Secorem Jump Gate. It's bringing two heavy cruisers for escort.^P1128^]];
				};
				[6] = {
					title = [[Secorem]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[The tractor tug will rendezvous with the Elejeetian liner Banadee, and tow it back to the jump gate. Once the liner passes through the gate, your mission will be complete.It's unusual to find Gaitori pirates this deep into Cantharan space, and unlikely that they would be capable of disabling an Elejeetian liner-- prepare for the unexpected.]];
				};
			};
			starmap = {
				x = 194.000000;
				y = 145.000000;
			};
			par = {
				time = 300;
				kills = 11;
				ratio = 0.000000;
				float = 0;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[#+B2007\i PART 3 \i #+Word of your perseverance spreads across the stars. Even the mysterious Elejeetian Empire, an enemy of Cantharis, begins to recognize the power of human tenacity. The Emperor himself begins to wonder if, unlikely though it seems, these humans could deliver a crippling blow to the Order?#+10023Due to arrogance or innocence, the Elejeetians rarely arm their ships with weapons of any kind, preferring instead to rely on heavy defenses to protect them from attacks. However, on the rare occasions that they do choose to fight, their superior technology becomes readily apparent.#+Your crew is aware that, impressive though their victories have been, their most trying conflicts still lie ahead. From Fansi you must pass into Cantharan space, coming perilously close to the Audemedon Axis and the Salrilians.#+As you approach the Secorem System, these hazards that now face you are quickly illustrated by a faint distress signal, the last gasp of a supposedly invulnerable Elejeetian liner: "...HUMANS...HELP...NOW..."]];
			epilogue = [[]];
			songId = 5002;
			movie = [[:Ares Data ƒ:Placeholder Movie]];
		};
		[16] = {
			name = [[\i Chapter 14 \iCaptivating]];
			netRaceFlags = 34;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 34;
				};
				[2] = {
					type = [[cpu]];
					race = 200;
					name = [[The Cantharan Order]];
					earningPower = 1.250000;
					netRaceFlags = 34;
				};
			};
			scoreString = {
				[0] = [[-Capture Bokleo]];
				[1] = [[_-Gamma]];
				[2] = [[-Free Bazidanese]];
				[3] = [[_-Ship]];
			};
			initialObjects = {
				[0] = {
					type = 61;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 18261;
						y = 73651;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 77;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 75;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -341;
						y = -85;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 75;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 287;
						y = -235;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 75;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 173;
						y = 260;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 62;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -10782;
						y = -12955;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 23;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 434;
						y = -869;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1006;
					builds = {
					};
					nameOverride = [[Bokleo Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 78;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -260;
						y = -608;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[8] = {
					type = 23;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -4782;
						y = -21477;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1007;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 800;
						[3] = 300;
						[4] = 250;
					};
					nameOverride = [[Bokleo Gamma]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[9] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 22783;
						y = 72259;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1008;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 800;
					};
					nameOverride = [[Bokleo Alpha]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[10] = {
					type = 47;
					owner = 0;
					initialDestination = 9;
					position = {
						x = 15826;
						y = 80607;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[ISN 8738810]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[11] = {
					type = 47;
					owner = 0;
					initialDestination = 9;
					position = {
						x = 32260;
						y = 74433;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[ISN 2020187]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[12] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -12434;
						y = -19826;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[The Gentle Fingers of Zom]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[13] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -5738;
						y = -18868;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[The Chaste Dream of Doz]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[14] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -15043;
						y = -14347;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[CRUISER]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[15] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -10173;
						y = -15391;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[16] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -16434;
						y = -16259;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[17] = {
					type = 17;
					owner = 1;
					initialDestination = 16;
					position = {
						x = -8869;
						y = -20086;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[counter]];
					subject = 1;
					direct = 1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[base type]];
							retainAmmoCount = false;
							id = 67;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 3;
						id = 0;
						player = 0;
					};
				};
				[1] = {
					type = [[owner]];
					subject = 6;
					direct = 7;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 2;
							range = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = false;
							value = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
				[2] = {
					type = [[owner]];
					subject = 6;
					direct = 7;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 1;
							range = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = false;
							value = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[3] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 15;
							range = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 16;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 17;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 7200;
				};
				[4] = {
					type = [[owner]];
					subject = 8;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 18;
							text = [[You captured the Cantharan base on Bokleo Gamma.]];
						};
					};
					flags = {
						trueOnlyOnce = false;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
				[5] = {
					type = [[owner]];
					subject = 9;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[The Gaitori have taken our base on Demeter Alpha. The system is now controlled by them.]];
						};
					};
					flags = {
						trueOnlyOnce = false;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
			};
			briefing = {
				[0] = {
					title = [[Bokleo Alpha]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10044^The Bokleo System was a neutral Bazidanese trading outpost until the Cantharan Order occupied it. However, the Cantharans are not interested in disrupting the trading routes--they have a much greater prize.]];
				};
				[1] = {
					title = [[Bazidanese]];
					kind = [[object]];
					objectId = 1;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10037^We're not sure what it is, but the Order somehow managed to capture this Bazidanese vessel intact. Long range scans indicate that it is fairly massive, and apparently well armed.Since Bazidan has always been very secretive about its military technologies, we are assuming that the Cantharans are as curious as we are, and that they intend to reverse engineer this ship. Your objective is to prevent them from doing so by forcing them out of the Bokleo System.]];
				};
				[2] = {
					title = [[Tractor Moor]];
					kind = [[object]];
					objectId = 2;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1076^The Bazidanese ship is anchored in place by three tractor moors, which prevent the ship from moving or firing. You must destroy all three moors to free the ship. Although the release of the ship is not immediately imperative, we suspect the Bazidanese crew would be grateful. ]];
				};
				[3] = {
					title = [[Border Drone]];
					kind = [[object]];
					objectId = 7;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1079^In accordance with the Amilass Treaty, an invulnerable border drone has been stationed near the neutral trading outpost on Bokleo Beta. However, the Order has reconfigured it to fire on all hostile vessels. Unlike the flak drones you’re familiar with, this border drone does not have flak artillery.]];
				};
				[4] = {
					title = [[Bokleo Beta]];
					kind = [[object]];
					objectId = 6;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The border drone is controlled from the outpost on Bokleo Beta. Land a transport here to gain control of the drone; the drone cannot be controlled with an engineering pod. The outpost has no ship building capabilities.]];
				};
				[5] = {
					title = [[Bokleo Gamma]];
					kind = [[object]];
					objectId = 8;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1063^The Cantharans have established a base on Gamma. It's capable of producing fighters, heavy cruisers, gunships, and transports.Landing a transport on Bokleo Gamma to control the base is your primary objective.^P1026^]];
				};
				[6] = {
					title = [[Bokleo Alpha]];
					kind = [[object]];
					objectId = 9;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1001^We didn't have time to establish a strong presence on Alpha. Our base can only produce fighters, cruisers, and transports. Be prepared for heavy losses.^P1014^]];
				};
				[7] = {
					title = [[ISN 8738810]];
					kind = [[object]];
					objectId = 10;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1048^We have committed two carriers to this mission's completion. The ISN 8738810 is on its first combat mission.]];
				};
				[8] = {
					title = [[ISN 2020187]];
					kind = [[object]];
					objectId = 11;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1048^The ISN 2020187 has been repaired since the Battle of Sprist (in which you destroyed the Constant Voice of Doz).]];
				};
				[9] = {
					title = [[The Gentle Fingers of Zom]];
					kind = [[object]];
					objectId = 12;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1046^There are already three Cantharan carriers in the system and more are on the way. The Gentle Finger of Zom was one of the two ships which originally captured the Bokleo System.]];
				};
				[10] = {
					title = [[The Chaste Dream of Doz]];
					kind = [[object]];
					objectId = 13;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1046^The Chaste Dream of Doz is the other carrier which first occupied Bokleo.]];
				};
				[11] = {
					title = [[The Silent Question of Doz]];
					kind = [[object]];
					objectId = 14;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1046^The Silent Question of Doz has just joined the other two carriers.]];
				};
				[12] = {
					title = [[Heavy Cruiser]];
					kind = [[object]];
					objectId = 0;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1062^You'll initially be using this heavy cruiser. You are welcome to transfer control to any other ship you see fit.]];
				};
			};
			starmap = {
				x = 222.000000;
				y = 130.000000;
			};
			par = {
				time = 1320;
				kills = 95;
				ratio = 0.000000;
				float = 30;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[#+B2006Before the Cantharan Crusades began, the Star League of Bazidan had trading outposts scattered throughout what is now Cantharan space. With enormous patience and a mastery of communication, the Bazidanese served as intermediaries between civilizations, facilitating free trade between alien species, opening their outposts to all.#+When the Order's belligerence began to disrupt the trading routes, and Elejee and Ishima broke off their diplomatic ties to Cantharis, the Bazidanese remained neutral in an effort to negotiate a peaceful end to the Order's expansion. However, the Cantharans have begun to exhaust even the legendary patience of Bazidan. #+In the Bokleo System, an opportunity presents itself to you when you learn of a brazen Cantharan attack on a Bazidanese outpost. Cantharis's new enemy could be Earth's new ally.]];
			epilogue = [[]];
			songId = 5003;
			movie = nil;
		};
		[17] = {
			name = [[\i Chapter 15 \iThe Left Hand]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 172;
				};
				[2] = {
					type = [[cpu]];
					race = 600;
					name = [[The Prophets of Salril]];
					earningPower = 2.000000;
					netRaceFlags = 0;
				};
			};
			scoreString = {
				[0] = [[-Capture Thasero]];
				[1] = [[_-Beta]];
			};
			initialObjects = {
				[0] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 6000;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1026;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 300;
						[3] = 800;
						[4] = 860;
					};
					nameOverride = [[Thasero Alpha]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 23;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -7478;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1028;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 300;
						[3] = 800;
						[4] = 860;
					};
					nameOverride = [[Thasero Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 104;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 0;
						y = 0;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 572;
					builds = {
					};
					nameOverride = [[Thasero Station]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 129;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 869;
						y = 6521;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 138;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 956;
						y = -7130;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 47;
					owner = 0;
					initialDestination = 0;
					position = {
						x = -782;
						y = 6521;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 67;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 86;
						y = 7478;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 113;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -9565;
						y = -9565;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[8] = {
					type = 113;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -8695;
						y = -9130;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[9] = {
					type = 148;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -9565;
						y = -8000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[proximity]];
					subject = 2;
					direct = 3;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 120;
							id = 4570;
							page = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 180;
							alterType = [[hidden]];
							minimum = 7;
							range = 2;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[1] = {
					type = [[owner]];
					subject = 0;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[The Salrilians captured our base on Alpha.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[2] = {
					type = [[owner]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 19;
							text = [[You captured the Salrilian base on Beta.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
			};
			briefing = {
				[0] = {
					title = [[Thasero Station]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[The Salrilians, the so-called Prophets, appear to have invested considerably in the Cantharan Order's success. While their motives remain obscure, their willingness to fight has become clear.The Salrilians orchestrated the attack on the Elejeetian liner Banadee from here, the Thasero System--and it is here that you will make your willingness to fight clear to the Salrilians.]];
				};
				[1] = {
					title = [[Thasero Alpha]];
					kind = [[object]];
					objectId = 0;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1102^From our base on Thasero Alpha you can make all the ships you'll require for this mission: fighters, cruisers, gunships, transports, and assault transports.]];
				};
				[2] = {
					title = [[Heavy Destroyer]];
					kind = [[object]];
					objectId = 3;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1130^You'll start in this destroyer. It's the only one we'll be able to commit to this mission.]];
				};
				[3] = {
					title = [[Carrier]];
					kind = [[object]];
					objectId = 5;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1048^We expect stiff resistance, so we've brought the carrier ISN 0910969 in system. ]];
				};
				[4] = {
					title = [[Battleship]];
					kind = [[object]];
					objectId = 6;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1068^Thanks to your efforts in the Bokleo system, the Bazidanese have loaned us a battleship, the First Life. Its homing pulses are fairly powerful.]];
				};
				[5] = {
					title = [[Thasero Station]];
					kind = [[object]];
					objectId = 2;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10077^Thasero Station is your first objective. The sooner you knock out its shielding, the fewer resources the Salrilians will have to spend on ship building. Use an assault transport to gain control of the station--you'll be able to build more ships.]];
				};
				[6] = {
					title = [[Thasero Beta]];
					kind = [[object]];
					objectId = 1;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The base on Thasero Beta is your final goal. Land a transport here to complete the mission.^P1113^The Salrilian fighters are difficult to see by design.^P1111^Their cruisers have stealth fields.]];
				};
				[7] = {
					title = [[Thasero Beta]];
					kind = [[object]];
					objectId = 1;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1139^Salrilian gunships also have stealth fields. They are fast and well armed.^P1141^The Prophet's transports almost always operate with active stealth fields. Often the only way to prevent one them from sneaking onto a planet is by firing blindly.]];
				};
				[8] = {
					title = [[The Actualizer]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1114^A Salrilian carrier, which we believe to be the Actualizer, is en route to the Thasero System. Dispatch it quickly.]];
				};
			};
			starmap = {
				x = 150.000000;
				y = 120.000000;
			};
			par = {
				time = 435;
				kills = 56;
				ratio = 0.000000;
				float = 17;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[]];
			epilogue = [[]];
			songId = 5004;
			movie = nil;
		};
		[18] = {
			name = [[\i Chapter 16 \iHornet's Nest]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 171;
				};
				[2] = {
					type = [[cpu]];
					race = 700;
					name = [[The Audemedon Axis]];
					earningPower = 1.000000;
					netRaceFlags = 202;
				};
			};
			scoreString = {
				[0] = [[1\2\0\0\Protect science\Destroy jumpgate\\]];
				[1] = [[1\2\0\0\vessel\inhibitor\\]];
				[2] = [[1\3\0\0\\DESTROYED\\]];
				[3] = [[1\3\0\0\\Destroy all\\]];
				[4] = [[1\3\0\0\\hostile ships\\]];
			};
			initialObjects = {
				[0] = {
					type = 160;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 0;
						y = 0;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Massive Device]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 109;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 174;
						y = 7739;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[2] = {
					type = 151;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 86;
						y = 7826;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 129;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 435;
						y = 8086;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[4] = {
					type = 129;
					owner = 0;
					initialDestination = 1;
					position = {
						x = -173;
						y = 6695;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[5] = {
					type = 147;
					owner = 1;
					initialDestination = 1;
					position = {
						x = 174;
						y = -2000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[6] = {
					type = 147;
					owner = 1;
					initialDestination = 1;
					position = {
						x = -695;
						y = -2086;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[7] = {
					type = 147;
					owner = 1;
					initialDestination = 1;
					position = {
						x = -347;
						y = -2608;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[8] = {
					type = 147;
					owner = 1;
					initialDestination = 1;
					position = {
						x = -217;
						y = -1521;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[9] = {
					type = 147;
					owner = 1;
					initialDestination = 1;
					position = {
						x = -260;
						y = -2434;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[10] = {
					type = 148;
					owner = 1;
					initialDestination = 0;
					position = {
						x = -957;
						y = -174;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[11] = {
					type = 149;
					owner = 1;
					initialDestination = 0;
					position = {
						x = 1130;
						y = -43;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[12] = {
					type = 142;
					owner = 1;
					initialDestination = 0;
					position = {
						x = 43;
						y = -391;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[13] = {
					type = 117;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -86;
						y = 9217;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[14] = {
					type = 47;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -86;
						y = 9217;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[15] = {
					type = 47;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -86;
						y = 9217;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[16] = {
					type = 47;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -86;
						y = 9217;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[17] = {
					type = 129;
					owner = 0;
					initialDestination = 14;
					position = {
						x = -86;
						y = 9217;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[18] = {
					type = 129;
					owner = 0;
					initialDestination = 15;
					position = {
						x = -86;
						y = 9217;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[19] = {
					type = 129;
					owner = 0;
					initialDestination = 16;
					position = {
						x = -86;
						y = 9217;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[20] = {
					type = 148;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 6608;
						y = -7478;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[21] = {
					type = 148;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 5043;
						y = -7826;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[22] = {
					type = 142;
					owner = 1;
					initialDestination = 20;
					position = {
						x = 6000;
						y = -8173;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[23] = {
					type = 142;
					owner = 1;
					initialDestination = 20;
					position = {
						x = 5478;
						y = -6695;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[24] = {
					type = 149;
					owner = 1;
					initialDestination = 21;
					position = {
						x = 6434;
						y = -6347;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[destruction]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[The science vessel was destroyed before it could collect enough data on the Audemedon construction.]];
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 1;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 2;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[1] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5240;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 60;
				};
				[2] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5241;
							page = 2;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 0;
							range = 0;
						};
						[2] = {
							type = [[set destination]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 3;
							directOverride = 0;
							owner = 0;
							delay = 1200;
						};
						[3] = {
							type = [[set destination]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 4;
							directOverride = 0;
							owner = 0;
							delay = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 2400;
				};
				[3] = {
					type = [[destruction]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 0;
							range = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 1;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 2;
							range = 0;
						};
						[3] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 360;
							id = 5243;
							page = 1;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 360;
							alterType = [[hidden]];
							minimum = 20;
							range = 4;
						};
						[5] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 360;
							alterType = [[hidden]];
							minimum = 14;
							range = 5;
						};
						[6] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 360;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 4;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
				[4] = {
					type = [[no ships left]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 20;
							text = [[You decimated the Audemedon fleet and destroyed the jumpstream inhibitor.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					player = 1;
				};
			};
			briefing = {
				[0] = {
					title = [[Ser System]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[We're dropping you into the Ser System to investigate an unusual phenomenon brought to our attention by the Elejeetians. They've been experiencing problems maintaining jump streams that pass near Ser.]];
				};
				[1] = {
					title = [[Ser System]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10084^Long range scans have picked up this massive object. It appears to be an Audemedon construction. We believe it may be causing the local jump stream difficulties.]];
				};
				[2] = {
					title = [[Research Vessel]];
					kind = [[object]];
					objectId = 1;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1110^You are to escort the UNS 0917996, a science vessel. From a safe distance, it will be able to determine the function of the massive Audemedon construction. If there are Audemedon ships in the Ser system, make sure they don't prevent the UNS 0917996 from completing its analysis.]];
				};
				[3] = {
					title = [[Cruiser]];
					kind = [[object]];
					objectId = 2;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1152^Thanks in part to the Elejeetian Minister Jommo, the Elejeetian government is loaning us one of their cruisers, which you will be piloting for this mission. It's remarkably powerful for its size: its main weapon, the Onas pulse gun, has a range comparable to our standard concussive missiles, and its Neewo beam cannon can temporarily disable a target's control systems.]];
				};
				[4] = {
					title = [[Heavy Destroyer]];
					kind = [[object]];
					objectId = 3;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1130^We'll also be assigning two destroyers to help you escort the UNS 0917996 science vessel. These destroyers will be under the command of the UNS 0917996.When the UNS 0917996 has completed its analysis, we'll give you further instructions.]];
				};
			};
			starmap = {
				x = 104.000000;
				y = 98.000000;
			};
			par = {
				time = 210;
				kills = 42;
				ratio = 0.000000;
				float = 23;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[#+B2007The Salrilians, seething from their defeat in the Thasero System, call upon their most dreaded ally: the Audemedon Axis, a race of intelligent machines.#+10017Almost nothing is known about the Audemedons. Their technology is incomprehensible, and their motives obscure.#+Apparently at the beck and call of the Prophets, the Audemedons serve as Salril's elite guard. Incensed that you have defied the Oracular Net's predictions, the Salrilians have the Axis ready a deadly response.]];
			epilogue = [[]];
			songId = 5000;
			movie = nil;
		};
		[19] = {
			name = [[\i Chapter 17 \i...And It Feels So Good]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 0;
				};
				[2] = {
					type = [[cpu]];
					race = 700;
					name = [[The Audemedon Axis]];
					earningPower = 1.000000;
					netRaceFlags = 0;
				};
			};
			scoreString = {
				[0] = [[-Capture Lalande]];
				[1] = [[_-Beta]];
			};
			initialObjects = {
				[0] = {
					type = 266;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = 32767;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 267;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -32767;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 23;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 28260;
						y = 27129;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1030;
					builds = {
						[0] = 200;
						[1] = 300;
						[2] = 860;
						[3] = 500;
						[4] = 450;
						[5] = 800;
					};
					nameOverride = [[Lalande Alpha]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 23;
					owner = -1;
					initialDestination = -1;
					position = {
						x = -28260;
						y = -27129;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1031;
					builds = {
						[0] = 200;
						[1] = 300;
						[2] = 860;
						[3] = 500;
						[4] = 450;
						[5] = 800;
					};
					nameOverride = [[Lalande Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 104;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = 0;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Bunker Station]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 129;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 28520;
						y = 28522;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 151;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 28957;
						y = 27652;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 151;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 28167;
						y = 27126;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[8] = {
					type = 151;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 28866;
						y = 26603;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[9] = {
					type = 164;
					owner = 0;
					initialDestination = 2;
					position = {
						x = 29474;
						y = 27559;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[10] = {
					type = 164;
					owner = 0;
					initialDestination = 2;
					position = {
						x = 29213;
						y = 26343;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[11] = {
					type = 148;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -29218;
						y = -25044;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[12] = {
					type = 270;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 9391;
						y = -9043;
					};
					earning = 0.500000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Outpost 1]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[13] = {
					type = 270;
					owner = -1;
					initialDestination = -1;
					position = {
						x = -8000;
						y = 9043;
					};
					earning = 0.500000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Outpost 2]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 5;
							range = 6;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 2;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = false;
							value = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 3;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = false;
							value = 1;
						};
						[3] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 3;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute cash]];
							useObjectsOwner = false;
							value = 2560000;
							player = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 4780;
				};
				[1] = {
					type = [[owner]];
					subject = 2;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[Out base on Lelande Alpha was captured.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[2] = {
					type = [[owner]];
					subject = 3;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 21;
							text = [[You captured the base on Lelande Beta, and it is again in human hands.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
			};
			briefing = {
				[0] = {
					title = [[Lalande]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[The Lelande System was the human's latest and biggest colony. Hidden in a widely dispersed asteroid field, the humans hoped to escape the Cantharans' notice. Unfortunately, the colonists here have been overwhelmed by Audemedons.]];
				};
				[1] = {
					title = [[Heavy Destroyer]];
					kind = [[object]];
					objectId = 5;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[You will have the services of the base on Alpha, and you will be manning this heavy destroyer.^P1130^The base is capable of building even carriers.]];
				};
				[2] = {
					title = [[Cruiser]];
					kind = [[object]];
					objectId = 6;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1152^The Elejeetians have graciously donated three more of their cruisers to your cause. These cruisers are at your disposal.^P1165^The humans have, against our wishes, also volunteered two cruisers. Unfortunately, these cruisers are woefully underpowered and will be of little use to you.]];
				};
				[3] = {
					title = [[Bunker Station]];
					kind = [[object]];
					objectId = 4;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1105^Although not necessary to complete the mission, the stations in this system can generate resources for your ship building. The bunker station in the center generates as many resources as a planet.]];
				};
				[4] = {
					title = [[Outpost 1]];
					kind = [[object]];
					objectId = 12;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[There are two outposts in the Lelande System. Each generates half as many resources as a planet. An outpost is captured in the same manner as a bunker station: at least five EVATs from an assault transport must enter the station.^P1271^]];
				};
				[5] = {
					title = [[Lalande Beta]];
					kind = [[object]];
					objectId = 3;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[Your goal in this mission is to recapture the base on Lelande Beta. It is occupied by Audemedon forces.^P1149^The Audemedon ships greatly outmatch ours.^P1143^]];
				};
			};
			starmap = {
				x = 156.000000;
				y = 81.000000;
			};
			par = {
				time = 960;
				kills = 45;
				ratio = 0.000000;
				float = 30;
			};
			angle = 0;
			startTime = 240;
			isTraining = false;
			prologue = [[]];
			epilogue = [[]];
			songId = 5001;
			movie = nil;
		};
		[20] = {
			name = [[\i Chapter 18 \iBlood, Toil, Tears, and Sweat]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 900;
					name = [[The UNS Resistance]];
					earningPower = 1.000000;
					netRaceFlags = 172;
				};
				[2] = {
					type = [[cpu]];
					race = 700;
					name = [[The Audemedon Axis]];
					earningPower = 1.000000;
					netRaceFlags = 202;
				};
			};
			scoreString = {
				[0] = [[-Capture Proxima]];
				[1] = [[_-Alpha & Beta]];
			};
			initialObjects = {
				[0] = {
					type = 23;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 1390;
						y = -2696;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 300;
						[3] = 800;
					};
					nameOverride = [[Proxima Alpha]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 23;
					owner = -1;
					initialDestination = -1;
					position = {
						x = -9044;
						y = -17130;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1021;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 300;
						[3] = 800;
					};
					nameOverride = [[Proxima Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 166;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -2434;
						y = 3218;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 174;
					owner = 0;
					initialDestination = 0;
					position = {
						x = -1392;
						y = 3305;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[4] = {
					type = 174;
					owner = 0;
					initialDestination = 0;
					position = {
						x = -2086;
						y = 4348;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[5] = {
					type = 174;
					owner = 0;
					initialDestination = 0;
					position = {
						x = -2792;
						y = 5228;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[6] = {
					type = 174;
					owner = 0;
					initialDestination = 0;
					position = {
						x = -3737;
						y = 6184;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[7] = {
					type = 174;
					owner = 0;
					initialDestination = 0;
					position = {
						x = -4868;
						y = 7543;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[8] = {
					type = 177;
					owner = 1;
					initialDestination = 1;
					position = {
						x = -3391;
						y = -9043;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[9] = {
					type = 167;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 1826;
						y = -1652;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[10] = {
					type = 167;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 1478;
						y = -3391;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[11] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 869;
						y = -2260;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[12] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 1913;
						y = -2173;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[13] = {
					type = 17;
					owner = 1;
					initialDestination = 8;
					position = {
						x = 1044;
						y = -1304;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[14] = {
					type = 7;
					owner = 1;
					initialDestination = 12;
					position = {
						x = 0;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[15] = {
					type = 164;
					owner = 0;
					initialDestination = 10;
					position = {
						x = 1652;
						y = -2695;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[16] = {
					type = 164;
					owner = 0;
					initialDestination = 11;
					position = {
						x = 782;
						y = -2695;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[17] = {
					type = 149;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 1217;
						y = -1739;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[18] = {
					type = 149;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 1043;
						y = -1913;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[19] = {
					type = 165;
					owner = 0;
					initialDestination = 2;
					position = {
						x = -2782;
						y = 3739;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[20] = {
					type = 165;
					owner = 0;
					initialDestination = 19;
					position = {
						x = -3218;
						y = 4086;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[21] = {
					type = 165;
					owner = 0;
					initialDestination = 20;
					position = {
						x = -3217;
						y = 4565;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[22] = {
					type = 165;
					owner = 0;
					initialDestination = 21;
					position = {
						x = -2739;
						y = 4391;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[23] = {
					type = 165;
					owner = 0;
					initialDestination = 22;
					position = {
						x = -2478;
						y = 4173;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[24] = {
					type = 165;
					owner = 0;
					initialDestination = 23;
					position = {
						x = -2347;
						y = 3913;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[25] = {
					type = 142;
					owner = 1;
					initialDestination = 8;
					position = {
						x = 2521;
						y = -3478;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[26] = {
					type = 142;
					owner = 1;
					initialDestination = 8;
					position = {
						x = -2869;
						y = -7826;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[27] = {
					type = 167;
					owner = 0;
					initialDestination = 5;
					position = {
						x = -2086;
						y = 5913;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[28] = {
					type = 167;
					owner = 0;
					initialDestination = 5;
					position = {
						x = -3739;
						y = 5478;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[29] = {
					type = 166;
					owner = 0;
					initialDestination = 27;
					position = {
						x = -2260;
						y = 6695;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[30] = {
					type = 166;
					owner = 0;
					initialDestination = 28;
					position = {
						x = -4434;
						y = 5652;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[31] = {
					type = 148;
					owner = 1;
					initialDestination = 0;
					position = {
						x = -28869;
						y = -34782;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[32] = {
					type = 148;
					owner = 1;
					initialDestination = 0;
					position = {
						x = -26086;
						y = -34086;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[33] = {
					type = 148;
					owner = 1;
					initialDestination = 1;
					position = {
						x = -28173;
						y = -31304;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[34] = {
					type = 148;
					owner = 1;
					initialDestination = 1;
					position = {
						x = 0;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[counter]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = 0;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[owner]];
							useObjectsOwner = false;
							value = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[absolute cash]];
							useObjectsOwner = false;
							value = 2560000;
							player = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 2;
						id = 0;
						player = 0;
					};
				};
				[1] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 31;
							range = 3;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 28167;
				};
				[2] = {
					type = [[owner]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 22;
							text = [[You captured Proxima Centauri Beta.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
			};
			briefing = {
				[0] = {
					title = [[Proxima Centauri System]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[The humans have been amassing a force in Proxima Centauri, using the technological information we’ve been sending them. They’ve made some progress, but the Cantharans have invaded their colony on Centauri Alpha, where a surface battle has broken out. One of your objectives here will be to deliver reinforcements to the colonists fighting on the surface.]];
				};
				[1] = {
					title = [[Gunship]];
					kind = [[object]];
					objectId = 2;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1167^You will begin this mission in a human gunship. It represents a considerable improvement over their cruisers. Its magneto pulse gun fires much more quickly, and it is equipped with an auto-targetting laser turret.]];
				};
				[2] = {
					title = [[Transport]];
					kind = [[object]];
					objectId = 8;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[In spite of the immediate need for reinforcements on Alpha, your absolute first priority is to destroy this Audemedon transport, en route to Proxima Centauri Beta. Should it achieve landfall, you will quickly be overwhelmed by Audemedon ships.]];
				};
				[3] = {
					title = [[Carrier]];
					kind = [[object]];
					objectId = 24;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1168^We have rendezvoused with the human fleet which was dispatched to Lelande in hopes of preventing its invasion. The UNS Wounded Knee and the UNS Canada, colony ships the humans have converted to carriers, and two additional gunships are at your command.^P1166^]];
				};
				[4] = {
					title = [[Transport]];
					kind = [[object]];
					objectId = 3;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The fleet is escorting the five transports carrying the colonists from Lelande. The colonists will serve as reinforcements to the humans fighting on Centauri Alpha. To ensure victory in the surface battle, at least two of these transports must land safely on Alpha.]];
				};
				[5] = {
					title = [[Carrier]];
					kind = [[object]];
					objectId = 9;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[Also, two human carriers are fighting a losing battle over Proxima Centauri Alpha. The UNS Luna and the UNS France are seriously outmatched by Audemedon and Cantharan forces. If possible, try to prevent their destruction.]];
				};
				[6] = {
					title = [[Proxima Beta]];
					kind = [[object]];
					objectId = 1;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[Once you have gained control of Centauri Alpha, you will have instant access to its considerable store of resources. To complete the mission, build a transport and land it at the unoccupied base on Centauri Beta so the humans can begin to shore up defenses there.]];
				};
			};
			starmap = {
				x = 182.000000;
				y = 62.000000;
			};
			par = {
				time = 375;
				kills = 29;
				ratio = 0.000000;
				float = 34;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[]];
			epilogue = [[]];
			songId = 5002;
			movie = nil;
		};
		[21] = {
			name = [[\i Chapter 19 \iYou Should Have Seen the One that Got Away]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 900;
					name = [[The UNS Resistance]];
					earningPower = 1.000000;
					netRaceFlags = 26816;
				};
				[2] = {
					type = [[cpu]];
					race = 200;
					name = [[The Cantharan Order]];
					earningPower = 1.000000;
					netRaceFlags = 0;
				};
			};
			scoreString = {
				[0] = [[_-Capture Pictoris]];
				[1] = [[Beta, 1 & 2]];
				[2] = [[-Destroy hostile]];
				[3] = [[_-gateship]];
			};
			initialObjects = {
				[0] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 1913;
						y = 6434;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1022;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 300;
						[3] = 800;
					};
					nameOverride = [[Pictoris Alpha]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 111;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 3130;
						y = 6173;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1009;
					builds = {
						[0] = 100;
						[1] = 200;
					};
					nameOverride = [[Pictoris Alpha 1]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 114;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 1217;
						y = 9043;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Power Station BP1]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 111;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -8956;
						y = -8173;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1010;
					builds = {
						[0] = 100;
						[1] = 200;
					};
					nameOverride = [[Pictoris Beta 1]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 111;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -5739;
						y = -10955;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1011;
					builds = {
						[0] = 100;
						[1] = 250;
					};
					nameOverride = [[Pictoris Beta 2]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 23;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -7565;
						y = -9391;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1023;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 300;
						[3] = 800;
					};
					nameOverride = [[Pictoris Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 166;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 2347;
						y = 6260;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 223;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -8608;
						y = -9217;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[8] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -7391;
						y = -10173;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[9] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -9738;
						y = -8348;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[10] = {
					type = 167;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 14347;
						y = 17825;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[11] = {
					type = 167;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 1913;
						y = 7391;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[destruction]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 1;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 7;
				};
				[1] = {
					type = [[owner]];
					subject = 3;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 2;
							range = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 4;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
				[2] = {
					type = [[owner]];
					subject = 4;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 3;
							range = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 5;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
				[3] = {
					type = [[owner]];
					subject = 5;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 23;
							text = [[You succeeded in capturing the Beta Pictoris System, and you forced the enemy Gate Ship to withdraw.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
				[4] = {
					type = [[owner]];
					subject = 3;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 2;
							range = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 1;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[5] = {
					type = [[owner]];
					subject = 4;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 2;
							range = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 1;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[6] = {
					type = [[owner]];
					subject = 0;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[You allowed the Cantharans to capture the human base on Beta Pictoris Alpha.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
			};
			briefing = {
				[0] = {
					title = [[Beta Pictoris]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[The human’s first extrasolar colony, the only surviving colony other than Proxima Centauri, is in danger of being decimated. The humans in the system destroyed their own jumpgate to avoid detection and the fate that befell Earth, but the Cantharan Order has found them and has a foothold in the system.]];
				};
				[1] = {
					title = [[Gate Ship]];
					kind = [[object]];
					objectId = 7;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[In their zeal to eliminate the remaining human threat, however, the Cantharans have made what could be a critical mistake: they've brought their only gateship, a massive vessel, into the Beta Pictoris system. Its destruction would be the single greatest blow to their military force we could deliver, possibly immobilizing their entire armada, and ensuring victory for you.]];
				};
				[2] = {
					title = [[Pictoris Alpha]];
					kind = [[object]];
					objectId = 0;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The human colony is here on Alpha. Their military base can produce fighters, cruisers, gunships, and transports. Loss of this base will force the us to abort the mission.^P1167^]];
				};
				[3] = {
					title = [[Pictoris Alpha 1]];
					kind = [[object]];
					objectId = 1;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1166^Alpha One is Pictoris Alpha’s moon, and there’s a small base here capable of producing fighters and cruisers.^P1165^]];
				};
				[4] = {
					title = [[Power Station BP1]];
					kind = [[object]];
					objectId = 2;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1115^The humans also have a power station, BP-1, which will generate resources for you. Protect this station. If the Cantharans destroy this power station, you won’t be able to build as many ships.]];
				};
				[5] = {
					title = [[Pictoris Beta]];
					kind = [[object]];
					objectId = 5;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The Cantharans have established themselves on Pictoris Beta and its two moons. To complete this mission, you must occupy all three bases.]];
				};
				[6] = {
					title = [[Gate Ship]];
					kind = [[object]];
					objectId = 7;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The Cantharan gateship, the Hair-mouth of Doz, will be an extremely difficult target to destroy. Because of its incredible power capacity, its shields may be nearly impenetrable. It also appears to have some exotic weaponry, including a magnetic field that may be able to knock out the electronic systems of nearby ships. Nonetheless, you must destroy this ship to complete this mission.]];
				};
			};
			starmap = {
				x = 241.000000;
				y = 53.000000;
			};
			par = {
				time = 780;
				kills = 50;
				ratio = 0.000000;
				float = 35;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[]];
			epilogue = [[]];
			songId = 5003;
			movie = nil;
		};
		[22] = {
			name = [[\i Chapter 20 \iThe Mothership Connection]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 3;
				};
				[2] = {
					type = [[cpu]];
					race = 200;
					name = [[The Cantharan Order]];
					earningPower = 1.000000;
					netRaceFlags = 181;
				};
			};
			scoreString = {
				[0] = [[-Destroy hostile]];
				[1] = [[_-gateship]];
			};
			initialObjects = {
				[0] = {
					type = 181;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -87;
						y = 2520;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 23;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 9739;
						y = -3043;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1036;
					builds = {
					};
					nameOverride = [[Earth]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 180;
					owner = 1;
					initialDestination = 1;
					position = {
						x = 8347;
						y = -1304;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = true;
						hex = 15;
					};
				};
				[3] = {
					type = 196;
					owner = -1;
					initialDestination = -1;
					position = {
						x = -3042;
						y = 6086;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 10523;
						y = -10522;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 9739;
						y = -11478;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 10695;
						y = -11651;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 10000;
						y = -10609;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[8] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 11391;
						y = -10348;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[9] = {
					type = 45;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 11305;
						y = -11477;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[10] = {
					type = 62;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 11304;
						y = -10956;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[11] = {
					type = 62;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 10174;
						y = -11304;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[12] = {
					type = 178;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 8088;
						y = 6609;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[13] = {
					type = 178;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 8218;
						y = 6577;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[14] = {
					type = 178;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 7980;
						y = 6619;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[15] = {
					type = 178;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 8034;
						y = 6739;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[16] = {
					type = 178;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 8164;
						y = 6685;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[17] = {
					type = 178;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 8023;
						y = 6539;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[18] = {
					type = 178;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 8147;
						y = 6533;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[19] = {
					type = 178;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 8299;
						y = 6734;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[20] = {
					type = 178;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 7882;
						y = 6550;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[21] = {
					type = 178;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 8251;
						y = 6484;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[22] = {
					type = 167;
					owner = 0;
					initialDestination = 16;
					position = {
						x = 8056;
						y = 6484;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[23] = {
					type = 167;
					owner = 0;
					initialDestination = 17;
					position = {
						x = 8348;
						y = 6647;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[24] = {
					type = 167;
					owner = 0;
					initialDestination = 18;
					position = {
						x = 7925;
						y = 6717;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[25] = {
					type = 167;
					owner = 0;
					initialDestination = 19;
					position = {
						x = 8196;
						y = 6788;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[26] = {
					type = 164;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 8018;
						y = 6897;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[27] = {
					type = 166;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 8267;
						y = 6875;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[28] = {
					type = 166;
					owner = 0;
					initialDestination = 23;
					position = {
						x = 7925;
						y = 6837;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[29] = {
					type = 166;
					owner = 0;
					initialDestination = 25;
					position = {
						x = 8120;
						y = 6782;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[30] = {
					type = 165;
					owner = 0;
					initialDestination = 13;
					position = {
						x = 8142;
						y = 6886;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[31] = {
					type = 164;
					owner = 0;
					initialDestination = 28;
					position = {
						x = 8045;
						y = 6853;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[32] = {
					type = 166;
					owner = 0;
					initialDestination = 14;
					position = {
						x = 8403;
						y = 6864;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[half health]];
					subject = 2;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5170;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[1] = {
					type = [[no ships left]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 360;
							id = 5171;
							page = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 360;
							alterType = [[hidden]];
							minimum = 12;
							range = 20;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					player = 1;
				};
				[2] = {
					type = [[owner]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 0;
							text = [[Earth is free! The Cantharans have been defeated!]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
			};
			briefing = {
				[0] = {
					title = [[Sol]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[The Cantharan gateship has withdrawn to Earth. It has activated a jumpgate disruption device, apparently a derivative of the Audemedon device you destroyed in the Ser system. Still, we believe we can get a single ship through a small jumpstream to intercept the gateship. This will be your last chance to destroy the gateship and to bring freedom to your home world.]];
				};
				[1] = {
					title = [[Sol]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P1062^We have two surprises for the Cantharan gateship. One is this enhanced heavy cruiser, the ship you’ll be using to engage the gateship. The Elejeetian Minister of Technology was most grateful for your services, and supplied us with some modifications to our standard heavy cruiser.]];
				};
				[2] = {
					title = [[Modified Cruiser]];
					kind = [[object]];
					objectId = 0;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[The heavy cruiser is now armed with an Onas pulse gun, an energy weapon with very little drain. The cruiser has also been made faster and more nimble. Even so, it is by itself no match for the gateship.]];
				};
				[3] = {
					title = [[Sol]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[Therefore, we have a second surprise: to destroy the gateship, we’ll be pushing a series of large, unstable asteroids into the Sol system through small jumpstreams from the Fergason Belt. Of course, a collision with one of these unstable asteroids would annihilate your heavy cruiser, but your task is to alter the course of the asteroids so that they collide with the gateship.]];
				};
				[4] = {
					title = [[Gate Ship]];
					kind = [[object]];
					objectId = 2;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[We doubt that the gateship is capable of forming another jumpgate in its damaged state. Some of its weapons may also be inoperable. We estimate, though, that it will take two or more collisions with asteroids to destroy the gateship.]];
				};
				[5] = {
					title = [[Sol]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[While you’re engaging the gateship, the remaining human carriers will be launching a major assault lightyears away in the Upsilon Andromeda system. Although the humans are expecting heavy losses, this assault is merely intended to draw the Cantharan fleet away from Sol and the Cantharan gateship. They are depending on you to deliver them a liberated Earth. You must not fail.]];
				};
			};
			starmap = {
				x = 284.000000;
				y = 43.000000;
			};
			par = {
				time = 600;
				kills = 50;
				ratio = 0.000000;
				float = 0;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[]];
			epilogue = [[#+B2005#+10031The Earth you left over one hundred and fifty years ago is greatly changed. The people you knew are long since dead, and the place you called home no longer exists.#+But neither time nor the Cantharans could destroy what you fought to salvage: humanity. A mercy you eventually found outside of mankind.#+You will be welcomed as a hero, to be sure. The individuals will be honored, and the crew of the Ares may even become legends.#+But the greatest victories this day do not belong to men. They belong to humanity. They belong to our unending faith in our place in the universe. And now humanity, with due arrogance, will claim that place.]];
			songId = 5004;
			movie = nil;
		};
		[23] = {
			name = [[\i Between a Rock and a Rock \i ]];
			netRaceFlags = 483;
			playerNum = 2;
			players = {
				[1] = {
					type = [[net]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 483;
				};
				[2] = {
					type = [[net]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 483;
				};
			};
			scoreString = {
			};
			initialObjects = {
				[0] = {
					type = 228;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = 32767;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 229;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -32767;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 28260;
						y = 27129;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1025;
					builds = {
						[0] = 200;
						[1] = 300;
						[2] = 860;
						[3] = 500;
						[4] = 450;
						[5] = 800;
					};
					nameOverride = [[Proteus Alpha]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 23;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -28260;
						y = -27129;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1026;
					builds = {
						[0] = 200;
						[1] = 300;
						[2] = 860;
						[3] = 500;
						[4] = 450;
						[5] = 800;
					};
					nameOverride = [[Proteus Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 104;
					owner = -1;
					initialDestination = -1;
					position = {
						x = -6261;
						y = 22261;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Bunker Station 1]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 104;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 6621;
						y = -22621;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Bunker Station 2]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 129;
					owner = 0;
					initialDestination = 2;
					position = {
						x = 28520;
						y = 27129;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 129;
					owner = 1;
					initialDestination = 3;
					position = {
						x = -21131;
						y = -18608;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 6;
							range = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 4780;
				};
				[1] = {
					type = [[owner]];
					subject = 2;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[Player 2 captured Palyos Alpha.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[2] = {
					type = [[owner]];
					subject = 3;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 0;
							text = [[Player 1 captured Palyos Beta.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
			};
			briefing = {
				[0] = {
					title = [[The Gaitori]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10016^Welcome to your first combat mission, humans.This system is under the control of the Gaitori, a race of ruthless mercenaries and minions of our common enemy, the Cantharan Order.]];
				};
			};
			starmap = {
				x = 200.000000;
				y = 200.000000;
			};
			par = {
				time = -1;
				kills = 0;
				ratio = 0.000000;
				float = 0;
			};
			angle = 0;
			startTime = 240;
			isTraining = false;
			prologue = [[Basic head to head: capture the enemy planet. An asteroid belt, two planets, and two bunker stations. Asteroids mask ships at long range.]];
			epilogue = [[]];
			songId = 5002;
			movie = nil;
		};
		[24] = {
			name = [[\i **DEV-23** \i ]];
			netRaceFlags = 0;
			playerNum = 3;
			players = {
				[1] = {
					type = [[null]];
					race = -1;
					name = [[Untitled]];
					earningPower = 1.000000;
					netRaceFlags = 0;
				};
				[2] = {
					type = [[null]];
					race = -1;
					name = [[Untitled]];
					earningPower = 1.000000;
					netRaceFlags = 0;
				};
				[3] = {
					type = [[cpu]];
					race = 700;
					name = [[The Audemedon Axis]];
					earningPower = 2.000000;
					netRaceFlags = 0;
				};
			};
			scoreString = {
			};
			initialObjects = {
				[0] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 9000;
						y = 0;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1027;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 300;
						[3] = 500;
						[4] = 450;
						[5] = 800;
					};
					nameOverride = [[Proteus Alpha]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 23;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -9000;
						y = 0;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1028;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 300;
						[3] = 500;
						[4] = 450;
						[5] = 800;
					};
					nameOverride = [[Proteus Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 23;
					owner = 2;
					initialDestination = -1;
					position = {
						x = 0;
						y = 9000;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1029;
					builds = {
						[0] = 100;
						[1] = 200;
						[2] = 300;
						[3] = 400;
						[4] = 450;
					};
					nameOverride = [[Proteus Gamma]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 129;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 9000;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 129;
					owner = 1;
					initialDestination = 1;
					position = {
						x = -9000;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 129;
					owner = 2;
					initialDestination = 2;
					position = {
						x = 0;
						y = 9000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
			};
			briefing = {
				[0] = {
					title = [[The Gaitori]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10016^Welcome to your first combat mission, humans.This system is under the control of the Gaitori, a race of ruthless mercenaries and minions of our common enemy, the Cantharan Order.]];
				};
			};
			starmap = {
				x = 100.000000;
				y = 100.000000;
			};
			par = {
				time = -1;
				kills = 0;
				ratio = 0.000000;
				float = 0;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[Basic head to head: capture the enemy planet. An asteroid belt, two planets, and two bunker stations. Asteroids mask ships at long range.]];
			epilogue = [[]];
			songId = 5002;
			movie = nil;
		};
		[25] = {
			name = [[\i Space Race, the Musical! \i ]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 0;
				};
				[2] = {
					type = [[cpu]];
					race = 300;
					name = [[The Gaitori Union]];
					earningPower = 1.000000;
					netRaceFlags = 0;
				};
			};
			scoreString = {
			};
			initialObjects = {
				[0] = {
					type = 129;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 1565;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 0;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 782;
						y = 1130;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 0;
					owner = 0;
					initialDestination = 0;
					position = {
						x = -869;
						y = 1304;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 0;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 521;
						y = 1739;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 0;
					owner = 0;
					initialDestination = 0;
					position = {
						x = -434;
						y = 1782;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 47;
					owner = 0;
					initialDestination = 0;
					position = {
						x = -260;
						y = 1239;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 47;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 217;
						y = 1086;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 19;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 239;
						y = 1543;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[8] = {
					type = 19;
					owner = 0;
					initialDestination = 0;
					position = {
						x = -260;
						y = 1565;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[9] = {
					type = 19;
					owner = 0;
					initialDestination = 0;
					position = {
						x = -43;
						y = 1369;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[10] = {
					type = 61;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 173;
						y = 1934;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[11] = {
					type = 61;
					owner = 0;
					initialDestination = 10;
					position = {
						x = 195;
						y = 2239;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[12] = {
					type = 61;
					owner = 0;
					initialDestination = 11;
					position = {
						x = 239;
						y = 2478;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[13] = {
					type = 61;
					owner = 0;
					initialDestination = 12;
					position = {
						x = 326;
						y = 2913;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[14] = {
					type = 61;
					owner = 0;
					initialDestination = 13;
					position = {
						x = 391;
						y = 3368;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[15] = {
					type = 13;
					owner = 0;
					initialDestination = 5;
					position = {
						x = 804;
						y = 1652;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[16] = {
					type = 13;
					owner = 0;
					initialDestination = 15;
					position = {
						x = 1065;
						y = 1782;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[17] = {
					type = 13;
					owner = 0;
					initialDestination = 16;
					position = {
						x = 1304;
						y = 2021;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[18] = {
					type = 87;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -2759;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[19] = {
					type = 87;
					owner = 1;
					initialDestination = 18;
					position = {
						x = -457;
						y = -2716;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[20] = {
					type = 87;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 738;
						y = -2564;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[21] = {
					type = 87;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -933;
						y = -2347;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[22] = {
					type = 87;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 304;
						y = -2130;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[23] = {
					type = 37;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -1282;
						y = -2477;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[24] = {
					type = 37;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 1478;
						y = -2434;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[25] = {
					type = 37;
					owner = 1;
					initialDestination = 18;
					position = {
						x = -1890;
						y = -2477;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[26] = {
					type = 37;
					owner = 1;
					initialDestination = 18;
					position = {
						x = 1129;
						y = -2804;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[27] = {
					type = 37;
					owner = 1;
					initialDestination = 18;
					position = {
						x = -977;
						y = -2977;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[28] = {
					type = 37;
					owner = 1;
					initialDestination = 18;
					position = {
						x = -173;
						y = -4194;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[29] = {
					type = 64;
					owner = 1;
					initialDestination = 18;
					position = {
						x = 413;
						y = -3977;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[30] = {
					type = 64;
					owner = 1;
					initialDestination = 18;
					position = {
						x = -1086;
						y = -4478;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[31] = {
					type = 64;
					owner = 1;
					initialDestination = 19;
					position = {
						x = 1063;
						y = -4411;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[32] = {
					type = 64;
					owner = 1;
					initialDestination = 31;
					position = {
						x = 630;
						y = -4782;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[33] = {
					type = 64;
					owner = 1;
					initialDestination = 32;
					position = {
						x = 195;
						y = -4978;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[34] = {
					type = 64;
					owner = 1;
					initialDestination = 33;
					position = {
						x = -174;
						y = -5108;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[35] = {
					type = 64;
					owner = 1;
					initialDestination = 34;
					position = {
						x = -696;
						y = -5238;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[36] = {
					type = 64;
					owner = 1;
					initialDestination = 35;
					position = {
						x = -1391;
						y = -5260;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[37] = {
					type = 37;
					owner = 1;
					initialDestination = 36;
					position = {
						x = -1956;
						y = -4826;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[38] = {
					type = 64;
					owner = 1;
					initialDestination = 36;
					position = {
						x = -2130;
						y = -5065;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[39] = {
					type = 64;
					owner = 1;
					initialDestination = 36;
					position = {
						x = -2152;
						y = -4108;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
			};
			conditions = {
			};
			briefing = {
				[0] = {
					title = [[The Gaitori]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10016^Welcome to your first combat mission, humans.This system is under the control of the Gaitori, a race of ruthless mercenaries and minions of our common enemy, the Cantharan Order.]];
				};
			};
			starmap = {
				x = -1.000000;
				y = -1.000000;
			};
			par = {
				time = 1;
				kills = 0;
				ratio = 1.000000;
				float = 0;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[]];
			epilogue = [[]];
			songId = 5003;
			movie = nil;
		};
		[26] = {
			name = [[\i Scratching Post \i ]];
			netRaceFlags = 483;
			playerNum = 2;
			players = {
				[1] = {
					type = [[net]];
					race = 100;
					name = [[The UNS Resistance]];
					earningPower = 1.000000;
					netRaceFlags = 483;
				};
				[2] = {
					type = [[net]];
					race = 100;
					name = [[The Cantharan Order]];
					earningPower = 1.000000;
					netRaceFlags = 483;
				};
			};
			scoreString = {
			};
			initialObjects = {
				[0] = {
					type = 266;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = 32767;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 267;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -32767;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 16384;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1032;
					builds = {
						[0] = 200;
						[1] = 300;
						[2] = 860;
						[3] = 500;
						[4] = 450;
						[5] = 800;
					};
					nameOverride = [[Lalande Alpha]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 23;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -16384;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1033;
					builds = {
						[0] = 200;
						[1] = 300;
						[2] = 860;
						[3] = 500;
						[4] = 450;
						[5] = 800;
					};
					nameOverride = [[Lalande Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 270;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = 9000;
					};
					earning = 0.250000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Outpost 1]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 270;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -9000;
					};
					earning = 0.250000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Outpost 2]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 270;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 9000;
						y = 0;
					};
					earning = 0.250000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Outpost 3]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 270;
					owner = -1;
					initialDestination = -1;
					position = {
						x = -9000;
						y = 0;
					};
					earning = 0.250000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Outpost 4]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[8] = {
					type = 104;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = 0;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Bunker Station]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[9] = {
					type = 129;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 16380;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[10] = {
					type = 129;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -16380;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[time]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 9;
							range = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 4780;
				};
				[1] = {
					type = [[owner]];
					subject = 2;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[Player 2 captured Lelande Beta.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[2] = {
					type = [[owner]];
					subject = 3;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 0;
							text = [[Player 1 Captured Lelande Alpha]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
			};
			briefing = {
				[0] = {
					title = [[The Gaitori]];
					kind = [[freestanding]];
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10016^Welcome to your first combat mission, humans.This system is under the control of the Gaitori, a race of ruthless mercenaries and minions of our common enemy, the Cantharan Order.]];
				};
			};
			starmap = {
				x = 100.000000;
				y = 100.000000;
			};
			par = {
				time = -1;
				kills = 0;
				ratio = 0.000000;
				float = 0;
			};
			angle = 0;
			startTime = 240;
			isTraining = false;
			prologue = [[Dispersed asteroid field, two planets, one bunker station, four outposts. Outposts earn 1/2 as much as planets & stations. (PPC recommended)]];
			epilogue = [[]];
			songId = 5000;
			movie = nil;
		};
		[27] = {
			name = [[\i Capture the Flagpod \i ]];
			netRaceFlags = 512;
			playerNum = 2;
			players = {
				[1] = {
					type = [[net]];
					race = 1100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 0.000000;
					netRaceFlags = 512;
				};
				[2] = {
					type = [[net]];
					race = 1100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 0.000000;
					netRaceFlags = 512;
				};
			};
			scoreString = {
			};
			initialObjects = {
				[0] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 8000;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Retak Alpha]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 23;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -8000;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Retak Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 276;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 8000;
						y = 8000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 278;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -8000;
						y = -8000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 274;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 8000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 275;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -8000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 272;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 273;
						y = 8478;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 272;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -957;
						y = 8826;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[8] = {
					type = 272;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -131;
						y = 8696;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[9] = {
					type = 272;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 1434;
						y = 8348;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[10] = {
					type = 272;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -1000;
						y = 7261;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[11] = {
					type = 272;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -610;
						y = 8717;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[12] = {
					type = 272;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 1608;
						y = 7566;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[13] = {
					type = 272;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 391;
						y = 7044;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[14] = {
					type = 273;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 783;
						y = -6870;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[15] = {
					type = 273;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 1260;
						y = -7476;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[16] = {
					type = 273;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -174;
						y = -7477;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[17] = {
					type = 273;
					owner = 1;
					initialDestination = -1;
					position = {
						x = -783;
						y = -5477;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[18] = {
					type = 273;
					owner = 1;
					initialDestination = 1;
					position = {
						x = 695;
						y = -6432;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[19] = {
					type = 273;
					owner = 1;
					initialDestination = 1;
					position = {
						x = -2;
						y = -6695;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[20] = {
					type = 273;
					owner = 1;
					initialDestination = 1;
					position = {
						x = -2174;
						y = -6520;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[21] = {
					type = 273;
					owner = 1;
					initialDestination = 1;
					position = {
						x = -783;
						y = -5999;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[proximity]];
					subject = 4;
					direct = 1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[Player 2 captured the flagpod!]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[1] = {
					type = [[proximity]];
					subject = 5;
					direct = 0;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 0;
							text = [[Player 1 captured the flagpod!]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
			};
			briefing = {
			};
			starmap = {
				x = -1.000000;
				y = -1.000000;
			};
			par = {
				time = -1;
				kills = 0;
				ratio = 0.000000;
				float = 0;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[Capture opponent's flag by flying over it & ordering it back to your planet. Ships transported to opponent's "jail" moor instead of dying. Shoot moor to free your ships. No warping.]];
			epilogue = [[]];
			songId = 5001;
			movie = nil;
		};
		[28] = {
			name = [[\i Spaze Warz \i ]];
			netRaceFlags = 512;
			playerNum = 2;
			players = {
				[1] = {
					type = [[net]];
					race = 1100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 0.000000;
					netRaceFlags = 512;
				};
				[2] = {
					type = [[net]];
					race = 1100;
					name = [[The Cantharan Order]];
					earningPower = 0.000000;
					netRaceFlags = 512;
				};
			};
			scoreString = {
			};
			initialObjects = {
				[0] = {
					type = 284;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -2956;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 284;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 2955;
						y = 87;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 93;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -700;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 93;
					owner = -1;
					initialDestination = -1;
					position = {
						x = -700;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 93;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 700;
						y = 0;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[destruction]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[change score]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							score = 0;
							amount = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 360;
							alterType = [[hidden]];
							minimum = 0;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = false;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 0;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
				[1] = {
					type = [[destruction]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[change score]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							score = 0;
							amount = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 360;
							alterType = [[hidden]];
							minimum = 1;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 1;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
				[2] = {
					type = [[counter greater]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[Player 2 wins!]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 3;
						id = 0;
						player = 0;
					};
				};
				[3] = {
					type = [[counter greater]];
					subject = -1;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 0;
							text = [[Player 1 wins!]];
						};
					};
					flags = {
						trueOnlyOnce = false;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					counter = {
						amount = 3;
						id = 0;
						player = 1;
					};
				};
			};
			briefing = {
			};
			starmap = {
				x = -1.000000;
				y = -1.000000;
			};
			par = {
				time = -1;
				kills = 0;
				ratio = 0.000000;
				float = 0;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[Two dinky ships, one purpose: kill the other guy three times.]];
			epilogue = [[]];
			songId = 5003;
			movie = nil;
		};
		[29] = {
			name = [[\i Location, Location, Location \i ]];
			netRaceFlags = 98;
			playerNum = 2;
			players = {
				[1] = {
					type = [[net]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 1.000000;
					netRaceFlags = 98;
				};
				[2] = {
					type = [[net]];
					race = 100;
					name = [[Untitled]];
					earningPower = 1.000000;
					netRaceFlags = 98;
				};
			};
			scoreString = {
			};
			initialObjects = {
				[0] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 10000;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
						[0] = 200;
						[1] = 300;
						[2] = 860;
						[3] = 500;
						[4] = 450;
						[5] = 800;
					};
					nameOverride = [[Xamer Alpha]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 23;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -10000;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
						[0] = 200;
						[1] = 300;
						[2] = 860;
						[3] = 500;
						[4] = 450;
						[5] = 800;
					};
					nameOverride = [[Xamer Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 45;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 256;
						y = 10000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 45;
					owner = 0;
					initialDestination = 0;
					position = {
						x = -256;
						y = 10000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 45;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 0;
						y = 10256;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 45;
					owner = 1;
					initialDestination = 1;
					position = {
						x = -256;
						y = -10000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 45;
					owner = 1;
					initialDestination = 1;
					position = {
						x = 256;
						y = -10000;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 45;
					owner = 1;
					initialDestination = 1;
					position = {
						x = 0;
						y = -10256;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[8] = {
					type = 270;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = 0;
					};
					earning = 0.250000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Bunker Station]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[9] = {
					type = 270;
					owner = -1;
					initialDestination = -1;
					position = {
						x = -700;
						y = 0;
					};
					earning = 0.250000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Outpost C1]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[10] = {
					type = 270;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 700;
						y = 0;
					};
					earning = 0.250000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Outpost C2]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[11] = {
					type = 270;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -700;
					};
					earning = 0.250000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Outpost C3]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[12] = {
					type = 270;
					owner = -1;
					initialDestination = 0;
					position = {
						x = 0;
						y = 700;
					};
					earning = 0.250000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Outpost C4]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[13] = {
					type = 93;
					owner = -1;
					initialDestination = -1;
					position = {
						x = -700;
						y = -700;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[14] = {
					type = 93;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 700;
						y = -700;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[15] = {
					type = 93;
					owner = -1;
					initialDestination = -1;
					position = {
						x = -700;
						y = 700;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[16] = {
					type = 93;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 700;
						y = 700;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[17] = {
					type = 270;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = 5000;
					};
					earning = 0.250000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
						[0] = 850;
					};
					nameOverride = [[Outpost Alpha]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[18] = {
					type = 270;
					owner = -1;
					initialDestination = -1;
					position = {
						x = 0;
						y = -5000;
					};
					earning = 0.250000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
						[0] = 850;
					};
					nameOverride = [[Outpost Beta]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[owner]];
					subject = 8;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 0;
							nextLevel = 0;
							text = [[Player 1 captured the center base.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 0;
				};
				[1] = {
					type = [[owner]];
					subject = 8;
					direct = -1;
					actions = {
						[0] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							player = 1;
							nextLevel = 0;
							text = [[Player 2 captured the center base.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					value = 1;
				};
			};
			briefing = {
			};
			starmap = {
				x = -1.000000;
				y = -1.000000;
			};
			par = {
				time = -1;
				kills = 0;
				ratio = 0.000000;
				float = 0;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[Capture the center base first. It's surrounded by flak drones and outposts. Engineering pods can only be built at peripheral outposts.]];
			epilogue = [[]];
			songId = 5004;
			movie = nil;
		};
		[30] = {
			name = [[\i Training \iMoons for Goons]];
			netRaceFlags = 0;
			playerNum = 2;
			players = {
				[1] = {
					type = [[single]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 0.500000;
					netRaceFlags = 0;
				};
				[2] = {
					type = [[cpu]];
					race = 100;
					name = [[The Human/Ishiman Cooperative]];
					earningPower = 0.000000;
					netRaceFlags = 1536;
				};
			};
			scoreString = {
			};
			initialObjects = {
				[0] = {
					type = 23;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = -85;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Omisha Station]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[1] = {
					type = 111;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -86;
						y = -6260;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 591;
					builds = {
					};
					nameOverride = [[Command Buoy A]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[2] = {
					type = 111;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = -9478;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 591;
					builds = {
					};
					nameOverride = [[Command Buoy B]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[3] = {
					type = 188;
					owner = 0;
					initialDestination = 1;
					position = {
						x = 0;
						y = -4869;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[4] = {
					type = 203;
					owner = 0;
					initialDestination = 0;
					position = {
						x = 87;
						y = 109;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = true;
						staticDestination = false;
						hex = 15;
					};
				};
				[5] = {
					type = 111;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -9739;
						y = -86;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 1024;
					builds = {
						[0] = 1802;
					};
					nameOverride = [[Build Moon]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[6] = {
					type = 111;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 7478;
						y = 0;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 591;
					builds = {
					};
					nameOverride = [[Combat Buoy A]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[7] = {
					type = 188;
					owner = 1;
					initialDestination = 6;
					position = {
						x = 7826;
						y = -2260;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[8] = {
					type = 111;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 13391;
						y = 173;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 591;
					builds = {
					};
					nameOverride = [[Combat Buoy B]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[9] = {
					type = 188;
					owner = 1;
					initialDestination = 8;
					position = {
						x = 13739;
						y = 2956;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[10] = {
					type = 188;
					owner = 1;
					initialDestination = 8;
					position = {
						x = 13217;
						y = -1739;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[11] = {
					type = 111;
					owner = 1;
					initialDestination = -1;
					position = {
						x = 19130;
						y = 173;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 591;
					builds = {
					};
					nameOverride = [[Combat Buoy C]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[12] = {
					type = 188;
					owner = 1;
					initialDestination = 11;
					position = {
						x = 18782;
						y = -1043;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[13] = {
					type = 188;
					owner = 1;
					initialDestination = 11;
					position = {
						x = 18608;
						y = 1565;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[14] = {
					type = 188;
					owner = 1;
					initialDestination = 11;
					position = {
						x = 18782;
						y = 173;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = true;
						hex = 15;
					};
				};
				[15] = {
					type = 111;
					owner = 0;
					initialDestination = -1;
					position = {
						x = 0;
						y = 9391;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = 591;
					builds = {
					};
					nameOverride = [[Extra Ships]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[16] = {
					type = 203;
					owner = 0;
					initialDestination = 15;
					position = {
						x = 1739;
						y = 10086;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[17] = {
					type = 203;
					owner = 0;
					initialDestination = 15;
					position = {
						x = -2608;
						y = 10086;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[18] = {
					type = 137;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -17391;
						y = 16695;
					};
					earning = 1.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = [[Omisha Jump Gate]];
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[19] = {
					type = 141;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -16956;
						y = 16521;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[20] = {
					type = 141;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -17358;
						y = 17119;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[21] = {
					type = 141;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -17836;
						y = 16532;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = false;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
				[22] = {
					type = 117;
					owner = 0;
					initialDestination = -1;
					position = {
						x = -17401;
						y = 16716;
					};
					earning = 0.000000;
					distanceRange = 0;
					rotation = {
						minimum = 0;
						range = 0;
					};
					spriteIdOverride = -1;
					builds = {
					};
					nameOverride = nil;
					attributes = {
						fixedRace = false;
						initiallyHidden = true;
						isPlayerShip = false;
						staticDestination = false;
						hex = 15;
					};
				};
			};
			conditions = {
				[0] = {
					type = [[proximity]];
					subject = -2;
					direct = 1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 13;
							range = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 14;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 15;
							range = 2;
						};
						[3] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5500;
							page = 1;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 0;
							range = 0;
						};
						[5] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 1;
							range = 0;
						};
						[6] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 11;
							range = 0;
						};
						[7] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 12;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[1] = {
					type = [[proximity]];
					subject = -2;
					direct = 2;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 13;
							range = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 14;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 15;
							range = 2;
						};
						[3] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5500;
							page = 1;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 0;
							range = 0;
						};
						[5] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 1;
							range = 0;
						};
						[6] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 11;
							range = 0;
						};
						[7] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 12;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[2] = {
					type = [[is auxiliary]];
					subject = 3;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5501;
							page = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 8;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 4;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[3] = {
					type = [[is auxiliary]];
					subject = 3;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5502;
							page = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 9;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 5;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[4] = {
					type = [[is target]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5503;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[5] = {
					type = [[is target]];
					subject = 2;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5503;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[6] = {
					type = [[proximity]];
					subject = 3;
					direct = 1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5504;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[7] = {
					type = [[proximity]];
					subject = 3;
					direct = 2;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5504;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[8] = {
					type = [[is target]];
					subject = 1;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5505;
							page = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 10;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[9] = {
					type = [[is target]];
					subject = 2;
					direct = -1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 10;
							range = 0;
						};
						[1] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5505;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[10] = {
					type = [[is auxiliary]];
					subject = 3;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5503;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[11] = {
					type = [[proximity]];
					subject = 3;
					direct = 1;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 3;
							range = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 9;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 12;
							range = 0;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 7;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[12] = {
					type = [[proximity]];
					subject = 3;
					direct = 2;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 2;
							range = 0;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 8;
							range = 0;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 6;
							range = 0;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 11;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[13] = {
					type = [[proximity]];
					subject = -2;
					direct = 5;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 0;
							range = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 2;
							range = 10;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 15;
							range = 2;
						};
						[3] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5506;
							page = 1;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 14;
							range = 0;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[14] = {
					type = [[is auxiliary]];
					subject = 5;
					direct = -1;
					actions = {
						[0] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5507;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = true;
						hasBeenTrue = false;
						hex = 7;
					};
				};
				[15] = {
					type = [[proximity]];
					subject = -2;
					direct = 6;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 0;
							range = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 2;
							range = 10;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 13;
							range = 0;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 14;
							range = 0;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 16;
							range = 1;
						};
						[5] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5509;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[16] = {
					type = [[proximity]];
					subject = -2;
					direct = 15;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 0;
							range = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 2;
							range = 10;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 13;
							range = 0;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 14;
							range = 0;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 15;
							range = 0;
						};
						[5] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 17;
							range = 0;
						};
						[6] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5510;
							page = 1;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[17] = {
					type = [[proximity]];
					subject = -2;
					direct = 0;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 0;
							range = 1;
						};
						[1] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 2;
							range = 10;
						};
						[2] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 13;
							range = 0;
						};
						[3] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = true;
							minimum = 14;
							range = 0;
						};
						[4] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[active condition]];
							conditionTrue = false;
							minimum = 15;
							range = 0;
						};
						[5] = {
							type = [[display message]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							id = 5511;
							page = 3;
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 223;
				};
				[18] = {
					type = [[proximity]];
					subject = -2;
					direct = 18;
					actions = {
						[0] = {
							type = [[alter]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 0;
							alterType = [[hidden]];
							minimum = 22;
							range = 0;
						};
						[1] = {
							type = [[declare winner]];
							reflexive = true;
							inclusiveFilter = 0;
							exclusiveFilter = 0;
							subjectOverride = -1;
							directOverride = -1;
							owner = 0;
							delay = 60;
							player = 0;
							nextLevel = 2;
							text = [[Player leaves practice mission.]];
						};
					};
					flags = {
						trueOnlyOnce = true;
						initiallyTrue = false;
						hasBeenTrue = false;
						hex = 7;
					};
					location = 316;
				};
			};
			briefing = {
				[0] = {
					title = [[Omisha Station]];
					kind = [[object]];
					objectId = 0;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[Your first mission is to acquaint yourself with the basic control of our ships. At Omisha station we have a set of buoys and practice drones which you can use to gain experience with our technologies.Position your ship over a buoy to receive instructions on the exercise it offers.]];
				};
				[1] = {
					title = [[Command Buoy A]];
					kind = [[object]];
					objectId = 1;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10091^These two buoys offer a command exercise. A drone is stationed here, and you may practice sending it from one buoy to another.]];
				};
				[2] = {
					title = [[Build Moon]];
					kind = [[object]];
					objectId = 5;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[At this small moon you can practice building ships. Unlike real ships, the drones you build here will not be available for you to command.]];
				};
				[3] = {
					title = [[Combat Buoy A]];
					kind = [[object]];
					objectId = 6;
					visible = false;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10090^These three buoys have a series of practice drones, programmed to simulate combat. Don't worry about losing your ship here--the damage isn't real. When your shields appear depleted, you will simply lose power for a moment, and then be fully recharged.]];
				};
				[4] = {
					title = [[Extra Ships]];
					kind = [[object]];
					objectId = 15;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10091^At this buoy are two "extra" ships. When you feel comfortable selecting and controlling other ships, try experimenting with these two cruisers.^P1004^]];
				};
				[5] = {
					title = [[Omisha Jump Gate]];
					kind = [[object]];
					objectId = 18;
					visible = true;
					range = {
						x = 0;
						y = 0;
					};
					content = [[^P10073^When you feel you've had enough practice, navigate to the center of this jump gate to begin your first combat mission.]];
				};
			};
			starmap = {
				x = 288.000000;
				y = 302.000000;
			};
			par = {
				time = -1;
				kills = -1;
				ratio = 0.000000;
				float = 0;
			};
			angle = 0;
			startTime = 0;
			isTraining = false;
			prologue = [[]];
			epilogue = [[]];
			songId = 5001;
			movie = nil;
		};
	};
	race = {
		[0] = {
			id = 900;
			apparentColor = 0;
			illegalColors = 0;
			advantage = 1.398438;
			singular = [[Human]];
			plural = [[Humans]];
			military = [[UNS Resistance]];
			homeWorld = [[Earth]];
		};
		[1] = {
			id = 100;
			apparentColor = 9;
			illegalColors = 0;
			advantage = 2.148438;
			singular = [[Ishiman]];
			plural = [[Ishimans]];
			military = [[Ishiman Protectorate]];
			homeWorld = [[Ishima]];
		};
		[2] = {
			id = 800;
			apparentColor = 8;
			illegalColors = 0;
			advantage = 3.000000;
			singular = [[Elejeetian]];
			plural = [[Elejeetians]];
			military = [[Elejeetian Empire]];
			homeWorld = [[Elejee]];
		};
		[3] = {
			id = 400;
			apparentColor = 13;
			illegalColors = 0;
			advantage = 1.750000;
			singular = [[Obish]];
			plural = [[Obiards]];
			military = [[Free Worlds of Obain]];
			homeWorld = [[Obain]];
		};
		[4] = {
			id = 500;
			apparentColor = 7;
			illegalColors = 0;
			advantage = 1.750000;
			singular = [[Bazidanese]];
			plural = [[Bazidanese]];
			military = [[Bazidanese Star League]];
			homeWorld = [[Bazidan]];
		};
		[5] = {
			id = 200;
			apparentColor = 11;
			illegalColors = 0;
			advantage = 2.000000;
			singular = [[Cantharan]];
			plural = [[Cantharans]];
			military = [[Cantharan Order]];
			homeWorld = [[Cantharis]];
		};
		[6] = {
			id = 300;
			apparentColor = 0;
			illegalColors = 0;
			advantage = 1.000000;
			singular = [[Gaitori]];
			plural = [[Gaitori]];
			military = [[Gaitori Union]];
			homeWorld = [[Gaitor]];
		};
		[7] = {
			id = 600;
			apparentColor = 0;
			illegalColors = 0;
			advantage = 2.500000;
			singular = [[Salrilian]];
			plural = [[Salrilians]];
			military = [[Prophets of Salril]];
			homeWorld = [[Salril]];
		};
		[8] = {
			id = 700;
			apparentColor = 1;
			illegalColors = 0;
			advantage = 2.750000;
			singular = [[Audemedon]];
			plural = [[Audemedons]];
			military = [[Audemedon Axis]];
			homeWorld = [[Axis]];
		};
		[9] = {
			id = 1100;
			apparentColor = 0;
			illegalColors = 0;
			advantage = 0.500000;
			singular = [[Grolk]];
			plural = [[Grolk]];
			military = [[Grolk]];
			homeWorld = [[Space Force of Grolk]];
		};
		[10] = {
			id = 1200;
			apparentColor = 0;
			illegalColors = 0;
			advantage = 1.000000;
			singular = [[Unused Race 1]];
			plural = [[Plural]];
			military = [[Military]];
			homeWorld = [[Homeworld]];
		};
		[11] = {
			id = 1300;
			apparentColor = 0;
			illegalColors = 0;
			advantage = 2.000000;
			singular = [[Unused Race 2]];
			plural = [[Plural]];
			military = [[Military]];
			homeWorld = [[Homeworld]];
		};
		[12] = {
			id = 1400;
			apparentColor = 0;
			illegalColors = 0;
			advantage = 3.000000;
			singular = [[Unused Race 3]];
			plural = [[Plural]];
			military = [[Military]];
			homeWorld = [[Homeworld]];
		};
		[13] = {
			id = 1500;
			apparentColor = 0;
			illegalColors = 0;
			advantage = 4.000000;
			singular = [[Unused Race 4]];
			plural = [[Plural]];
			military = [[Military]];
			homeWorld = [[Homeworld]];
		};
		[14] = {
			id = 1600;
			apparentColor = 0;
			illegalColors = 0;
			advantage = 5.000000;
			singular = [[Unused Race 5]];
			plural = [[Plural]];
			military = [[Military]];
			homeWorld = [[Homeworld]];
		};
		[15] = {
			id = 1700;
			apparentColor = 0;
			illegalColors = 0;
			advantage = 6.000000;
			singular = [[Unused Race 6]];
			plural = [[Plural]];
			military = [[Military]];
			homeWorld = [[Homeworld]];
		};
	};
	sprites = {
		[606] = [[Strange Explosion?]];
		[525] = [[Carrier, Ishiman (Improved?)]];
		[509] = [[Gunship Ishiman]];
		[534] = [[Schooner Ishiman]];
		[1036] = [[Another Earth]];
		[526] = [[Blue Bullet]];
		[615] = [[Assault Transport, Audemedon]];
		[801] = [[Station Minor]];
		[518] = [[Supply Pack]];
		[607] = [[Destroyer, Audemedon]];
		[543] = [[Asteroid]];
		[535] = [[Battleship, Bazidanese (Hires)]];
		[551] = [[Gaitori Fighter]];
		[640] = [[Freighter, Ishiman]];
		[527] = [[Defense Drone, Ishiman]];
		[616] = [[Assault Transport, Gaitori]];
		[552] = [[New Sensor Relay Dish R&N]];
		[519] = [[Warp Flash]];
		[608] = [[Destroyer, Gaitori]];
		[544] = [[Asteroid Fragment Large]];
		[561] = [[Engineer, Gaitori]];
		[650] = [[cruiser, human]];
		[536] = [[Moor, Cantharan]];
		[528] = [[Missile, White & Yellow]];
		[1013] = [[Planet Sandyred]];
		[617] = [[Assault Transport, Human]];
		[570] = [[Jump Gate Module]];
		[609] = [[Destroyer, Human]];
		[545] = [[Astroid Fragment Small]];
		[562] = [[Engineer, Ishiman]];
		[651] = [[fighter, human]];
		[537] = [[Torpedo, Green]];
		[529] = [[Drone Cantharan]];
		[618] = [[Trooper, Audemedon]];
		[553] = [[Gunship, Gaitori]];
		[571] = [[Transport, Salrilian]];
		[660] = [[Light Cruiser, Grolk]];
		[546] = [[Astrominer, Ishiman]];
		[563] = [[Transport, Gaitori]];
		[652] = [[gunship, human]];
		[538] = [[Torpedo, Green]];
		[1014] = [[Planet Marble Streakedpurple]];
		[580] = [[Pulse Blue]];
		[619] = [[Trooper, Gaitori]];
		[572] = [[Battlesation, Salrilian]];
		[547] = [[Nate Photon 2 Green]];
		[635] = [[Battleship, Bazidanese]];
		[564] = [[Power Station]];
		[653] = [=[pulse, red [nl]]=];
		[539] = [[Ugly Shrinking Yellow Sphere]];
		[581] = [[Pulse Orange]];
		[645] = [[Gunfire]];
		[636] = [[Hybrid Ishiman/Obish]];
		[573] = [[Invisible]];
		[548] = [[Nate Photon 2 Yellow]];
		[641] = [[Orbital Shipyard]];
		[565] = [[Battleship, Obish]];
		[654] = [[Gate Ship]];
		[1015] = [[Planet Tiedye Lava]];
		[557] = [[Flack Explosion (6)]];
		[646] = [[Destroyer, Ishiman]];
		[582] = [[Cruiser, Elejeetian]];
		[590] = [[Nastiroid]];
		[549] = [[Marine, Human]];
		[637] = [[Assault Transport, Cantharan]];
		[566] = [[Fighter, Salrilian]];
		[655] = [[Sonic Sparkle]];
		[591] = [[Buoy]];
		[558] = [[Jump Gate Sprite]];
		[647] = [[Liner, Elejeetian]];
		[583] = [[Missile, Audemedon]];
		[554] = [[Original New Best Explosions]];
		[642] = [[Engineer, Cantharan]];
		[638] = [[Assault Troop Cantharan]];
		[567] = [[Transport, Obish]];
		[1016] = [[Planet Goldtone]];
		[656] = [[Fireball Small]];
		[559] = [[Assault Transport, Ishiman]];
		[648] = [[Carrier, Salrilian]];
		[584] = [[Pulse, Indigo Pulsing]];
		[576] = [[Battlecruiser, Audemedon]];
		[592] = [[Prison Salrilian]];
		[555] = [[Fat Gold Ship New Colors]];
		[568] = [[Escape Pod]];
		[657] = [[Battlecruiser, Grolk]];
		[593] = [[Human Turns]];
		[585] = [[Research Vessel, Ishiman]];
		[649] = [[carrier, human]];
		[643] = [[Bunker Station]];
		[577] = [[Fighter, Audemedon]];
		[1012] = [[Planet Bluegas]];
		[639] = [[Body, Cantharan]];
		[1017] = [[Planet Purpleyellow Trouble]];
		[569] = [[Gunship, Salrilian]];
		[658] = [=[Moor, Grolk [jail]]=];
		[586] = [[Jump Gate Inhibitor]];
		[594] = [[Human Waves]];
		[560] = [[Carrier, Gaitori]];
		[578] = [[Cruiser, Audemedon]];
		[556] = [[Meteor]];
		[644] = [[Carrier, Audemedon]];
		[595] = [[Prison Gaitori]];
		[659] = [[Flag Pod White]];
		[517] = [[Energy Pod]];
		[587] = [[Gate Ship?]];
		[579] = [[Gunship, Audemedon]];
		[1018] = [[Planet Brightgas]];
		[596] = [[Obiard Turns]];
		[499] = [[question mark]];
		[588] = [[Target Drone, Ishiman]];
		[597] = [[Obiard Waves]];
		[589] = [[Space Blob]];
		[1019] = [[Planet Redwhite Excitement]];
		[598] = [[Super Nova]];
		[1020] = [[Planet Cloudtones]];
		[599] = [[Ares/Apollo]];
		[1021] = [[Planet Fall]];
		[990] = [[Carrier Friend Placeholder]];
		[1022] = [[Planet Purtygas]];
		[991] = [[Cruiser Foe Placeholder]];
		[992] = [[Fighter Friend Placeholder]];
		[1023] = [[Planet Aqua Minerale]];
		[993] = [[Carrier Foe Placeholder]];
		[994] = [[Cruiser Friend Placeholder]];
		[1024] = [[Planet Bruised]];
		[995] = [[Fighter Foe Placeholder]];
		[996] = [[Transport Foe Placeholder]];
		[1025] = [[Planet Nastyswirl]];
		[1001] = [[Planet Marslike]];
		[997] = [[Transport Friend Placeholder]];
		[1026] = [[Planet Moldymud]];
		[1002] = [[Planet Jungle]];
		[1027] = [[Planet Uglypaint]];
		[1003] = [[Planet Yellow]];
		[1028] = [[Planet Calmpurple]];
		[1004] = [[Planet Graysplotch]];
		[1029] = [[Planet Yerrear]];
		[1030] = [[Planet Splatterpaint Pink]];
		[1005] = [[Planet Blueyellow Marble]];
		[1031] = [[Planet Marshmellow]];
		[1006] = [[Planet Bahamas]];
		[500] = [[Sprite Cursor]];
		[501] = [[Shovelnose, Brighter]];
		[1032] = [[Planet Clay]];
		[1007] = [[Planet Purplegas]];
		[510] = [[Fighter, Ishiman]];
		[502] = [[Green Wing New Colors]];
		[600] = [[Assault Transport, Salril]];
		[503] = [[New Shots]];
		[520] = [[Escort, Ishiman]];
		[1008] = [[Planet Lava]];
		[1200] = [[Habitat]];
		[601] = [[Transport, Audemedon]];
		[512] = [[Fighter, Cantharan]];
		[504] = [[Mike Explosion]];
		[1033] = [[Planet Sta-Puft]];
		[521] = [[Cruiser, Heavy, Ishiman]];
		[610] = [[Destroyer, Salrilian]];
		[513] = [[Space Suit]];
		[602] = [[Trooper, Salrilian]];
		[505] = [[Earth]];
		[530] = [[Dark Gunship 2]];
		[522] = [=[Red Pulse [Mike]]=];
		[611] = [[Small Blue Bucky Ball]];
		[1009] = [[Planet Saturny]];
		[514] = [[Cantharan Transport 2]];
		[603] = [[Destroyer, Heavy Cantharan]];
		[1010] = [[Planet Yellow Cookie]];
		[506] = [[Gunship Cantharan 2]];
		[620] = [[Twin Orbit Shot]];
		[1034] = [[Planet Purple Stripes Ugly]];
		[523] = [[Cruiser Heavy Cantharan]];
		[612] = [[Fighter, Cantharan]];
		[515] = [[Transport, Ishiman]];
		[604] = [[Gateship, Cantharan 2]];
		[540] = [[Moor, Cantharan]];
		[507] = [[Debris]];
		[532] = [[Cruiser, Obish]];
		[524] = [[Carrier Cantharan?]];
		[613] = [[Big Yellow Bucky Ball]];
		[1035] = [[Planet Dirtcloud]];
		[516] = [[Sun 3]];
		[541] = [[Missle Poofy Explosion]];
		[605] = [[Pulse, Aqua Ring Pulsing]];
		[508] = [[Aqua Pulse]];
		[533] = [[Schooner Cantharan]];
		[1011] = [[Planet Purpleblue]];
		[800] = [[Mothership]];
		[614] = [[Yellow Sparkle Shot]];
		[550] = [[Gaitori Cruiser]];
		[542] = [[Border Drone]];
	};
	sounds = {
		[519] = [[Space Shot 2:Burst:SShot 1]];
		[526] = [[thonk warp 1.1]];
		[533] = [[Rocket Launch]];
		[540] = [[missile elejeetian 4-zap slink1]];
		[2000] = [[HACK TEST--REMOVE!]];
		[569] = [[audemedon let’s go 8:22.snd]];
		[527] = [[Thonk Warp 1.2]];
		[534] = [[Astrocrunch]];
		[541] = [[missile, elejeetian sound 1]];
		[28853] = [[Beam Scan Modified]];
		[528] = [[Thonk Warp 1.3]];
		[500] = [[Shot C]];
		[535] = [[Teletype]];
		[542] = [[missile, elejeetian sound 3]];
		[2001] = [[Untitled Resource-1]];
		[543] = [[human laser 2]];
		[550] = [[handgun.05.cut]];
		[501] = [[Combo Exp 11kHz]];
		[529] = [[thonk warp 1.4]];
		[536] = [[flack]];
		[12558] = [[space scream]];
		[544] = [[human torpedo 1]];
		[31989] = [[Force Open Air Lock]];
		[551] = [[target deactivate beep.snd]];
		[502] = [[Nate Photon (from 245)]];
		[537] = [[audemedon missile 2]];
		[538] = [[audem missile 1]];
		[545] = [[human laser 3]];
		[552] = [[ricochet1]];
		[503] = [[explosn.02 short]];
		[510] = [[zoom change]];
		[539] = [[laser, elejeetian sound 2]];
		[511] = [[Very Naughty Beep]];
		[546] = [[human torpedo 2]];
		[553] = [[ricochet2]];
		[560] = [[Stingy Whip Laser Misc]];
		[504] = [[Wire Shot Low]];
		[547] = [[space blob sucks]];
		[505] = [[Nate Alien Phton 2 (from 233)]];
		[512] = [[Lectro Zap Mixed]];
		[554] = [[heavy destroyer (cantharan).8]];
		[561] = [[gaitori gunship.8:22]];
		[28007] = [[Zap Slink 3 Modified]];
		[562] = [[lectrocute 8:11.snd]];
		[506] = [[Morse Code Received High]];
		[513] = [[Space Woosh@11KhZ]];
		[520] = [[fighter launch]];
		[548] = [[space blob dies]];
		[17406] = [[Placeholder Sound]];
		[549] = [[target drone laser]];
		[514] = [[Get Energy]];
		[521] = [[Lectro Zap Mixed Low]];
		[507] = [[register.08 22x8]];
		[556] = [[salril destroyer]];
		[563] = [[buzz short 8:11.snd]];
		[570] = [[engineer works 8:22.snd]];
		[557] = [[human destroyer]];
		[515] = [[Big Explosion]];
		[508] = [[Combo Beep (Fax.01:Computer.04)]];
		[522] = [[Stealth Off]];
		[564] = [[pulse beam+ 8:11.snd]];
		[571] = [[pop]];
		[558] = [[audemedon destroyer]];
		[530] = [[Strike Long Phz copy]];
		[509] = [[computer.01 short]];
		[516] = [[downsampled rumbleburst]];
		[523] = [[Stealth On]];
		[565] = [[fire belch 8:22.snd]];
		[559] = [[gaitori destroyer]];
		[531] = [[Zap Impact A copy]];
		[524] = [[Spark Thump]];
		[10312] = [[Let's Go]];
		[517] = [[Warp In]];
		[566] = [[gaitori let's go 8:22.snd]];
		[567] = [[cantharan let's go 8:22.snd]];
		[532] = [[Missile Hit Mix]];
		[525] = [[Beep Buzzer copy.22]];
		[518] = [[Warp Out]];
		[9800] = [[jumpgate opens hifi copy]];
		[568] = [[salrilian let's go 8:22.snd]];
	};
	images = {
		[1062] = [[Cruiser, Heavy, Ishiman]];
		[10045] = [[Jommo]];
		[509] = [[Ares Logo Top]];
		[1152] = [[cruiser, elejeetian]];
		[10022] = [[human portrait]];
		[10084] = [[Jump Gate Inhibitor]];
		[1148] = [[Fighter, Audemedon]];
		[2000] = [[Image 2000]];
		[10057] = [[Obital Shipyard]];
		[1063] = [[Cruiser, Heavy Cantharan]];
		[1130] = [[Destoyer, Ishiman]];
		[10034] = [[Asteroid Data Detailed]];
		[1090] = [[Battleship, Obish Data]];
		[1149] = [[Carrier, Audemedon]];
		[1014] = [[fighter, ishiman]];
		[2001] = [[Image 2001]];
		[520] = [[Key Back]];
		[1127] = [[Liner, Elejeetian]];
		[1087] = [[Transport, Gaitori]];
		[521] = [[Key Accel]];
		[10023] = [[Elejeetian Portrait]];
		[1015] = [[fighter, cantharan]];
		[1038] = [[cruiser, gaitori]];
		[2002] = [[Ambrosia for Credits]];
		[1244] = [[Destroyer Gaitori Portrait]];
		[1105] = [[Bunker Station]];
		[522] = [[Key Stop]];
		[1065] = [[Gunship, Gaitori]];
		[1271] = [[Outpost Portrait]];
		[1128] = [[Astrominer Ishiman Detailed]];
		[523] = [[Key Rotate Counter]];
		[1020] = [[gunship, ishiman portrait 2]];
		[128] = [[PLACEHOLDER GRAPHIC]];
		[1043] = [[cruiser, obish]];
		[2003] = [[Ares Credit Tag]];
		[1110] = [[Research Vessel]];
		[524] = [[Rotate Clockwise]];
		[1129] = [[Escape Pod]];
		[129] = [[PLACEHOLDER GRAPHIC 2]];
		[10090] = [[Practice Drone]];
		[10024] = [[obiard portrait]];
		[1089] = [[Transport, Obish]];
		[525] = [[Key Weapon 1]];
		[10001] = [[Habitat Station]];
		[1111] = [[cruiser, salrilian detailed]];
		[530] = [[Key Computer Controls]];
		[526] = [[Key Weapon 2]];
		[1094] = [[border drone data]];
		[10040] = [[Los Ran Map]];
		[1018] = [[gunship, cantharan]];
		[527] = [[Key Special]];
		[2005] = [[Scroll Text Background 1]];
		[1251] = [[assault transport, audemedon]];
		[1068] = [[battleship, bazidanese data]];
		[528] = [[Key Superlight]];
		[1095] = [[Engineer, Gaitori]];
		[10091] = [[Buoy]];
		[10025] = [[salrilian portrait]];
		[1185] = [[Astrosmash Detail]];
		[1046] = [[carrier cantharan detailed]];
		[2006] = [[Scroll Text Background 1]];
		[10002] = [[Ares Portrait]];
		[529] = [[Key Commands]];
		[1113] = [[Fighter, Salrilian data]];
		[10037] = [[battleship, bazid unknwn data]];
		[1140] = [[assault transport, salrilian]];
		[1001] = [[cruiser ishiman detailed]];
		[1096] = [[Engineer, Ishiman]];
		[2007] = [[Scroll Text Background 1]];
		[1114] = [[Carrier, Salrilian]];
		[1141] = [[Transport, Salrilian]];
		[10030] = [[Jumpgate]];
		[10026] = [[new name for apollo]];
		[1025] = [[transport, ishiman]];
		[1048] = [[carrier ishiman detailed]];
		[1115] = [[Power Station Data]];
		[10077] = [[Battlestation, Salrilian]];
		[10015] = [[relay station]];
		[1026] = [[transport, cantharan]];
		[1165] = [[cruiser, human]];
		[1030] = [[fighter, gaitori]];
		[1120] = [[Assault Transport, Cantharan]];
		[1076] = [[moor cantharan data]];
		[1139] = [[Gunship, Salrilian]];
		[10031] = [[Ares Orbits Earth]];
		[1143] = [[Cruiser, Audemedon]];
		[10027] = [[strange stuff on screen]];
		[1166] = [[fighter, human]];
		[501] = [[Status Left]];
		[1081] = [[Astrominer Ishiman Detailed]];
		[1121] = [[Engineer, Cantharan]];
		[10016] = [[gaitori data detailed]];
		[1167] = [[gunship, human]];
		[10020] = [[cantharan data detailed]];
		[1055] = [[def drone, ishiman]];
		[10028] = [[Confrontation]];
		[8000] = [[Starmap]];
		[504] = [[Big Panel Left]];
		[1168] = [[carrier, human]];
		[1060] = [[Schooner Cantharan Detailed]];
		[10044] = [[Bazidanese Portrait]];
		[505] = [[Box Top]];
		[44604] = [[QT badge]];
		[1119] = [[Freighter, Ishiman]];
		[1079] = [[border drone data]];
		[1150] = [[Gunship, Audemedon]];
		[10017] = [[Audemedon Portrait]];
		[10021] = [[ishiman data detailed]];
		[510] = [[Image 510]];
		[506] = [[Box Right]];
		[1057] = [[drone, cantharan portrait 2]];
		[511] = [[Image 511]];
		[507] = [[Box Bottom]];
		[10029] = [[apollo leaves earth]];
		[10033] = [[thrntz]];
		[1008] = [[cruiser, cantharan]];
		[512] = [[Status Right]];
		[508] = [[Image 508]];
		[1102] = [[Assault Transport, Ishiman Data]];
	};
};
